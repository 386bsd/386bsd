.\" Copyright (c) 1994 William F. Jolitz, TeleMuse
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This software is a component of "386BSD" developed by 
.\"	William F. Jolitz, TeleMuse.
.\" 4. Neither the name of the developer nor the name "386BSD"
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\" 5. Non-commercial distribution of this complete file in either source and/or
.\"    binary form at no charge to the user (such as from an official Internet 
.\"    archive site) is permitted. 
.\" 6. Commercial distribution and sale of this complete file in either source
.\"    and/or binary form on any media, including that of floppies, tape, or 
.\"    CD-ROM, or through a per-charge download such as that of a BBS, is not 
.\"    permitted without specific prior written permission.
.\" 7. Non-commercial and/or commercial distribution of an incomplete, altered, 
.\"    or otherwise modified file in either source and/or binary form is not 
.\"    permitted.
.\"
.\" THIS SOFTWARE IS A COMPONENT OF 386BSD DEVELOPED BY WILLIAM F. JOLITZ 
.\" AND IS INTENDED FOR RESEARCH AND EDUCATIONAL PURPOSES ONLY. THIS 
.\" SOFTWARE SHOULD NOT BE CONSIDERED TO BE A COMMERCIAL PRODUCT. 
.\" THE DEVELOPER URGES THAT USERS WHO REQUIRE A COMMERCIAL PRODUCT 
.\" NOT MAKE USE OF THIS WORK.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPER ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE DEVELOPER BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: rlist.9,v 1.1 94/10/19 18:33:27 bill Exp $
.\"
.Dd August 29, 1994
.Dt RLIST 9
.Os 386BSD 1
.Sh NAME
.Nm rlist
.Nd resource list
.Sh SYNOPSIS
.Fd #include """rlist.h"""
.Ft void
.Fn rlist_free "struct rlist **rlp" "unsigned start" "unsigned end"
.Ft int
.Fn rlist_alloc "struct rlist **rlp" "unsigned size" "unsigned *loc"
.Ft void
.Fn rlist_destroy "struct rlist **rlp"
.Sh DESCRIPTION
Resource lists are a sparse data abstraction used to record the use
of real and abstract resources employed by the kernel program. Resource
lists rely on dynamic memory
(see
.Xr malloc 9
) to avoid compile-time scaling of space to
hold fragmentation. Since resources may need to be allocated during
interrupt level, or during times when memory can't be allocated (like
when reclaiming memory pages), resource lists must be allocated without
blocking (however, they may block on the free of resource).
.Pp
Each
resource list is denoted by a head pointer, which initially points
to a null list, and filled with resource by "freeing" space into it
that can be allocated subsequently. If the resource list itself must be
reclaimed, it must be destroyed by the service employing the resource.
.Pp
The
.Fn rlist_alloc
function allocates a segment of resource of a requested size if available.
The
.Fn rlist_free
function assigns resource for use in the list, possibly blocking.
The
.Fn rlist_destroy
function is used to reclaim the storage used in implementing the resource
list itself.
.Sh RETURN VALUES
The
.Fn rlist_alloc
function returns
a success or failure indication on return.
.Sh SEE ALSO
.Xr malloc 9
