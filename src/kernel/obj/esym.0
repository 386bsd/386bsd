ESYM(9)                386BSD Kernel Programmer's Manual               ESYM(9)

NNAAMMEE
     eessyymm - kernel external symbol table

SSYYNNOOPPSSIISS
     ##iinncclluuddee ""eessyymm..hh""

     eessyymm__bbiinndd(_s_y_m_b_o_l)

     eessyymm__uunnbbiinndd(_s_y_m_b_o_l)

     _v_o_i_d *
     eessyymm__ffeettcchh(_s_y_m_b_o_l)

DDEESSCCRRIIPPTTIIOONN
     Services provide by modules other than the core kernel module (see
     kern(9) ) that may or may not be loaded in the kernel program may be
     accessed from all other modules via the external symbol table.  This is
     the way an optionally, dynamically bound symbol can be accessed from any
     part of the kernel, unlike the statically bound symbols in the reset of
     the program.

     Symbols are manually entered into the external symbol table with the
     eessyymm__bbiinndd() function, that associates the symbol name with a specific
     kernel address.  These addresses can be then recovered via the
     eessyymm__ffeettcchh() function, which obtains the address associated with a symbol
     of the given name which was already bound. Symbols can be rebound by
     breaking the binding with the eessyymm__uunnbbiinndd() function, allowing the symbol
     to be bound differently with another eessyymm__bbiinndd() call.

     While symbols are bound explicitly by the kernel modules implementing the
     services used elsewhere, service clients implicitly use the eessyymm__ffeettcchh()
     function via inline stub functions and macros present in include files
     (located adjacent to the function prototypes for the functions
     implemented).

     The external symbol table does not use dynamic memory allocation or any
     blocking resource, thus is usable anywhere in the kernel program.

RREETTUURRNN VVAALLUUEESS
     The eessyymm__ffeettcchh() function returns an address of the symbol if present;
     otherwise a null address is returned.

SSEEEE AALLSSOO
     kern(9)

386BSD Release 1.0              August 29, 1994                              1


















