.\" Copyright (c) 1985, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)rint.3	5.1 (Berkeley) 5/2/91
.\"
.Dd May 2, 1991
.Dt RINT 3
.Os
.Sh NAME
.Nm rint
.Nd and round-to-closest integer functions
.Sh SYNOPSIS
.Fd #include <math.h>
.Ft double
.Fn rint "double x"
.Sh DESCRIPTION
The
.Fn rint
function finds the integer (represented as a double precision number)
nearest to
.Fa x
in the direction of the prevailing rounding mode.
.Sh NOTES
On a
.Tn VAX ,
.Fn rint x
is equivalent to adding half to the magnitude
and then rounding towards zero.
.Pp
In the default rounding mode, to nearest,
on a machine that conforms to
.Tn IEEE
754,
.Fn rint x
is the integer nearest
.Fa x
with the additional stipulation
that if
.Li |rint(x)\-x|=1/2
then
.Fn rint x
is even.
Other rounding modes can make
.Fn rint
act like
.Fn floor ,
or like
.Fn ceil ,
or round towards zero.
.Pp
Another way to obtain an integer near
.Fa x
is to declare (in C)
.Bd -literal -offset indent
double x;\0\0\0\0 int k;\0\0\0\0k\0=\0x;
.Ed
.Pp
Most C compilers round
.Fa x
towards 0 to get the integer
.Fa k ,
but
some do otherwise.
If in doubt, use
.Fn floor ,
.Fn ceil ,
or
.Fn rint
first, whichever you intend.
Also note that, if x is larger than
.Fa k
can accommodate, the value of
.Fa k
and the presence or absence of an integer overflow are hard to
predict.
.Sh SEE ALSO
.Xr abs 3 ,
.Xr fabs 3 ,
.Xr ceil 3 ,
.Xr floor 3 ,
.Xr ieee 3 ,
.Xr math 3
.Sh HISTORY
A
.Fn rint
function appeared in
.At v6 .
