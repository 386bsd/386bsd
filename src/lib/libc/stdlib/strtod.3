.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)strtod.3	5.3 (Berkeley) 6/29/91
.\"
.Dd June 29, 1991
.Dt STRTOD 3
.Os
.Sh NAME
.Nm strtod
.Nd convert
.Tn ASCII
string to double
.Sh SYNOPSIS
.Fd #include <stdlib.h>
.Ft double
.Fn strtod "const char *nptr" "char **endptr"
.Sh DESCRIPTION
The
.Fn strtod
function converts the initial portion of the string 
pointed to by
.Fa nptr
to
.Em double
representation.
.Pp
The expected form of the string is an optional plus (``+'') or minus
sign (``-'') followed by a sequence of digits optionally containing
a decimal-point character, optionally followed by an exponent.
An exponent consists of an ``E'' or ``e'', followed by an optional plus
or minus sign, followed by a sequence of digits.
.Pp
Leading white-space characters in the string (as defined by the
.Xr isspace 3
function) are skipped.
.Sh RETURN VALUES
The
.Fn strtod
function returns the converted value, if any.
.Pp
If
.Fa endptr
is not
.Dv NULL ,
a pointer to the character after the last character used
in the conversion is stored in the location referenced by
.Fa endptr .
.Pp
If no conversion is performed, zero is returned and the value of
.Fa nptr
is stored in the location referenced by
.Fa endptr .
.Pp
If the correct value would cause overflow, plus or minus
.Dv HUGE_VAL
is returned (according to the sign of the value), and
.Dv ERANGE
is stored in
.Va errno .
If the correct value would cause underflow, zero is
returned and
.Dv ERANGE
is stored in 
.Va errno .
.Sh ERRORS
.Bl -tag -width [ERANGE]
.It Bq Er ERANGE
Overflow or underflow occurred.
.Sh SEE ALSO
.Xr atof 3 ,
.Xr atoi 3 ,
.Xr atol 3 ,
.Xr strtol 3 ,
.Xr strtoul 3
.Sh STANDARDS
The
.Fn strtod
function
conforms to
.St -ansiC .
.Sh BUGS
This manual page represents intent instead of actual practice.
The
.Fn strtod
function is not currently available.
