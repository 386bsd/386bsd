.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)_exit.2	6.6 (Berkeley) 7/25/91
.\"
.Dd July 25, 1991
.Dt EXIT 2
.Os BSD 4
.Sh NAME
.Nm _exit
.Nd terminate the calling process
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft void volatile
.Fn _exit "int status"
.Sh DESCRIPTION
The
.Fn _exit
function
terminates a process with the following consequences:
.Bl -bullet
.It
All of the descriptors open in the calling process are closed.
This may entail delays, for example, waiting for output to drain;
a process in this state may not be killed, as it is already dying.
.It
If the parent process of the calling process has an outstanding
.Xr wait
call
or is interested in the
.Dv SIGCHLD
signal,
it is notified of the calling process's termination and
the
.Em status
area is set as defined by
.Xr wait 2 .
.It
The parent process-ID of all of the calling process's existing child
processes are set to 1; the initialization process
(see the DEFINITIONS section of
.Xr intro 2 )
inherits each of these processes.
Any stopped children are restarted with a hangup signal
.Pq Dv SIGHUP .
.El
.Pp
Most C programs call the library routine
.Xr exit 3 ,
which flushes buffers, closes streams, unlinks temporary files, etc.,
before
calling
.Fn _exit .
.Sh RETURN VALUE
.Fn _exit
can never return.
.Sh SEE ALSO
.Xr fork 2 ,
.Xr sigvec 2 ,
.Xr wait 2 ,
.Xr exit 3
.Sh HISTORY
An
.Nm exit
function call appeared in
.At v6 .
