Cleansnag	assorted.c	/^Cleansnag(from, to, all, flag)$/
FIX	pl_6.c	/^#define FIX(x, m) (m - ptr->x > count \\$/
Mmain	main.c	/^main(argc, argv)$/
Scroll	pl_7.c	/^Scroll()$/
Signal	pl_7.c	/^Signal(fmt, ship, a, b, c, d)$/
Sync	sync.c	/^Sync()$/
Write	sync.c	/^Write(type, ship, isstr, a, b, c, d)$/
acceptboard	pl_5.c	/^acceptboard()$/
acceptcombat	pl_3.c	/^acceptcombat()$/
acceptmove	pl_5.c	/^acceptmove()$/
acceptsignal	pl_4.c	/^acceptsignal()$/
adjustview	pl_7.c	/^adjustview()$/
angle	misc.c	/^angle(dr, dc)$/
boardcomp	dr_1.c	/^boardcomp()$/
boarding	parties.c	/^boarding(from, isdefense)$/
centerview	pl_7.c	/^centerview()$/
changesail	pl_4.c	/^changesail()$/
checksails	dr_3.c	/^checksails()$/
checkup	dr_2.c	/^checkup()$/
child	pl_1.c	/^child()$/
choke	pl_1.c	/^choke()$/
cleanupscreen	pl_7.c	/^cleanupscreen()$/
closeon	dr_2.c	/^closeon(from, to, command, ta, ma, af)$/
closestenemy	misc.c	/^closestenemy(from, side, anyship)$/
colours	misc.c	/^colours(sp)$/
compcombat	dr_1.c	/^compcombat()$/
couldwin	dr_2.c	/^#define couldwin(f,t) (f->specs->crew2 > t->specs-/
distance	misc.c	/^#define distance(x,y) (abs(x) >= abs(y) ? abs(x) +/
downview	pl_7.c	/^downview()$/
dr_main	dr_main.c	/^dr_main()$/
draw_board	pl_7.c	/^draw_board()$/
draw_screen	pl_7.c	/^draw_screen()$/
draw_slot	pl_7.c	/^draw_slot()$/
draw_stat	pl_7.c	/^draw_stat()$/
draw_turn	pl_7.c	/^draw_turn()$/
draw_view	pl_7.c	/^draw_view()$/
endprompt	pl_7.c	/^endprompt(flag)$/
eyeball	pl_4.c	/^eyeball(ship)$/
fightitout	dr_1.c	/^fightitout(from, to, key)$/
grap	dr_4.c	/^grap(from, to)$/
grapungrap	pl_3.c	/^grapungrap()$/
gunsbear	misc.c	/^gunsbear(from, to)		\/* checks for target bow or s/
initialize	pl_main.c	/^initialize()$/
initscreen	pl_7.c	/^initscreen()$/
isolated	dr_3.c	/^isolated(ship)$/
leave	pl_1.c	/^leave(conditions)$/
leftview	pl_7.c	/^leftview()$/
lo_main	lo_main.c	/^lo_main()$/
loadplayer	pl_6.c	/^loadplayer()$/
log	misc.c	/^log(s)$/
lookout	pl_4.c	/^lookout()$/
makesignal	sync.c	/^makesignal(from, fmt, ship, a, b, c)$/
maxmove	game.c	/^maxmove(ship, dir, fs)$/
maxturns	game.c	/^maxturns(ship, af)$/
meleeing	parties.c	/^meleeing(from, to)$/
mensent	dr_5.c	/^mensent(from, to, crew, captured, pc, isdefense)$/
move	dr_2.c	/^move(p, ship, dir, row, col, drift)$/
moveall	dr_3.c	/^moveall()		\/* move all comp ships *\/$/
newturn	pl_7.c	/^newturn()$/
next	dr_1.c	/^next()$/
parties	pl_5.c	/^parties(crew, to, isdefense, buf)$/
pl_main	pl_main.c	/^pl_main()$/
play	pl_2.c	/^play()$/
portside	misc.c	/^portside(from, on, quick)$/
prizecheck	dr_2.c	/^prizecheck()$/
prompt	pl_7.c	/^prompt(p, ship)$/
push	dr_3.c	/^push(from, to)$/
range	misc.c	/^range(from, to)$/
reload	dr_3.c	/^reload()$/
repair	pl_6.c	/^repair()$/
resolve	dr_1.c	/^resolve()$/
rightview	pl_7.c	/^rightview()$/
rmend	dr_2.c	/^rmend(str)$/
saywhat	pl_4.c	/^saywhat(sp, flag)$/
score	dr_2.c	/^score(movement, ship, to, onlytemp)$/
sendbp	dr_3.c	/^sendbp(from, to, sections, isdefense)$/
sgetch	pl_7.c	/^sgetch(p, ship, flag)$/
sgetstr	pl_7.c	/^sgetstr(pr, buf, n)$/
step	dr_3.c	/^step(com, sp, moved)$/
stillmoving	dr_3.c	/^stillmoving(k)$/
strend	dr_2.c	/^strend(str)$/
strike	assorted.c	/^strike(ship, from)$/
subtract	dr_5.c	/^subtract(from, totalfrom, crewfrom, fromcap, pcfro/
susp	pl_7.c	/^susp()$/
sync_close	sync.c	/^sync_close(remove)$/
sync_exists	sync.c	/^sync_exists(game)$/
sync_open	sync.c	/^sync_open()$/
sync_update	sync.c	/^sync_update(type, ship, a, b, c, d)$/
table	assorted.c	/^table(rig, shot, hittable, on, from, roll)$/
thinkofgrapples	dr_2.c	/^thinkofgrapples()$/
toughmelee	dr_3.c	/^toughmelee(ship, to, isdefense, count)$/
try	dr_2.c	/^try(command, temp, ma, ta, af, vma, dir, f, t, hig/
turned	pl_6.c	/^turned()$/
turnfirst	pl_5.c	/^#define turnfirst(x) (*x == 'r' || *x == 'l')$/
unboard	parties.c	/^unboard(ship, to, isdefense)$/
unfoul	dr_1.c	/^unfoul()$/
unfoulplayer	pl_3.c	/^unfoulplayer()$/
ungrap	dr_4.c	/^ungrap(from, to)$/
upview	pl_7.c	/^upview()$/
