BIT	signal.c	/^#define BIT(a) (1<<((a)-1))$/
Mmain	main.c	/^main(argc,argv)$/
adjtime	object.c	/^adjtime(tim)$/
adjustcvalues	global.c	/^adjustcvalues(itm,arg)$/
annihilate	monster.c	/^annihilate()$/
appraise	store.c	/^appraise(gemstone)$/
banktitle	store.c	/^banktitle(str)$/
beep	io.c	/^beep()$/
bit	nap.c	/^#define bit(_a) (1<<((_a)-1))$/
bot_hpx	display.c	/^bot_hpx()$/
bot_linex	display.c	/^bot_linex()$/
bot_spellx	display.c	/^bot_spellx()$/
botside	display.c	/^botside()$/
botsub	display.c	/^botsub(idx,str)$/
bottomdo	display.c	/^bottomdo()$/
bottomgold	display.c	/^bottomgold()$/
bottomhp	display.c	/^bottomhp()$/
bottomline	display.c	/^bottomline()$/
bottomspell	display.c	/^bottomspell()$/
cannedlevel	create.c	/^cannedlevel(k)$/
cast	monster.c	/^cast()$/
cgood	monster.c	/^int cgood(x,y,itm,monst)$/
checkgen	create.c	/^checkgen()$/
checkloss	monster.c	/^checkloss(x)$/
cl_dn	io.c	/^cl_dn(x,y)$/
cl_line	io.c	/^cl_line(x,y)$/
cl_up	io.c	/^cl_up(x,y)$/
clearvt100	io.c	/^clearvt100()$/
cnsitm	store.c	/^cnsitm()$/
cntlc	signal.c	/^cntlc()	\/* what to do for a ^C *\/$/
creategem	global.c	/^creategem()$/
createitem	monster.c	/^createitem(it,arg)$/
createmonster	monster.c	/^createmonster(mon)$/
cursor	io.c	/^cursor(x,y)$/
cursors	io.c	/^cursors()$/
dcount	diag.c	/^dcount(l)$/
diag	diag.c	/^diag()$/
diagdrawscreen	diag.c	/^diagdrawscreen()$/
died	scores.c	/^died(x)$/
diedlog	scores.c	/^diedlog()$/
diedsub	scores.c	/^diedsub(x)$/
direct	monster.c	/^direct(spnum,dam,str,arg)$/
dirpoly	monster.c	/^dirpoly(spnum)$/
dirsub	monster.c	/^dirsub(x,y)$/
dnd_2hed	store.c	/^dnd_2hed()$/
dnd_hed	store.c	/^dnd_hed()$/
dnditem	store.c	/^dnditem(i)$/
dndstore	store.c	/^dndstore()$/
doraw	io.c	/^#define doraw(_a) if(!rawflg){++rawflg;saveeof=_a./
draws	display.c	/^draws(xmin,xmax,ymin,ymax)$/
drawscreen	display.c	/^drawscreen()$/
drop_object	global.c	/^drop_object(k)$/
dropgold	monster.c	/^dropgold(amount)$/
dropobj	main.c	/^dropobj()$/
dropsomething	monster.c	/^dropsomething(monst)$/
eat	create.c	/^eat(xx,yy)$/
eatcookie	main.c	/^eatcookie()$/
emptyhanded	global.c	/^emptyhanded()$/
enchantarmor	global.c	/^enchantarmor()$/
enchweapon	global.c	/^enchweapon()$/
fch	moreobj.c	/^fch(how,x)$/
fcheat	diag.c	/^fcheat()$/
fillmonst	create.c	/^fillmonst(what)$/
fillmroom	create.c	/^fillmroom(n,what,arg)$/
fillroom	create.c	/^fillroom(what,arg)$/
finditem	object.c	/^finditem(itm)$/
flush_buf	io.c	/^flush_buf()$/
flushall	tok.c	/^flushall()$/
fntchange	moreobj.c	/^fntchange(how)$/
fortune	fortune.c	/^char *fortune(file)$/
froom	create.c	/^froom(n,itm,arg)$/
fsorry	diag.c	/^fsorry()$/
fullhit	monster.c	/^fullhit(xx)$/
genmonst	monster.c	/^genmonst()$/
getchar	io.c	/^getchar()$/
getlevel	savelev.c	/^getlevel()$/
getpassword	global.c	/^getpassword()$/
getplid	scores.c	/^getplid(nam)$/
gettokstr	global.c	/^gettokstr(str)$/
getyn	global.c	/^getyn()$/
godirect	monster.c	/^godirect(spnum,dam,str,delay,cshow)$/
greedy	diag.c	/^greedy()$/
gtty	io.c	/^#define gtty(_a,_b) ioctl(_a,TCGETA,_b)$/
handsfull	store.c	/^handsfull()$/
hashewon	scores.c	/^hashewon()$/
help	help.c	/^help()$/
hitm	monster.c	/^hitm(x,y,amt)$/
hitmonster	monster.c	/^hitmonster(x,y)$/
hitplayer	monster.c	/^hitplayer(x,y)$/
ifblind	monster.c	/^ifblind(x,y)$/
ignore	object.c	/^ignore()$/
init_term	io.c	/^init_term()$/
iopts	object.c	/^iopts()$/
isconfuse	monster.c	/^isconfuse()$/
lappend	io.c	/^lappend(str)$/
lcreat	io.c	/^lcreat(str)$/
letter1	bill.c	/^static letter1()$/
letter2	bill.c	/^static letter2()$/
letter3	bill.c	/^static letter3()$/
letter4	bill.c	/^static letter4()$/
letter5	bill.c	/^static letter5()$/
letter6	bill.c	/^static letter6()$/
lflush	io.c	/^lflush ()$/
lgetc	io.c	/^long lgetc()$/
lgetl	io.c	/^char *lgetl()$/
lgetw	io.c	/^char *lgetw()$/
lookforobject	object.c	/^lookforobject()$/
lopen	io.c	/^lopen(str)$/
loseexperience	global.c	/^loseexperience(x)$/
losehp	global.c	/^losehp(x)$/
loseint	monster.c	/^loseint()$/
loselevel	global.c	/^loselevel()$/
losemhp	global.c	/^losemhp(x)$/
losemspells	global.c	/^losemspells(x)$/
losespells	global.c	/^losespells(x)$/
lprcat	io.c	/^lprcat(str)$/
lprint	io.c	/^lprint(x)$/
lprintf	io.c	/^lprintf(str)$/
lrclose	io.c	/^lrclose()$/
lrfill	io.c	/^lrfill(adr,num)$/
lrint	io.c	/^long lrint()$/
lwclose	io.c	/^lwclose()$/
lwrite	io.c	/^lwrite(buf,len)$/
mailbill	bill.c	/^mailbill()$/
makeboard	scores.c	/^makeboard()$/
makecode	display.c	/^#define makecode(_a,_b,_c) (((_a)<<16) + ((_b)<<8)/
makemaze	create.c	/^ makemaze(k)$/
makemonst	global.c	/^makemonst(lev)$/
makeobject	create.c	/^makeobject(j)$/
makeplayer	create.c	/^makeplayer()$/
mmove	movem.c	/^mmove(aa,bb,cc,dd)$/
more	global.c	/^more()$/
movemonst	movem.c	/^movemonst()$/
movemt	movem.c	/^movemt(i,j)$/
moveplayer	display.c	/^moveplayer(dir)$/
movsphere	movem.c	/^movsphere()$/
nap	nap.c	/^nap(x)$/
napms	nap.c	/^napms(x)	\/* do nothing *\/$/
nearbymonst	global.c	/^nearbymonst()$/
new1sub	scores.c	/^new1sub(score,i,whoo,taxes)$/
new2sub	scores.c	/^new2sub(score,i,whoo,whyded)$/
newcavelevel	create.c	/^newcavelevel(x)$/
newgame	io.c	/^newgame()$/
newobject	monster.c	/^newobject(lev,i)$/
newscore	scores.c	/^newscore(score, whoo, whyded, winner)$/
newsphere	monster.c	/^newsphere(x,y,dir,life)$/
nogold	store.c	/^static void nogold()$/
nospell	monster.c	/^nospell(x,monst)$/
nullf	nap.c	/^static  nullf()$/
oaltar	moreobj.c	/^oaltar()$/
obank	store.c	/^obank()$/
obank2	store.c	/^obank2()$/
obanksub	store.c	/^obanksub()$/
obook	object.c	/^obook()$/
obottomless	object.c	/^obottomless()$/
ochest	moreobj.c	/^ochest()$/
ocookie	object.c	/^ocookie()$/
odeadthrone	moreobj.c	/^odeadthrone()$/
oelevator	object.c	/^oelevator(dir)$/
ofountain	moreobj.c	/^ofountain()$/
ogold	object.c	/^ogold(arg)$/
ohear	moreobj.c	/^ohear()$/
ohome	object.c	/^ohome()$/
ointerest	store.c	/^ointerest()$/
olrs	store.c	/^olrs()$/
omirror	object.c	/^omirror()$/
omnidirect	monster.c	/^omnidirect(spnum,dam,str)$/
oorb	object.c	/^oorb()$/
openhelp	help.c	/^openhelp()$/
opit	object.c	/^opit()$/
opotion	object.c	/^opotion(pot)$/
oschool	store.c	/^oschool()$/
oscroll	object.c	/^oscroll(typ)$/
ostairs	object.c	/^ostairs(dir)$/
ostatue	object.c	/^ostatue()$/
oteleport	object.c	/^oteleport(err)$/
othrone	moreobj.c	/^othrone(arg)$/
otradepost	store.c	/^otradepost()$/
otradhead	store.c	/^static otradhead()$/
outofstock	store.c	/^outofstock()$/
packweight	global.c	/^packweight()$/
parse	main.c	/^parse()$/
parse2	main.c	/^parse2()$/
paytaxes	scores.c	/^long paytaxes(x)$/
pocketfull	global.c	/^pocketfull()$/
positionplayer	global.c	/^positionplayer()$/
putchar	io.c	/^int putchar(c)$/
qshowstr	main.c	/^qshowstr()$/
quaff	main.c	/^quaff()$/
quaffpotion	object.c	/^quaffpotion(pot)$/
quit	global.c	/^quit()$/
raiseexperience	global.c	/^raiseexperience(x)$/
raisehp	global.c	/^raisehp(x)$/
raiselevel	global.c	/^raiselevel()$/
raisemhp	global.c	/^raisemhp(x)$/
raisemspells	global.c	/^raisemspells(x)$/
raisespells	global.c	/^raisespells(x)$/
randmonst	main.c	/^randmonst()$/
read_scroll	object.c	/^read_scroll(typ)$/
readboard	scores.c	/^readboard()$/
readbook	object.c	/^readbook(lev)$/
readnum	main.c	/^unsigned long readnum(mx)$/
readopts	tok.c	/^readopts()$/
readscr	main.c	/^readscr()$/
recalc	global.c	/^recalc()$/
regen	regen.c	/^regen()$/
restoregame	diag.c	/^restoregame(fname)$/
retcont	help.c	/^retcont()$/
rmsphere	monster.c	/^rmsphere(x,y)$/
rnd	global.c	/^rnd(x)$/
run	main.c	/^run(dir)$/
rund	global.c	/^rund(x)$/
s2choose	signal.c	/^static s2choose()	\/* text to be displayed if ^C d/
savegame	diag.c	/^savegame(fname)$/
savelevel	savelev.c	/^savelevel()$/
scbr	io.c	/^scbr()$/
sch_hed	store.c	/^sch_hed()$/
seemagic	display.c	/^seemagic(arg)$/
seepage	display.c	/^seepage()$/
set_score_output	io.c	/^set_score_output()$/
sethard	tok.c	/^sethard(hard)$/
sethp	create.c	/^sethp(flg)$/
setupvt100	io.c	/^setupvt100()$/
sgam	signal.c	/^sgam()$/
shou	scores.c	/^shou(x)$/
show1	main.c	/^show1(idx,str2)$/
show1cell	display.c	/^show1cell(x,y)$/
show3	main.c	/^show3(index)$/
showallscores	scores.c	/^showallscores()$/
showcell	display.c	/^showcell(x,y)$/
showeat	main.c	/^showeat()$/
showplayer	display.c	/^showplayer()$/
showquaff	main.c	/^showquaff()$/
showread	main.c	/^showread()$/
showscores	scores.c	/^showscores()$/
showstr	main.c	/^showstr()$/
showwear	main.c	/^showwear()$/
showwield	main.c	/^showwield()$/
sigbus	signal.c	/^static void sigbus()	{ sigpanic(SIGBUS); }$/
sigemt	signal.c	/^static void sigemt()	{ sigpanic(SIGEMT); }$/
sigfpe	signal.c	/^static void sigfpe()	{ sigpanic(SIGFPE); }$/
sigill	signal.c	/^static void sigill()	{ sigpanic(SIGILL); }$/
sigiot	signal.c	/^static void sigiot()	{ sigpanic(SIGIOT); }$/
sigpanic	signal.c	/^sigpanic(sig)$/
sigpipe	signal.c	/^static void sigpipe()	{ sigpanic(SIGPIPE); }$/
sigsegv	signal.c	/^static void sigsegv()	{ sigpanic(SIGSEGV); }$/
sigsetup	signal.c	/^sigsetup()$/
sigsys	signal.c	/^static void sigsys()	{ sigpanic(SIGSYS); }$/
sigterm	signal.c	/^static void sigterm()	{ sigpanic(SIGTERM); }$/
sigtrap	signal.c	/^static void sigtrap()	{ sigpanic(SIGTRAP); }$/
sncbr	io.c	/^sncbr()$/
something	monster.c	/^something(level)$/
sortboard	scores.c	/^sortboard()$/
spattack	monster.c	/^spattack(x,xx,yy)$/
speldamage	monster.c	/^speldamage(x)$/
sphboom	monster.c	/^sphboom(x,y)$/
sprintf	io.c	/^sprintf(str)$/
standout	io.c	/^standout(str)$/
stealsomething	global.c	/^stealsomething()$/
stty	io.c	/^#define stty(_a,_b) ioctl(_a,TCSETA,_b)$/
szero	main.c	/^szero(str)$/
t_endup	main.c	/^t_endup(count)$/
t_setup	main.c	/^t_setup(count)$/
take	global.c	/^take(itm,arg)$/
tdirect	monster.c	/^tdirect(spnum)$/
tmcapcnv	io.c	/^char *tmcapcnv(sd,ss)  $/
treasureroom	create.c	/^treasureroom(lv)$/
troom	create.c	/^troom(lv,xsize,ysize,tx,ty,glyph)$/
tstop	signal.c	/^tstop() \/* control Y	*\/$/
unraw	io.c	/^#define unraw(_a) _a.c_cc[VMIN]=saveeof;_a.c_cc[VT/
va_arg	io.c	/^#define va_arg(plist,mode) ((mode *)(plist += size/
va_end	io.c	/^#define va_end(plist)$/
va_start	io.c	/^#define va_start(plist) plist = (char *) &va_alist/
vxy	monster.c	/^vxy(x,y)$/
wear	main.c	/^wear()$/
welcome	help.c	/^welcome()$/
whatitem	main.c	/^whatitem(str)$/
wield	main.c	/^wield()	$/
winshou	scores.c	/^winshou()$/
writeboard	scores.c	/^writeboard()$/
ycwi	main.c	/^ycwi(x)$/
ydhi	main.c	/^ydhi(x)$/
yylex	tok.c	/^yylex()$/
