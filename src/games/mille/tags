CTRL	move.c	/^#define	CTRL(c)		(c - 'A' + 1)$/
Mmille	mille.c	/^main(ac, av)$/
account	move.c	/^account(card)$/
calcmove	comp.c	/^calcmove()$/
check_ext	misc.c	/^check_ext(forcomp)$/
check_go	move.c	/^check_go() {$/
check_more	misc.c	/^check_more() {$/
die	mille.c	/^die() {$/
domove	move.c	/^domove()$/
error	misc.c	/^error(str, arg)$/
extrapolate	end.c	/^extrapolate(pp)$/
finalscore	end.c	/^finalscore(pp)$/
flush_input	misc.c	/^flush_input()$/
getcard	misc.c	/^getcard()$/
getmove	move.c	/^getmove()$/
getyn	misc.c	/^getyn(promptno)$/
haspicked	move.c	/^haspicked(pp)$/
init	init.c	/^init() {$/
isrepair	types.c	/^isrepair(card)$/
newboard	init.c	/^newboard() {$/
newscore	init.c	/^newscore() {$/
playcard	move.c	/^playcard(pp)$/
prboard	print.c	/^prboard() {$/
prompt	move.c	/^prompt(promptno)$/
prscore	print.c	/^prscore(for_real)$/
readch	misc.c	/^readch()$/
rest_f	save.c	/^rest_f(file)$/
roll	roll.c	/^roll(ndie, nsides)$/
rub	mille.c	/^rub() {$/
safety	types.c	/^safety(card)$/
save	save.c	/^save() {$/
show_card	print.c	/^show_card(y, x, c, lc)$/
show_score	print.c	/^show_score(y, x, s, ls)$/
shuffle	init.c	/^shuffle() {$/
sort	move.c	/^sort(hand)$/
undoex	end.c	/^undoex() {$/
varpush	varpush.c	/^varpush(file, func)$/
