Mmain	main.c	/^main(argc, argv)$/
add_exp	level.c	/^add_exp(e, promotion)$/
add_mazes	level.c	/^add_mazes()$/
add_to_pack	pack.c	/^add_to_pack(obj, pack, condense)$/
add_traps	trap.c	/^add_traps()$/
addch	curses.c	/^addch(ch)$/
addstr	curses.c	/^addstr(str)$/
aggravate	monster.c	/^aggravate()$/
aim_monster	monster.c	/^aim_monster(monster)$/
alloc_object	object.c	/^alloc_object()$/
bounce	zap.c	/^bounce(ball, dir, row, col, r)$/
byebye	init.c	/^byebye()$/
c_object_for_wizard	object.c	/^c_object_for_wizard()$/
call_it	pack.c	/^call_it()$/
can_move	move.c	/^can_move(row1, col1, row2, col2) $/
can_turn	move.c	/^can_turn(nrow, ncol)$/
center	score.c	/^center(row, buf)$/
check_duplicate	pack.c	/^check_duplicate(obj, pack)$/
check_gold_seeker	spec_hit.c	/^check_gold_seeker(monster)$/
check_hunger	move.c	/^check_hunger(msg_only)$/
check_imitator	spec_hit.c	/^check_imitator(monster)$/
check_message	message.c	/^check_message()$/
check_up	level.c	/^check_up()$/
clean_up	init.c	/^clean_up(estr)$/
clear	curses.c	/^clear()$/
clear_buffers	curses.c	/^clear_buffers()$/
clear_level	level.c	/^clear_level()$/
clrtoeol	curses.c	/^clrtoeol()$/
cnfs	use.c	/^cnfs()$/
coin_toss	random.c	/^coin_toss()$/
connect_rooms	level.c	/^connect_rooms(room1, room2)$/
cough_up	spec_hit.c	/^cough_up(monster)$/
create_monster	monster.c	/^create_monster()$/
crmode	curses.c	/^crmode()$/
damage_for_strength	hit.c	/^damage_for_strength()$/
darken_room	room.c	/^darken_room(rn)$/
disappear	spec_hit.c	/^disappear(monster)$/
do_args	init.c	/^do_args(argc, argv)$/
do_opts	init.c	/^do_opts()$/
do_put_on	ring.c	/^do_put_on(ring, on_left)$/
do_shell	room.c	/^do_shell()$/
do_wear	pack.c	/^do_wear(obj)$/
do_wield	pack.c	/^do_wield(obj)$/
dr_course	room.c	/^dr_course(monster, entering, row, col)$/
drain_life	spec_hit.c	/^drain_life()$/
draw_magic_map	room.c	/^draw_magic_map()$/
draw_simple_passage	level.c	/^draw_simple_passage(row1, col1, row2, col2, dir)$/
drop	pack.c	/^drop()$/
drop_check	level.c	/^drop_check()$/
drop_level	spec_hit.c	/^drop_level()$/
eat	use.c	/^eat()$/
edit_opts	room.c	/^edit_opts()$/
endwin	curses.c	/^endwin()$/
env_get_value	init.c	/^env_get_value(s, e, add_blank)$/
error_save	init.c	/^error_save()$/
fight	hit.c	/^fight(to_the_death)$/
fill_it	level.c	/^fill_it(rn, do_rec_de)$/
fill_out_level	level.c	/^fill_out_level()$/
flame_broil	spec_hit.c	/^flame_broil(monster)$/
flit	monster.c	/^flit(monster)$/
flop_weapon	throw.c	/^flop_weapon(weapon, row, col)$/
free_object	object.c	/^free_object(obj)$/
free_stuff	object.c	/^free_stuff(objlist)$/
freeze	spec_hit.c	/^freeze(monster)$/
get_armor_class	object.c	/^get_armor_class(obj)$/
get_com_id	inventory.c	/^get_com_id(index, ch)$/
get_damage	hit.c	/^get_damage(ds, r)$/
get_desc	inventory.c	/^get_desc(obj, desc)$/
get_dir	spec_hit.c	/^get_dir(srow, scol, drow, dcol)$/
get_dir_rc	hit.c	/^get_dir_rc(dir, row, col, allow_off_screen)$/
get_dungeon_char	room.c	/^get_dungeon_char(row, col)$/
get_ench_color	use.c	/^get_ench_color()$/
get_exp_level	level.c	/^get_exp_level(e)$/
get_food	object.c	/^get_food(obj, force_ration)$/
get_hit_chance	hit.c	/^get_hit_chance(weapon)$/
get_id_table	inventory.c	/^get_id_table(obj)$/
get_input_line	message.c	/^get_input_line(prompt, insert, buf, if_cancelled, /
get_letter_object	object.c	/^get_letter_object(ch)$/
get_mask_char	room.c	/^get_mask_char(mask)$/
get_number	hit.c	/^get_number(s)$/
get_oth_room	room.c	/^get_oth_room(rn, row, col)$/
get_rand	random.c	/^get_rand(x, y)$/
get_room_number	room.c	/^get_room_number(row, col)$/
get_term_info	curses.c	/^get_term_info()$/
get_thrown_at_monster	throw.c	/^get_thrown_at_monster(obj, dir, row, col)$/
get_value	score.c	/^get_value(obj)$/
get_w_damage	hit.c	/^get_w_damage(obj)$/
get_wand_and_ring_materials	inventory.c	/^get_wand_and_ring_materials()$/
get_weapon_damage	hit.c	/^get_weapon_damage(weapon)$/
get_zapped_monster	zap.c	/^get_zapped_monster(dir, row, col)$/
gmc	monster.c	/^gmc(monster)$/
gmc_row_col	monster.c	/^gmc_row_col(row, col)$/
go_blind	use.c	/^go_blind()$/
gold_at	spec_hit.c	/^gold_at(row, col)$/
gr_armor	object.c	/^gr_armor(obj)$/
gr_dir	move.c	/^gr_dir()$/
gr_monster	monster.c	/^gr_monster(monster, mn)$/
gr_obj_char	monster.c	/^gr_obj_char()$/
gr_object	object.c	/^gr_object()$/
gr_potion	object.c	/^gr_potion(obj)$/
gr_ring	ring.c	/^gr_ring(ring, assign_wk)$/
gr_room	room.c	/^gr_room()$/
gr_row_col	room.c	/^gr_row_col(row, col, mask)$/
gr_scroll	object.c	/^gr_scroll(obj)$/
gr_wand	object.c	/^gr_wand(obj)$/
gr_weapon	object.c	/^gr_weapon(obj, assign_wk)$/
gr_what_is	object.c	/^gr_what_is()$/
hallucinate	use.c	/^hallucinate()$/
has_amulet	pack.c	/^has_amulet()$/
has_been_touched	save.c	/^has_been_touched(saved_time, mod_time)$/
heal	move.c	/^heal()$/
hide_boxed_passage	level.c	/^hide_boxed_passage(row1, col1, row2, col2, n)$/
hold_monster	use.c	/^hold_monster()$/
hp_raise	level.c	/^hp_raise()$/
id_all	score.c	/^id_all()$/
id_com	inventory.c	/^id_com()$/
id_trap	trap.c	/^id_trap()$/
id_type	inventory.c	/^id_type()$/
idntfy	use.c	/^idntfy()$/
imitating	spec_hit.c	/^imitating(row, col)$/
init	init.c	/^init(argc, argv)$/
init_str	init.c	/^init_str(str, dflt)$/
initscr	curses.c	/^initscr()$/
insert_score	score.c	/^insert_score(scores, n_names, n_name, rank, n, mon/
inv_armor_weapon	inventory.c	/^inv_armor_weapon(is_weapon)$/
inv_rings	ring.c	/^inv_rings()$/
inventory	inventory.c	/^inventory(pack, mask)$/
is_all_connected	room.c	/^is_all_connected()$/
is_digit	message.c	/^is_digit(ch)$/
is_direction	move.c	/^is_direction(c, d)$/
is_pack_letter	pack.c	/^is_pack_letter(c, mask)$/
is_passable	move.c	/^is_passable(row, col)$/
is_vowel	score.c	/^is_vowel(ch)$/
kick_into_pack	pack.c	/^kick_into_pack()$/
killed_by	score.c	/^killed_by(monster, other)$/
lget_number	hit.c	/^lget_number(s)$/
light_passage	room.c	/^light_passage(row, col)$/
light_up_room	room.c	/^light_up_room(rn)$/
m_confuse	spec_hit.c	/^m_confuse(monster)$/
make_level	level.c	/^make_level()$/
make_maze	level.c	/^make_maze(r, c, tr, br, lc, rc)$/
make_party	object.c	/^make_party()$/
make_room	level.c	/^make_room(rn, r1, r2, r3)$/
make_scroll_titles	inventory.c	/^make_scroll_titles()$/
mask_pack	pack.c	/^mask_pack(pack, mask)$/
mask_room	level.c	/^mask_room(rn, row, col, mask)$/
md_cbreak_no_echo_nonl	machdep.c	/^md_cbreak_no_echo_nonl(on)$/
md_control_keybord	machdep.c	/^md_control_keybord(mode)$/
md_df	machdep.c	/^md_df(fname)$/
md_exit	machdep.c	/^md_exit(status)$/
md_gct	machdep.c	/^md_gct(rt_buf)$/
md_gdtcf	machdep.c	/^md_gdtcf()$/
md_get_file_id	machdep.c	/^md_get_file_id(fname)$/
md_getenv	machdep.c	/^md_getenv(name)$/
md_gfmt	machdep.c	/^md_gfmt(fname, rt_buf)$/
md_gln	machdep.c	/^md_gln()$/
md_gseed	machdep.c	/^md_gseed()$/
md_heed_signals	machdep.c	/^md_heed_signals()$/
md_ignore_signals	machdep.c	/^md_ignore_signals()$/
md_link_count	machdep.c	/^md_link_count(fname)$/
md_lock	machdep.c	/^md_lock(l)$/
md_malloc	machdep.c	/^md_malloc(n)$/
md_shell	machdep.c	/^md_shell(shell)$/
md_sleep	machdep.c	/^md_sleep(nsecs)$/
md_slurp	machdep.c	/^md_slurp()$/
md_tstp	machdep.c	/^md_tstp()$/
message	message.c	/^message(msg, intrpt)$/
mix_colors	inventory.c	/^mix_colors()$/
mix_random_rooms	level.c	/^mix_random_rooms()$/
mon_can_go	monster.c	/^mon_can_go(monster, row, col)$/
mon_damage	hit.c	/^mon_damage(monster, damage)$/
mon_hit	hit.c	/^mon_hit(monster)$/
mon_name	monster.c	/^mon_name(monster)$/
mon_sees	monster.c	/^mon_sees(monster, row, col)$/
move	curses.c	/^move(row, col)$/
move_confused	monster.c	/^move_confused(monster)$/
move_mon_to	monster.c	/^move_mon_to(monster, row, col)$/
move_onto	move.c	/^move_onto()$/
mtry	monster.c	/^mtry(monster, row, col)$/
multiple_move_rogue	move.c	/^multiple_move_rogue(dirch)$/
mv_1_monster	monster.c	/^mv_1_monster(monster, row, col)$/
mv_aquatars	monster.c	/^mv_aquatars()$/
mv_mons	monster.c	/^mv_mons()$/
mvaddch	curses.c	/^mvaddch(row, col, ch)$/
mvaddstr	curses.c	/^mvaddstr(row, col, str)$/
mvinch	curses.c	/^mvinch(row, col)$/
name_cmp	score.c	/^name_cmp(s1, s2)$/
name_of	object.c	/^name_of(obj)$/
next_avail_ichar	pack.c	/^next_avail_ichar()$/
next_to_something	move.c	/^next_to_something(drow, dcol)$/
nickize	score.c	/^nickize(buf, score, n_name)$/
no_room_for_monster	monster.c	/^no_room_for_monster(rn)$/
noecho	curses.c	/^noecho()$/
nonl	curses.c	/^nonl()$/
object_at	object.c	/^object_at(pack, row, col)$/
one_move_rogue	move.c	/^one_move_rogue(dirch, pickup)$/
onintr	init.c	/^onintr()$/
opt_erase	room.c	/^opt_erase(i)$/
opt_go	room.c	/^opt_go(i)$/
opt_show	room.c	/^opt_show(i)$/
pack_count	pack.c	/^pack_count(new_obj)$/
pack_letter	pack.c	/^pack_letter(prompt, mask)$/
pad	message.c	/^pad(s, n)$/
party_monsters	monster.c	/^party_monsters(rn, n)$/
party_objects	room.c	/^party_objects(rn)$/
pick_up	pack.c	/^pick_up(row, col, status)$/
place_at	object.c	/^place_at(obj, row, col)$/
plant_gold	object.c	/^plant_gold(row, col, is_maze)$/
play_level	play.c	/^play_level()$/
player_init	init.c	/^player_init()$/
potion_heal	use.c	/^potion_heal(extra)$/
pr_com_id	inventory.c	/^pr_com_id(ch)$/
pr_motion_char	inventory.c	/^pr_motion_char(ch)$/
print_stats	message.c	/^print_stats(stat_mask)$/
put_amulet	object.c	/^put_amulet()$/
put_char_at	curses.c	/^put_char_at(row, col, ch)$/
put_cursor	curses.c	/^put_cursor(row, col)$/
put_door	level.c	/^put_door(rm, dir, row, col)$/
put_gold	object.c	/^put_gold()$/
put_m_at	monster.c	/^put_m_at(row, col, monster)$/
put_mons	monster.c	/^put_mons()$/
put_objects	object.c	/^put_objects()$/
put_on_ring	ring.c	/^put_on_ring()$/
put_player	level.c	/^put_player(nr)$/
put_scores	score.c	/^put_scores(monster, other)$/
put_st_char	curses.c	/^put_st_char(ch)$/
put_stairs	object.c	/^put_stairs()$/
quaff	use.c	/^quaff()$/
quit	score.c	/^quit(from_intrpt)$/
r_index	message.c	/^r_index(str, ch, last)$/
r_read	save.c	/^r_read(fp, buf, n)$/
r_write	save.c	/^r_write(fp, buf, n)$/
rand_around	throw.c	/^rand_around(i, r, c)$/
rand_percent	random.c	/^rand_percent(percentage)$/
rand_place	object.c	/^rand_place(obj)$/
read_pack	save.c	/^read_pack(pack, fp, is_rogue)$/
read_scroll	use.c	/^read_scroll()$/
read_string	save.c	/^read_string(s, fp)$/
recursive_deadend	level.c	/^recursive_deadend(rn, offsets, srow, scol)$/
refresh	curses.c	/^refresh()$/
reg_move	move.c	/^reg_move()$/
relight	use.c	/^relight()$/
remessage	message.c	/^remessage(c)$/
remove_ring	ring.c	/^remove_ring()$/
rest	move.c	/^rest(count)$/
restore	save.c	/^restore(fname)$/
rgetchar	message.c	/^rgetchar()$/
ring_stats	ring.c	/^ring_stats(pr)$/
rogue_can_see	monster.c	/^rogue_can_see(row, col)$/
rogue_damage	hit.c	/^rogue_damage(d, monster, other)$/
rogue_hit	hit.c	/^rogue_hit(monster, force_hit)$/
rogue_is_around	monster.c	/^rogue_is_around(row, col)$/
rrandom	random.c	/^rrandom()$/
rust	spec_hit.c	/^rust(monster)$/
rw_dungeon	save.c	/^rw_dungeon(fp, rw)$/
rw_id	save.c	/^rw_id(id_table, fp, n, wr)$/
rw_rooms	save.c	/^rw_rooms(fp, rw)$/
s_con_mon	hit.c	/^s_con_mon(monster)$/
same_col	level.c	/^same_col(room1, room2)$/
same_row	level.c	/^same_row(room1, room2)$/
save_game	save.c	/^save_game()$/
save_into_file	save.c	/^save_into_file(sfile)$/
save_screen	message.c	/^save_screen()$/
search	trap.c	/^search(n, is_auto)$/
seek_gold	spec_hit.c	/^seek_gold(monster)$/
sell_pack	score.c	/^sell_pack()$/
sf_error	score.c	/^sf_error()$/
show_average_hp	level.c	/^show_average_hp()$/
show_monsters	monster.c	/^show_monsters()$/
show_objects	object.c	/^show_objects()$/
show_traps	trap.c	/^show_traps()$/
single_inv	inventory.c	/^single_inv(ichar)$/
sound_bell	message.c	/^sound_bell()$/
special_hit	spec_hit.c	/^special_hit(monster)$/
srrandom	random.c	/^srrandom(x)$/
standend	curses.c	/^standend()$/
standout	curses.c	/^standout()$/
start_window	init.c	/^start_window()$/
steal_gold	spec_hit.c	/^steal_gold(monster)$/
steal_item	spec_hit.c	/^steal_item(monster)$/
sting	spec_hit.c	/^sting(monster)$/
stop_window	init.c	/^stop_window()$/
swap	level.c	/^#define swap(x,y) {t = x; x = y; y = t;}$/
take_a_nap	use.c	/^take_a_nap()$/
take_from_pack	pack.c	/^take_from_pack(obj, pack)$/
take_off	pack.c	/^take_off()$/
tc_cmget	curses.c	/^tc_cmget()$/
tc_gets	curses.c	/^tc_gets(ibuf, tcstr)$/
tc_gnum	curses.c	/^tc_gnum(ibuf, n)$/
tc_gtdata	curses.c	/^tc_gtdata(fp, buf)$/
tc_tname	curses.c	/^tc_tname(fp, term, buf)$/
tele	use.c	/^tele()$/
tele_away	zap.c	/^tele_away(monster)$/
throw	throw.c	/^throw()$/
throw_at_monster	throw.c	/^throw_at_monster(monster, weapon)$/
to_hit	hit.c	/^to_hit(obj)$/
trap_at	trap.c	/^trap_at(row, col)$/
trap_player	trap.c	/^trap_player(row, col)$/
try_to_cough	spec_hit.c	/^try_to_cough(row, col, obj)$/
tstp	curses.c	/^tstp()$/
turn_passage	move.c	/^turn_passage(dir, fast)$/
un_put_on	ring.c	/^un_put_on(ring)$/
unblind	use.c	/^unblind()$/
unconfuse	use.c	/^unconfuse()$/
uncurse_all	use.c	/^uncurse_all()$/
unhallucinate	use.c	/^unhallucinate()$/
unwear	pack.c	/^unwear(obj)$/
unwield	pack.c	/^unwield(obj)$/
vanish	use.c	/^vanish(obj, rm, pack)$/
visit_rooms	room.c	/^visit_rooms(rn)$/
wait_for_ack	pack.c	/^wait_for_ack()$/
wake_room	monster.c	/^wake_room(rn, entering, row, col)$/
wake_up	monster.c	/^wake_up(monster)$/
wanderer	monster.c	/^wanderer()$/
wdrain_life	zap.c	/^wdrain_life(monster)$/
wear	pack.c	/^wear()$/
wield	pack.c	/^wield()$/
win	score.c	/^win()$/
wizardize	zap.c	/^wizardize()$/
wrefresh	curses.c	/^wrefresh(scr)$/
write_pack	save.c	/^write_pack(pack, fp)$/
write_string	save.c	/^write_string(s, fp)$/
xxx	score.c	/^xxx(st)$/
xxxx	score.c	/^xxxx(buf, n)$/
zap_monster	zap.c	/^zap_monster(monster, kind)$/
zapp	zap.c	/^zapp()$/
