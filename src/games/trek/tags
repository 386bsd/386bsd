Mmain	main.c	/^main(argc, argv)$/
abandon	abandon.c	/^abandon()$/
attack	attack.c	/^attack(resting)$/
autover	autover.c	/^autover()$/
bmove	utility.c	/^char *bmove(a, b, l)$/
capture	capture.c	/^capture()$/
cgetc	cgetc.c	/^char	cgetc(i)$/
check_out	check_out.c	/^check_out(device)$/
checkcond	checkcond.c	/^checkcond()$/
compkldist	compkl.c	/^compkldist(f)$/
computer	computer.c	/^computer()$/
concat	utility.c	/^char *concat(s1, s2, s3)$/
damage	damage.c	/^damage(dev1, dam)$/
damaged	damaged.c	/^damaged(dev)$/
dcrept	dcrept.c	/^dcrept()$/
destruct	destruct.c	/^destruct()$/
dock	dock.c	/^dock()$/
dumpgame	dumpgame.c	/^dumpgame()$/
dumpme	dumpme.c	/^dumpme(flag)$/
dumpssradio	dumpssradio.c	/^dumpssradio()$/
events	events.c	/^events(warp)$/
franf	ranf.c	/^double franf()$/
getcodi	getcodi.c	/^getcodi(co, di)$/
getcodpar	getpar.c	/^struct cvntab *getcodpar(s, tab)$/
getfltpar	getpar.c	/^double getfltpar(s)$/
getintpar	getpar.c	/^getintpar(s)$/
getstrpar	getpar.c	/^getstrpar(s, r, l, t)$/
getynpar	getpar.c	/^getynpar(s)$/
help	help.c	/^help()$/
impulse	impulse.c	/^impulse()$/
initquad	initquad.c	/^initquad(f)$/
kalc	computer.c	/^kalc(tqx, tqy, tsx, tsy, dist)$/
killb	kill.c	/^killb(qx, qy)$/
killd	kill.c	/^killd(x, y, f)$/
killk	kill.c	/^killk(ix, iy)$/
kills	kill.c	/^kills(x, y, f)$/
klmove	klmove.c	/^klmove(fl)$/
length	utility.c	/^length(s)$/
lose	lose.c	/^lose(why)$/
lrscan	lrscan.c	/^lrscan()$/
move	move.c	/^double move(ramflag, course, time, speed)$/
myreset	play.c	/^myreset()$/
nova	nova.c	/^nova(x, y)$/
out	out.c	/^out(dev)$/
phaser	phaser.c	/^phaser()$/
play	play.c	/^play()$/
prkalc	computer.c	/^prkalc(course, dist)$/
ram	ram.c	/^ram(ix, iy)$/
randcourse	torped.c	/^randcourse(n)$/
ranf	ranf.c	/^ranf(max)$/
readdelim	getpar.c	/^readdelim(d)$/
readdump	dumpgame.c	/^readdump(fd1)$/
reschedule	schedule.c	/^reschedule(e1, offset)$/
rest	rest.c	/^rest()$/
restartgame	dumpgame.c	/^restartgame()$/
schedule	schedule.c	/^struct event *schedule(type, offset, x, y, z)$/
score	score.c	/^long score()$/
sector	initquad.c	/^sector(x, y)$/
selectklingon	capture.c	/^struct kling	*selectklingon()$/
sequal	utility.c	/^sequal(a, b)$/
setup	setup.c	/^setup()$/
setwarp	setwarp.c	/^setwarp()$/
shield	shield.c	/^shield(f)$/
skiptonl	getpar.c	/^skiptonl(c)$/
snova	snova.c	/^snova(x, y)$/
sortkl	compkl.c	/^sortkl()$/
srscan	srscan.c	/^srscan(f)$/
syserr	utility.c	/^syserr(p0, p1, p2, p3, p4, p5)$/
systemname	systemname.c	/^char *systemname(q1)$/
testnl	getpar.c	/^testnl()$/
testterm	getpar.c	/^testterm()$/
torped	torped.c	/^torped()$/
undock	dock.c	/^undock()$/
unschedule	schedule.c	/^unschedule(e1)$/
visual	visual.c	/^visual()$/
warp	warp.c	/^warp(fl, c, d)$/
win	win.c	/^win()$/
xresched	schedule.c	/^xresched(e1, ev1, factor)$/
xsched	schedule.c	/^struct event *xsched(ev1, factor, x, y, z)$/
