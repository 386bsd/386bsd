Mmain	main.c	/^main(argc, argv)$/
command	main.c	/^command(top)$/
get	main.c	/^get(argc, argv)$/
getcmd	main.c	/^getcmd(name)$/
getusage	main.c	/^getusage(s)$/
help	main.c	/^help(argc, argv)$/
intr	main.c	/^intr()$/
makeargv	main.c	/^makeargv()$/
makerequest	tftp.c	/^makerequest(request, name, tp, mode)$/
modecmd	main.c	/^modecmd(argc, argv)$/
nak	tftp.c	/^nak(error)$/
printstats	tftp.c	/^printstats(direction, amount)$/
put	main.c	/^put(argc, argv)$/
putusage	main.c	/^putusage(s)$/
quit	main.c	/^quit()$/
r_init	tftpsubs.c	/^struct tftphdr *r_init() { return rw_init(1); }   /
read_ahead	tftpsubs.c	/^read_ahead(file, convert)$/
readit	tftpsubs.c	/^readit(file, dpp, convert)$/
recvfile	tftp.c	/^recvfile(fd, name, mode)$/
rw_init	tftpsubs.c	/^rw_init(x)              \/* init for either read-a/
sendfile	tftp.c	/^sendfile(fd, name, mode)$/
setascii	main.c	/^setascii(argc, argv)$/
setbinary	main.c	/^setbinary(argc, argv)$/
setmode	main.c	/^setmode(newmode)$/
setpeer	main.c	/^setpeer(argc, argv)$/
setrexmt	main.c	/^setrexmt(argc, argv)$/
settimeout	main.c	/^settimeout(argc, argv)$/
settrace	main.c	/^settrace()$/
setverbose	main.c	/^setverbose()$/
startclock	tftp.c	/^startclock() {$/
status	main.c	/^status(argc, argv)$/
stopclock	tftp.c	/^stopclock() {$/
synchnet	tftpsubs.c	/^synchnet(f)$/
tail	main.c	/^tail(filename)$/
timer	tftp.c	/^timer()$/
tpacket	tftp.c	/^tpacket(s, tp, n)$/
w_init	tftpsubs.c	/^struct tftphdr *w_init() { return rw_init(0); }   /
write_behind	tftpsubs.c	/^write_behind(file, convert)$/
writeit	tftpsubs.c	/^writeit(file, dpp, ct, convert)$/
