ArchFindArchive	arch.c	/^ArchFindArchive (ar, archName)$/
ArchFindMember	arch.c	/^ArchFindMember (archive, member, arhPtr, mode)$/
ArchStatMember	arch.c	/^ArchStatMember (archive, member, hash)$/
Arch_FindLib	arch.c	/^Arch_FindLib (gn, path)$/
Arch_Init	arch.c	/^Arch_Init ()$/
Arch_LibOODate	arch.c	/^Arch_LibOODate (gn)$/
Arch_MTime	arch.c	/^Arch_MTime (gn)$/
Arch_MemMTime	arch.c	/^Arch_MemMTime (gn)$/
Arch_ParseArchive	arch.c	/^Arch_ParseArchive (linePtr, nodeLst, ctxt)$/
Arch_Touch	arch.c	/^Arch_Touch (gn)$/
Arch_TouchLib	arch.c	/^Arch_TouchLib (gn)$/
BufExpand	buf.c	/^#define BufExpand(bp,nb) \\$/
Buf_AddBytes	buf.c	/^Buf_AddBytes (bp, numBytes, bytesPtr)$/
Buf_Destroy	buf.c	/^Buf_Destroy (buf, freeData)$/
Buf_Discard	buf.c	/^Buf_Discard (bp, numBytes)$/
Buf_GetAll	buf.c	/^Buf_GetAll (bp, numBytesPtr)$/
Buf_GetByte	buf.c	/^Buf_GetByte (bp)$/
Buf_GetBytes	buf.c	/^Buf_GetBytes (bp, numBytes, bytesPtr)$/
Buf_Init	buf.c	/^Buf_Init (size)$/
Buf_OvAddByte	buf.c	/^Buf_OvAddByte (bp, byte)$/
Buf_Size	buf.c	/^Buf_Size (buf)$/
Buf_UngetByte	buf.c	/^Buf_UngetByte (bp, byte)$/
Buf_UngetBytes	buf.c	/^Buf_UngetBytes (bp, numBytes, bytesPtr)$/
CompatInterrupt	compat.c	/^CompatInterrupt (signo)$/
CompatMake	compat.c	/^CompatMake (gn, pgn)$/
CompatRunCommand	compat.c	/^CompatRunCommand (cmd, gn)$/
Compat_Run	compat.c	/^Compat_Run(targs)$/
CondCvtArg	cond.c	/^CondCvtArg(str)$/
CondDoDefined	cond.c	/^CondDoDefined (argLen, arg)$/
CondDoExists	cond.c	/^CondDoExists (argLen, arg)$/
CondDoMake	cond.c	/^CondDoMake (argLen, arg)$/
CondDoTarget	cond.c	/^CondDoTarget (argLen, arg)$/
CondE	cond.c	/^CondE(doEval)$/
CondF	cond.c	/^CondF(doEval)$/
CondGetArg	cond.c	/^CondGetArg (linePtr, argPtr, func, parens)$/
CondPushBack	cond.c	/^CondPushBack (t)$/
CondStrMatch	cond.c	/^CondStrMatch(string, pattern)$/
CondT	cond.c	/^CondT(doEval)$/
CondToken	cond.c	/^CondToken(doEval)$/
Cond_End	cond.c	/^Cond_End()$/
Cond_Eval	cond.c	/^Cond_Eval (line)$/
DBPRINTF	job.c	/^#define DBPRINTF(fmt, arg) if (DEBUG(JOB)) printf /
DieHorribly	main.c	/^DieHorribly()$/
DirExpandCurly	dir.c	/^DirExpandCurly(word, brace, path, expansions)$/
DirExpandInt	dir.c	/^DirExpandInt(word, path, expansions)$/
DirFindName	dir.c	/^DirFindName (p, dname)$/
DirMatchFiles	dir.c	/^DirMatchFiles (pattern, p, expansions)$/
DirPrintDir	dir.c	/^static int DirPrintDir (p) Path *p; { printf ("%s /
DirPrintWord	dir.c	/^DirPrintWord(word)$/
Dir_AddDir	dir.c	/^Dir_AddDir (path, name)$/
Dir_ClearPath	dir.c	/^Dir_ClearPath(path)$/
Dir_Concat	dir.c	/^Dir_Concat(path1, path2)$/
Dir_CopyDir	dir.c	/^Dir_CopyDir(p)$/
Dir_Destroy	dir.c	/^Dir_Destroy (p)$/
Dir_Expand	dir.c	/^Dir_Expand (word, path, expansions)$/
Dir_FindFile	dir.c	/^Dir_FindFile (name, path)$/
Dir_HasWildcards	dir.c	/^Dir_HasWildcards (name)$/
Dir_Init	dir.c	/^Dir_Init ()$/
Dir_MTime	dir.c	/^Dir_MTime (gn)$/
Dir_MakeFlags	dir.c	/^Dir_MakeFlags (flag, path)$/
Dir_PrintDirectories	dir.c	/^Dir_PrintDirectories()$/
Dir_PrintPath	dir.c	/^Dir_PrintPath (path)$/
Error	main.c	/^Error(va_alist)$/
Fatal	main.c	/^Fatal(va_alist)$/
Finish	main.c	/^Finish(errors)$/
Hash_CreateEntry	hash.c	/^Hash_CreateEntry(t, key, newPtr)$/
Hash_DeleteEntry	hash.c	/^Hash_DeleteEntry(t, e)$/
Hash_DeleteTable	hash.c	/^Hash_DeleteTable(t)$/
Hash_EnumFirst	hash.c	/^Hash_EnumFirst(t, searchPtr)$/
Hash_EnumNext	hash.c	/^Hash_EnumNext(searchPtr)$/
Hash_FindEntry	hash.c	/^Hash_FindEntry(t, key)$/
Hash_InitTable	hash.c	/^Hash_InitTable(t, numBuckets)$/
JobCmpPid	job.c	/^JobCmpPid (job, pid)$/
JobCondPassSig	job.c	/^JobCondPassSig(job, signo)$/
JobDoOutput	job.c	/^JobDoOutput (job, finish)$/
JobExec	job.c	/^JobExec(job, argv)$/
JobFinish	job.c	/^JobFinish (job, status)$/
JobInterrupt	job.c	/^JobInterrupt (runINTERRUPT)$/
JobLocalInput	job.c	/^JobLocalInput(stream, job)$/
JobMakeArgv	job.c	/^JobMakeArgv(job, argv)$/
JobMatchShell	job.c	/^JobMatchShell (name)$/
JobPassSig	job.c	/^JobPassSig(signo)$/
JobPrintCommand	job.c	/^JobPrintCommand (cmd, job)$/
JobRestart	job.c	/^JobRestart(job)$/
JobSaveCommand	job.c	/^JobSaveCommand (cmd, gn)$/
JobStart	job.c	/^JobStart (gn, flags, previous)$/
Job_AbortAll	job.c	/^Job_AbortAll ()$/
Job_CatchChildren	job.c	/^Job_CatchChildren (block)$/
Job_CatchOutput	job.c	/^Job_CatchOutput ()$/
Job_CheckCommands	job.c	/^Job_CheckCommands (gn, abortProc)$/
Job_Empty	job.c	/^Job_Empty ()$/
Job_End	job.c	/^Job_End ()$/
Job_Full	job.c	/^Job_Full ()$/
Job_Init	job.c	/^Job_Init (maxproc, maxlocal)$/
Job_Make	job.c	/^Job_Make (gn)$/
Job_ParseShell	job.c	/^Job_ParseShell (line)$/
Job_Touch	job.c	/^Job_Touch (gn, silent)$/
Job_Wait	job.c	/^Job_Wait()$/
KILL	job.c	/^#define KILL(pid,sig)	killpg((pid),(sig))$/
Lst_Append	lst.lib/lstAppend.c	/^Lst_Append (l, ln, d)$/
Lst_AtEnd	lst.lib/lstAtEnd.c	/^Lst_AtEnd (l, d)$/
Lst_AtFront	lst.lib/lstAtFront.c	/^Lst_AtFront (l, d)$/
Lst_Close	lst.lib/lstClose.c	/^Lst_Close (l)$/
Lst_Concat	lst.lib/lstConcat.c	/^Lst_Concat (l1, l2, flags)$/
Lst_Datum	lst.lib/lstDatum.c	/^Lst_Datum (ln)$/
Lst_DeQueue	lst.lib/lstDeQueue.c	/^Lst_DeQueue (l)$/
Lst_Destroy	lst.lib/lstDestroy.c	/^Lst_Destroy (l, freeProc)$/
Lst_Duplicate	lst.lib/lstDupl.c	/^Lst_Duplicate (l, copyProc)$/
Lst_EnQueue	lst.lib/lstEnQueue.c	/^Lst_EnQueue (l, d)$/
Lst_Find	lst.lib/lstFind.c	/^Lst_Find (l, d, cProc)$/
Lst_FindFrom	lst.lib/lstFindFrom.c	/^Lst_FindFrom (l, ln, d, cProc)$/
Lst_First	lst.lib/lstFirst.c	/^Lst_First (l)$/
Lst_ForEach	lst.lib/lstForEach.c	/^Lst_ForEach (l, proc, d)$/
Lst_ForEachFrom	lst.lib/lstForEachFrom.c	/^Lst_ForEachFrom (l, ln, proc, d)$/
Lst_Init	lst.lib/lstInit.c	/^Lst_Init(circ)$/
Lst_Insert	lst.lib/lstInsert.c	/^Lst_Insert (l, ln, d)$/
Lst_IsAtEnd	lst.lib/lstIsAtEnd.c	/^Lst_IsAtEnd (l)$/
Lst_IsEmpty	lst.lib/lstIsEmpty.c	/^Lst_IsEmpty (l)$/
Lst_Last	lst.lib/lstLast.c	/^Lst_Last (l)$/
Lst_Member	lst.lib/lstMember.c	/^Lst_Member (l, d)$/
Lst_Next	lst.lib/lstNext.c	/^Lst_Next (l)$/
Lst_Open	lst.lib/lstOpen.c	/^Lst_Open (l)$/
Lst_Remove	lst.lib/lstRemove.c	/^Lst_Remove (l, ln)$/
Lst_Replace	lst.lib/lstReplace.c	/^Lst_Replace (ln, d)$/
Lst_Succ	lst.lib/lstSucc.c	/^Lst_Succ (ln)$/
MainParseArgs	main.c	/^MainParseArgs(argc, argv)$/
Main_ParseArgLine	main.c	/^Main_ParseArgLine(line)$/
MakeAddAllSrc	make.c	/^MakeAddAllSrc (cgn, pgn)$/
MakeAddChild	make.c	/^MakeAddChild (gn, l)$/
MakePrintStatus	make.c	/^MakePrintStatus(gn, cycle)$/
MakeStartJobs	make.c	/^MakeStartJobs ()$/
Make_DoAllVar	make.c	/^Make_DoAllVar (gn)$/
Make_HandleUse	make.c	/^Make_HandleUse (cgn, pgn)$/
Make_OODate	make.c	/^Make_OODate (gn)$/
Make_Run	make.c	/^Make_Run (targs)$/
Make_TimeStamp	make.c	/^Make_TimeStamp (pgn, cgn)$/
Make_Update	make.c	/^Make_Update (cgn)$/
Mmain	main.c	/^main(argc, argv)$/
PRINTBIT	targ.c	/^#define PRINTBIT(attr)	case CONCAT(OP_,attr): prin/
PRINTDBIT	targ.c	/^#define PRINTDBIT(attr) case CONCAT(OP_,attr): if /
ParseAddCmd	parse.c	/^ParseAddCmd(gn, cmd)$/
ParseAddDir	parse.c	/^ParseAddDir(path, name)$/
ParseClearPath	parse.c	/^ParseClearPath(path)$/
ParseDoDependency	parse.c	/^ParseDoDependency (line)$/
ParseDoInclude	parse.c	/^ParseDoInclude (file)$/
ParseDoOp	parse.c	/^ParseDoOp (gn, op)$/
ParseDoSrc	parse.c	/^ParseDoSrc (tOp, src)$/
ParseEOF	parse.c	/^ParseEOF (opened)$/
ParseFindKeyword	parse.c	/^ParseFindKeyword (str)$/
ParseFindMain	parse.c	/^ParseFindMain(gn)$/
ParseFinishLine	parse.c	/^ParseFinishLine()$/
ParseHasCommands	parse.c	/^ParseHasCommands(gn)$/
ParseLinkSrc	parse.c	/^ParseLinkSrc (pgn, cgn)$/
ParseReadLine	parse.c	/^ParseReadLine ()$/
ParseReadc	parse.c	/^#define ParseReadc() (((parseReadChar = getc(curFI/
Parse_AddIncludeDir	parse.c	/^Parse_AddIncludeDir (dir)$/
Parse_DoVar	parse.c	/^Parse_DoVar (line, ctxt)$/
Parse_Error	parse.c	/^Parse_Error(type, va_alist)$/
Parse_File	parse.c	/^Parse_File(name, stream)$/
Parse_Init	parse.c	/^Parse_Init ()$/
Parse_IsVar	parse.c	/^Parse_IsVar (line)$/
Parse_MainName	parse.c	/^Parse_MainName()$/
Punt	main.c	/^Punt(va_alist)$/
ReadMakefile	main.c	/^ReadMakefile(fname)$/
RebuildTable	hash.c	/^RebuildTable(t)$/
Str_FindSubstring	str.c	/^Str_FindSubstring(string, substring)$/
Str_Match	str.c	/^Str_Match(string, pattern)$/
SuffAddLevel	suff.c	/^SuffAddLevel (l, targ)$/
SuffAddSrc	suff.c	/^SuffAddSrc (s, ls)$/
SuffApplyTransform	suff.c	/^SuffApplyTransform(tGn, sGn, t, s)$/
SuffExpandChildren	suff.c	/^SuffExpandChildren(cgn, pgn)$/
SuffFindArchiveDeps	suff.c	/^SuffFindArchiveDeps(gn)$/
SuffFindCmds	suff.c	/^SuffFindCmds (targ)$/
SuffFindNormalDeps	suff.c	/^SuffFindNormalDeps(gn)$/
SuffFindThem	suff.c	/^SuffFindThem (srcs)$/
SuffFree	suff.c	/^SuffFree (s)$/
SuffFreeSrc	suff.c	/^SuffFreeSrc (s)$/
SuffGNHasNameP	suff.c	/^SuffGNHasNameP (gn, name)$/
SuffInsert	suff.c	/^SuffInsert (l, s)$/
SuffParseTransform	suff.c	/^SuffParseTransform(str, srcPtr, targPtr)$/
SuffPrintName	suff.c	/^static int SuffPrintName(s) Suff *s; {printf ("%s /
SuffPrintSuff	suff.c	/^SuffPrintSuff (s)$/
SuffPrintTrans	suff.c	/^SuffPrintTrans (t)$/
SuffRebuildGraph	suff.c	/^SuffRebuildGraph(transform, s)$/
SuffStrIsPrefix	suff.c	/^SuffStrIsPrefix (pref, str)$/
SuffSuffHasNameP	suff.c	/^SuffSuffHasNameP (s, sname)$/
SuffSuffIsPrefix	suff.c	/^SuffSuffIsPrefix (s, str)$/
SuffSuffIsSuffix	suff.c	/^SuffSuffIsSuffix (s, str)$/
SuffSuffIsSuffixP	suff.c	/^SuffSuffIsSuffixP(s, str)$/
Suff_AddInclude	suff.c	/^Suff_AddInclude (sname)$/
Suff_AddLib	suff.c	/^Suff_AddLib (sname)$/
Suff_AddSuffix	suff.c	/^Suff_AddSuffix (str)$/
Suff_AddTransform	suff.c	/^Suff_AddTransform (line)$/
Suff_ClearSuffixes	suff.c	/^Suff_ClearSuffixes ()$/
Suff_DoPaths	suff.c	/^Suff_DoPaths()$/
Suff_EndTransform	suff.c	/^Suff_EndTransform(gn)$/
Suff_FindDeps	suff.c	/^Suff_FindDeps (gn)$/
Suff_GetPath	suff.c	/^Suff_GetPath (sname)$/
Suff_Init	suff.c	/^Suff_Init ()$/
Suff_IsTransform	suff.c	/^Suff_IsTransform (str)$/
Suff_PrintAll	suff.c	/^Suff_PrintAll()$/
Suff_SetNull	suff.c	/^Suff_SetNull(name)$/
TargPrintName	targ.c	/^TargPrintName (gn, ppath)$/
TargPrintNode	targ.c	/^TargPrintNode (gn, pass)$/
TargPrintOnlySrc	targ.c	/^TargPrintOnlySrc(gn)$/
Targ_FindList	targ.c	/^Targ_FindList (names, flags)$/
Targ_FindNode	targ.c	/^Targ_FindNode (name, flags)$/
Targ_FmtTime	targ.c	/^Targ_FmtTime (time)$/
Targ_Ignore	targ.c	/^Targ_Ignore (gn)$/
Targ_Init	targ.c	/^Targ_Init ()$/
Targ_NewGN	targ.c	/^Targ_NewGN (name)$/
Targ_Precious	targ.c	/^Targ_Precious (gn)$/
Targ_PrintCmd	targ.c	/^Targ_PrintCmd (cmd)$/
Targ_PrintGraph	targ.c	/^Targ_PrintGraph (pass)$/
Targ_PrintType	targ.c	/^Targ_PrintType (type)$/
Targ_SetMain	targ.c	/^Targ_SetMain (gn)$/
Targ_Silent	targ.c	/^Targ_Silent (gn)$/
VarAdd	var.c	/^VarAdd (name, val, ctxt)$/
VarCmp	var.c	/^VarCmp (v, name)$/
VarFind	var.c	/^VarFind (name, ctxt, flags)$/
VarHead	var.c	/^VarHead (word, addSpace, buf)$/
VarMatch	var.c	/^VarMatch (word, addSpace, buf, pattern)$/
VarModify	var.c	/^VarModify (str, modProc, datum)$/
VarNoMatch	var.c	/^VarNoMatch (word, addSpace, buf, pattern)$/
VarPrintVar	var.c	/^VarPrintVar (v)$/
VarRoot	var.c	/^VarRoot (word, addSpace, buf)$/
VarSubstitute	var.c	/^VarSubstitute (word, addSpace, buf, pattern)$/
VarSuffix	var.c	/^VarSuffix (word, addSpace, buf)$/
VarTail	var.c	/^VarTail (word, addSpace, buf)$/
Var_Append	var.c	/^Var_Append (name, val, ctxt)$/
Var_Delete	var.c	/^Var_Delete(name, ctxt)$/
Var_Dump	var.c	/^Var_Dump (ctxt)$/
Var_Exists	var.c	/^Var_Exists(name, ctxt)$/
Var_GetHead	var.c	/^Var_GetHead(file)$/
Var_GetTail	var.c	/^Var_GetTail(file)$/
Var_Init	var.c	/^Var_Init ()$/
Var_Parse	var.c	/^Var_Parse (str, ctxt, err, lengthPtr, freePtr)$/
Var_Set	var.c	/^Var_Set (name, val, ctxt)$/
Var_Subst	var.c	/^Var_Subst (str, ctxt, undefErr)$/
Var_Value	var.c	/^Var_Value (name, ctxt)$/
brk_string	str.c	/^brk_string(str, store_argc)$/
emalloc	main.c	/^emalloc(len)$/
enomem	main.c	/^enomem()$/
max	buf.c	/^#define max(a,b)  ((a) > (b) ? (a) : (b))$/
str_concat	str.c	/^str_concat(s1, s2, flags)$/
usage	main.c	/^usage()$/
