FIXLEN	tables.c	/^#define FIXLEN(s) {if ((s)->sa_len == 0) (s)->sa_l/
IN_EXPERIMENTAL	af.c	/^#define	IN_EXPERIMENTAL(i)	(((long) (i) & 0xe00000/
LOG_UPTO	main.c	/^#define LOG_UPTO(x) (x)$/
Mmain	main.c	/^main(argc, argv)$/
RANDOMDELAY	input.c	/^#define RANDOMDELAY()	(MIN_WAITTIME * 1000000 + \\/
add_ptopt_localrt	startup.c	/^add_ptopt_localrt(ifp)$/
addrouteforif	startup.c	/^addrouteforif(ifp)$/
bumploglevel	trace.c	/^bumploglevel()$/
dumpif	trace.c	/^dumpif(fd, ifp)$/
dumppacket	trace.c	/^dumppacket(fd, dir, who, cp, size, stamp)$/
dumptrace	trace.c	/^dumptrace(fd, dir, ifd)$/
gethostnameornumber	startup.c	/^gethostnameornumber(name, sin)$/
getnetorhostname	startup.c	/^getnetorhostname(type, name, sin)$/
getsocket	main.c	/^getsocket(domain, type, sin)$/
gwkludge	startup.c	/^gwkludge()$/
hup	timer.c	/^hup()$/
if_iflookup	if.c	/^if_iflookup(addr)$/
if_ifwithaddr	if.c	/^if_ifwithaddr(addr)$/
if_ifwithdstaddr	if.c	/^if_ifwithdstaddr(addr)$/
if_ifwithnet	if.c	/^if_ifwithnet(addr)$/
ifinit	startup.c	/^ifinit()$/
iftraceinit	trace.c	/^iftraceinit(ifp, ifd)$/
inet_canon	af.c	/^inet_canon(sin)$/
inet_checkhost	af.c	/^inet_checkhost(sin)$/
inet_format	af.c	/^inet_format(sin)$/
inet_hash	af.c	/^inet_hash(sin, hp)$/
inet_lnaof	inet.c	/^inet_lnaof(in)$/
inet_makeaddr	inet.c	/^inet_makeaddr(net, host)$/
inet_netmatch	af.c	/^inet_netmatch(sin1, sin2)$/
inet_netof	inet.c	/^inet_netof(in)$/
inet_output	af.c	/^inet_output(s, flags, sin, size)$/
inet_portcheck	af.c	/^inet_portcheck(sin)$/
inet_portmatch	af.c	/^inet_portmatch(sin)$/
inet_rtflags	inet.c	/^inet_rtflags(sin)$/
inet_sendroute	inet.c	/^inet_sendroute(rt, dst)$/
max	startup.c	/^#define max(a, b) (a > b ? a : b)$/
min	input.c	/^#define min(a, b) (a < b ? a : b)$/
osa	input.c	/^#define osa(x) ((struct osockaddr *)(&(x)))$/
process	main.c	/^process(fd)$/
readentry	startup.c	/^#define	readentry(fp) \\$/
rip_input	input.c	/^rip_input(from, rip, size)$/
rtadd	tables.c	/^rtadd(dst, gate, metric, state)$/
rtchange	tables.c	/^rtchange(rt, gate, metric)$/
rtdefault	tables.c	/^rtdefault()$/
rtdelete	tables.c	/^rtdelete(rt)$/
rtdeleteall	tables.c	/^rtdeleteall(sig)$/
rtfind	tables.c	/^rtfind(dst)$/
rtinit	tables.c	/^rtinit()$/
rtlookup	tables.c	/^rtlookup(dst)$/
same	if.c	/^#define	same(a1, a2) \\$/
satosin	trace.c	/^#define	satosin(sa)	((struct sockaddr_in *)&sa)$/
setlogmask	main.c	/^#define setlogmask(x) (x)$/
sigtrace	trace.c	/^sigtrace(s)$/
size	startup.c	/^#define size(p)	max((p).sa_len, sizeof(p))$/
sndmsg	output.c	/^sndmsg(dst, flags, ifp, rtstate)$/
supply	output.c	/^supply(dst, flags, ifp, rtstate)$/
timer	timer.c	/^timer()$/
timevaladd	main.c	/^timevaladd(t1, t2)$/
timevalsub	main.c	/^timevalsub(t1, t2)$/
toall	output.c	/^toall(f, rtstate, skipif)$/
trace	trace.c	/^trace(ifd, who, p, len, m)$/
traceaction	trace.c	/^traceaction(fd, action, rt)$/
traceinit	trace.c	/^traceinit(ifp)$/
tracenewmetric	trace.c	/^tracenewmetric(fd, rt, newmetric)$/
traceoff	trace.c	/^traceoff()$/
traceon	trace.c	/^traceon(file)$/
