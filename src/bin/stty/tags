CHK	cchar.c	/^#define CHK(s)  (*name == s[0] && !strcmp(name, s)/
Mstty	stty.c	/^main(argc, argv) $/
binit	print.c	/^binit(lb)$/
bput	print.c	/^bput(s)$/
c_cchar	cchar.c	/^c_cchar(a, b)$/
c_key	key.c	/^c_key(a, b)$/
ccval	print.c	/^ccval(c)$/
checkredirect	util.c	/^checkredirect()$/
csearch	cchar.c	/^csearch(argvp, ip)$/
err	util.c	/^err(fmt, va_alist)$/
f_all	key.c	/^f_all(ip)$/
f_cbreak	key.c	/^f_cbreak(ip)$/
f_columns	key.c	/^f_columns(ip)$/
f_dec	key.c	/^f_dec(ip)$/
f_everything	key.c	/^f_everything(ip)$/
f_extproc	key.c	/^f_extproc(ip)$/
f_ispeed	key.c	/^f_ispeed(ip)$/
f_nl	key.c	/^f_nl(ip)$/
f_ospeed	key.c	/^f_ospeed(ip)$/
f_raw	key.c	/^f_raw(ip)$/
f_rows	key.c	/^f_rows(ip)$/
f_sane	key.c	/^f_sane(ip)$/
f_size	key.c	/^f_size(ip)$/
f_speed	key.c	/^f_speed(ip)$/
f_tty	key.c	/^f_tty(ip)$/
gerr	gfmt.c	/^gerr(s)$/
gprint	gfmt.c	/^gprint(tp, wp, ldisc)$/
gread	gfmt.c	/^gread(tp, s) $/
ksearch	key.c	/^ksearch(argvp, ip)$/
msearch	modes.c	/^msearch(argvp, ip)$/
on	print.c	/^#define	on(f)	((tmp&f) != 0)$/
print	print.c	/^print(tp, wp, ldisc, fmt)$/
put	print.c	/^#define put(n, f, d) \\$/
warn	util.c	/^warn(fmt, va_alist)$/
