XCOMM $XFree86: mit/config/lnuxLib.rules,v 2.5 1993/10/06 14:53:01 dawes Exp $
/*
 * Linux shared library rules (DLL version)
 */
#ifndef HasSharedLibraries
#define HasSharedLibraries YES
#endif
#ifndef ForceNormalLib
#define ForceNormalLib YES
#endif

#ifndef SharedLibX
#define SharedLibX HasSharedLibraries
#endif
#ifndef SharedOldLibX
#define SharedOldLibX NO
#endif
#ifndef SharedLibXt
#define SharedLibXt HasSharedLibraries
#endif
#ifndef SharedLibXaw
#define SharedLibXaw HasSharedLibraries
#endif
#ifndef SharedLibXmu
#define SharedLibXmu HasSharedLibraries
#endif
#ifndef SharedLibXext
#define SharedLibXext HasSharedLibraries
#endif
#ifndef SharedLibXTest
#define SharedLibXTest HasSharedLibraries
#endif
#ifndef NormalLibXTest
#define NormalLibXTest (!SharedLibXTest | ForceNormalLib)
#endif
#ifndef SharedLibXinput
#define SharedLibXinput HasSharedLibraries
#endif
#ifndef SharedLibPex
#define SharedLibPex HasSharedLibraries
#endif

#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /**/
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef /**/
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <lnuxLib.tmpl>
#endif
#ifndef SharedLibraryLoadFlags
#define SharedLibraryLoadFlags /**/
#endif
#ifndef PositionIndependentCFlags
#define PositionIndependentCFlags -B/usr/dll/jump/
#endif

DLL_BINDIR = /usr/dll/bin

#ifndef UseInstalled
XCOMM this is only needed to build the server
XCOMM to build your own dll libs, fill in a suitable set of JUMP_xxx vars

XCOMM libX11.so (X11)
JUMP_ROOT_X11 = $(XLIBSRC)
JUMP_IS_HOST_X11 = YES
JUMP_STUBLIBS_X11 = libX11.sa
JUMP_DIR_X11 = $(JUMP_ROOT_X11)/shared
JUMP_VARS_X11 = $(JUMP_ROOT_X11)/jump_vars
JUMP_FUNCS_X11 = $(JUMP_ROOT_X11)/jump_funcs
JUMP_IGNORE_X11 = $(JUMP_ROOT_X11)/jump_ignore
JUMP_ADDRESS_X11 = 0x60200000
JUMP_JUMPTABLESIZE_X11 = 0x4000
JUMP_GOTSIZE_X11 = 4096
JUMP_STUBNAMES_X11 = libX11
JUMP_STUBS_IMPORT_X11 = /usr/lib/libc.sa
JUMP_LDLIBS_X11 = -lgcc -lc

XCOMM libXt.so (Xt, Xmu, Xext, Xi, Xtst)
JUMP_ROOT_Xt = $(TOOLKITSRC)
JUMP_IS_HOST_Xt = YES
JUMP_STUBLIBS_Xt = libXt.sa libXmu.sa libXext.sa libXi.sa libXtst.sa
JUMP_SUBDIRS_Xt = $(JUMP_ROOT_X11)
JUMP_SIBDIRS_Xt = $(JUMP_ROOT_Xmu) $(JUMP_ROOT_Xext) \
	$(JUMP_ROOT_Xi) $(JUMP_ROOT_Xtst)
JUMP_DIR_Xt = $(JUMP_ROOT_Xt)/shared
JUMP_VARS_Xt = $(JUMP_ROOT_Xt)/jump_vars
JUMP_FUNCS_Xt = $(JUMP_ROOT_Xt)/jump_funcs
JUMP_IGNORE_Xt = $(JUMP_ROOT_Xt)/jump_ignore
JUMP_IMPORT_Xt = $(JUMP_VARS_X11)
JUMP_ADDRESS_Xt = 0x602a0000
JUMP_JUMPTABLESIZE_Xt = 0x4000
JUMP_GOTSIZE_Xt = 4096
JUMP_STUBNAMES_Xt = libXt libXmu libXext libXi libXtst
JUMP_STUBS_IMPORT_Xt = $(JUMP_STUBS_IMPORT_X11)
JUMP_SIBARS_Xt = jump/libXmu.a~ jump/libXext.a~ jump/libXi.a~ jump/libXtst.a~
JUMP_LDLIBS_Xt = $(JUMP_SIBARS_Xt) $(JUMP_ROOT_X11)/libX11.sa $(JUMP_LDLIBS_X11)

XCOMM libXmu (part of libXt.so)
JUMP_ROOT_Xmu = $(XMUSRC)
JUMP_IS_HOST_Xmu = NO
JUMP_HOST_Xmu = $(JUMP_ROOT_Xt)
JUMP_DIR_Xmu = $(JUMP_DIR_Xt)

XCOMM libXext (part of libXt.so)
JUMP_ROOT_Xext = $(EXTENSIONSRC)/lib
JUMP_IS_HOST_Xext = NO
JUMP_HOST_Xext = $(JUMP_ROOT_Xt)
JUMP_DIR_Xext = $(JUMP_DIR_Xt)

XCOMM libXi (part of libXt.so)
JUMP_ROOT_Xi = $(XILIBSRC)
JUMP_IS_HOST_Xi = NO
JUMP_HOST_Xi = $(JUMP_ROOT_Xt)
JUMP_DIR_Xi = $(JUMP_DIR_Xt)

XCOMM libXtst (part of libXt.so)
JUMP_ROOT_Xtst = $(EXTENSIONSRC)/lib/xtest
JUMP_IS_HOST_Xtst = NO
JUMP_HOST_Xtst = $(JUMP_ROOT_Xt)
JUMP_DIR_Xtst = $(JUMP_DIR_Xt)

XCOMM libXaw.so (Xaw)
JUMP_ROOT_Xaw = $(AWIDGETSRC)
JUMP_IS_HOST_Xaw = YES
JUMP_STUBLIBS_Xaw = libXaw.sa
JUMP_SUBDIRS_Xaw = $(JUMP_ROOT_Xt)
JUMP_DIR_Xaw = $(JUMP_ROOT_Xaw)/shared
JUMP_VARS_Xaw = $(JUMP_ROOT_Xaw)/jump_vars
JUMP_FUNCS_Xaw = $(JUMP_ROOT_Xaw)/jump_funcs
JUMP_IGNORE_Xaw = $(JUMP_ROOT_Xaw)/jump_ignore
JUMP_IMPORT_Xaw = $(JUMP_VARS_Xt) $(JUMP_VARS_X11)
JUMP_ADDRESS_Xaw = 0x60300000
JUMP_JUMPTABLESIZE_Xaw = 0x4000
JUMP_GOTSIZE_Xaw = 4096
JUMP_STUBNAMES_Xaw = libXaw
JUMP_STUBS_IMPORT_Xaw = $(JUMP_STUBS_IMPORT_X11)
JUMP_LDLIBS_Xaw = $(JUMP_ROOT_Xt)/libXt.sa $(JUMP_ROOT_Xt)/libXmu.sa \
	$(JUMP_ROOT_Xt)/libXext.sa $(JUMP_ROOT_X11)/libX11.sa \
	$(JUMP_LDLIBS_X11)

# libPEX.so (PEX5)
JUMP_ROOT_PEX5 = $(EXTENSIONSRC)/lib/PEXlib
JUMP_IS_HOST_PEX5 = YES
JUMP_STUBLIBS_PEX5 = libPEX5.sa
JUMP_SUBDIRS_PEX5 = $(JUMP_ROOT_X11)
JUMP_DIR_PEX5 = $(JUMP_ROOT_PEX5)/shared
JUMP_VARS_PEX5 = $(JUMP_ROOT_PEX5)/jump_vars
JUMP_FUNCS_PEX5 = $(JUMP_ROOT_PEX5)/jump_funcs
JUMP_IGNORE_PEX5 = $(JUMP_ROOT_PEX5)/jump_ignore
JUMP_IMPORT_PEX5 = $(JUMP_VARS_X11)
JUMP_ADDRESS_PEX5 = 0x60b00000
JUMP_JUMPTABLESIZE_PEX5 = 0x4000
JUMP_GOTSIZE_PEX5 = 4096
JUMP_STUBNAMES_PEX5 = libPEX5
JUMP_STUBS_IMPORT_PEX5 = $(JUMP_STUBS_IMPORT_X11) /usr/lib/libm.sa
JUMP_LDLIBS_PEX5 = $(JUMP_ROOT_X11)/libX11.sa $(JUMP_LDLIBS_X11) -lm

#endif /* !UseInstalled */

/*
 * SharedLibraryDataTarget - generate rules to create shared data file
 */
#ifndef SharedLibraryDataTarget
#define SharedLibraryDataTarget(libname,rev,salist)
#endif

/*
 * SharedLibraryTarget - generate rules to create a shared library;
 * There are two basic flavors of libs: self-generating, which create
 * their own (and possibly other) libs, and hosted, which rely on another
 * lib for all the work.
 */
#ifndef SharedLibraryTarget
#define SharedLibraryTarget(libname,rev,solist,down,up)			@@\
XCOMM This logic is such to compile the libs in their proper order,	@@\
XCOMM remain dependent on subsidiary libs, and yet minimize local work	@@\
									@@\
JUMP_DIR=jump								@@\
JUMP_LIB=Concat(lib,libname)						@@\
									@@\
XCOMM  this is needed for newer gnumake versions			@@\
	export JUMP_DIR JUMP_LIB					@@\
									@@\
JUMP_IS_HOST=$(Concat(JUMP_IS_HOST_,libname))				@@\
JUMP_AR=$(JUMP_DIR)/Concat(lib,libname.a~)				@@\
JUMP_SA=Concat(lib,libname.sa)						@@\
JUMP_SO=Concat(lib,libname.so.rev)					@@\
									@@\
JUMP_HOST=$(Concat(JUMP_HOST_,libname))					@@\
									@@\
INSTSOLIBFLAGS=-m 0555							@@\
									@@\
AllTarget($(JUMP_SA))							@@\
									@@\
$(JUMP_SA) $(Concat(JUMP_STUBLIBS_,libname)) do_JUMP_SA: \
		down/mk_JUMP_SA_$(JUMP_IS_HOST)				@@\
									@@\
down/mk_JUMP_SA_0:: mk_JUMP_HOST					@@\
									@@\
down/mk_JUMP_SA_0:: $(JUMP_HOST)/$(JUMP_SA)				@@\
	$(RM) $(JUMP_SA)						@@\
	$(LN) $(JUMP_HOST)/$(JUMP_SA) $(JUMP_SA)			@@\
	touch $@							@@\
									@@\
down/mk_JUMP_SA_1:: $(JUMP_SO)						@@\
									@@\
down/mk_JUMP_SA_1:: down/mk_JUMP_SO_2					@@\
	$(RM) $(Concat(JUMP_STUBLIBS_,libname))				@@\
	$(DLL_BINDIR)/mkstubs -v rev -l $(JUMP_LIB) \
		-a $(Concat(JUMP_ADDRESS_,libname)) \
		-j $(Concat(JUMP_JUMPTABLESIZE_,libname)) \
		-g $(Concat(JUMP_GOTSIZE_,libname)) \
		-- $(Concat(JUMP_STUBNAMES_,libname))			@@\
	$(DLL_BINDIR)/verify-shlib -l $(JUMP_SO) \
		$(Concat(JUMP_STUBLIBS_,libname)) && \
		$(RM) verify.out					@@\
	touch $@							@@\
									@@\
mk_JUMP_HOST:								@@\
	@echo checking stub library $(JUMP_SA) in $(JUMP_HOST)...	@@\
	@(cd $(JUMP_HOST); $(MAKE) $(MFLAGS) $(JUMP_SA)) || exit 1	@@\
	@echo ok. continuing in $(Concat(JUMP_ROOT_,libname))...	@@\
									@@\
$(JUMP_SO): down/mk_JUMP_SO_$(JUMP_IS_HOST)				@@\
									@@\
down/mk_JUMP_SO_0:							@@\
									@@\
down/mk_JUMP_SO_1:: $(JUMP_AR) mk_JUMP_SIBDIRS down/mk_JUMP_SO_2	@@\
									@@\
down/mk_JUMP_SO_2: down/mk_JUMP_AR $(Concat(JUMP_SIBARS_,libname))	@@\
	$(RM) $(JUMP_SO)						@@\
	$(DLL_BINDIR)/mkimage -f -v rev -l $(JUMP_LIB) \
		-a $(Concat(JUMP_ADDRESS_,libname)) \
		-j $(Concat(JUMP_JUMPTABLESIZE_,libname)) \
		-g $(Concat(JUMP_GOTSIZE_,libname)) \
		-- $(JUMP_AR) $(Concat(JUMP_LDLIBS_,libname))		@@\
	$(RM) $(JUMP_DIR)/__jump.s $(JUMP_DIR)/__jump.o			@@\
	touch $@							@@\
									@@\
mk_JUMP_SIBDIRS:							@@\
	@for d in $(Concat(JUMP_SIBDIRS_,libname)); do \
		echo checking ar library in $$d...; \
		(cd $$d ; $(MAKE) $(MFLAGS) fastdo_JUMP_AR) || edit 1; \
		echo ok. continuing in $(Concat(JUMP_ROOT_,libname))...;done@@\
									@@\
fastdo_JUMP_AR: $(JUMP_DIR) down/mk_JUMP_AR				@@\
									@@\
$(JUMP_AR) do_JUMP_AR:: jumpsetup down/mk_JUMP_AR			@@\
									@@\
jumpsetup: $(JUMP_DIR) jumpsetup_$(JUMP_IS_HOST)			@@\
									@@\
$(JUMP_DIR):								@@\
	$(RM) jump							@@\
	$(LN) $(Concat(JUMP_DIR_,libname)) jump				@@\
									@@\
jumpsetup_0:								@@\
	@echo doing jump setup in host $(JUMP_HOST)...			@@\
	@(cd $(JUMP_HOST); $(MAKE) $(MFLAGS) jumpsetup) || exit 1	@@\
	@echo ok. continuing in $(Concat(JUMP_ROOT_,libname))...	@@\
									@@\
jumpsetup_1::								@@\
	@for d in $(Concat(JUMP_SUBDIRS_,libname)); do \
		echo checking stub library in $$d...; \
		(cd $$d ; $(MAKE) $(MFLAGS) do_JUMP_SA) || exit 1; \
		echo ok. continuing in $(Concat(JUMP_ROOT_,libname))...;done@@\
									@@\
jumpsetup_1:: $(JUMP_DIR)/jump.funcs $(JUMP_DIR)/jump.vars \
	$(JUMP_DIR)/jump.ignore $(JUMP_DIR)/jump.import			@@\
									@@\
$(JUMP_DIR)/jump.funcs: $(Concat(JUMP_FUNCS_,libname))			@@\
	$(RM) $(JUMP_DIR)/jump.funcs					@@\
	cat $(Concat(JUMP_FUNCS_,libname)) > $@				@@\
									@@\
$(JUMP_DIR)/jump.vars: $(Concat(JUMP_VARS_,libname))			@@\
	$(RM) $(JUMP_DIR)/jump.vars					@@\
	cat $(Concat(JUMP_VARS_,libname)) > $@				@@\
									@@\
$(JUMP_DIR)/jump.ignore: $(Concat(JUMP_IGNORE_,libname))		@@\
	$(RM) $(JUMP_DIR)/jump.ignore					@@\
	cat $(Concat(JUMP_IGNORE_,libname)) > $@			@@\
									@@\
$(JUMP_DIR)/jump.import: $(JUMP_DIR)/stubs.import \
		$(Concat(JUMP_IMPORT_,libname))				@@\
	$(RM) $(JUMP_DIR)/jump.import					@@\
	cat $(JUMP_DIR)/stubs.import $(Concat(JUMP_IMPORT_,libname)) > $@ @@\
									@@\
$(JUMP_DIR)/stubs.import: $(Concat(JUMP_STUBS_IMPORT_,libname))		@@\
	$(RM) $(JUMP_DIR)/stubs.import					@@\
	nm --no-cplus $(Concat(JUMP_STUBS_IMPORT_,libname)) | grep '__GOT__' | \
		sed 's/__GOT__/_/' > $@					@@\
									@@\
down/mk_JUMP_AR: solist							@@\
	$(RM) $(JUMP_AR)						@@\
	(cd down; $(AR) up/$(JUMP_AR) solist) || exit 1			@@\
	$(RANLIB) $(JUMP_AR)						@@\
	touch $@							@@\
									@@\
clean:: jumpclean							@@\
									@@\
jumpclean: jumpclean_$(JUMP_IS_HOST)					@@\
	$(RM) $(JUMP_SA) $(JUMP_DIR)/__jump.s $(JUMP_DIR)/__jump.o \
		down/mk_JUMP_AR $(JUMP_AR)				@@\
	$(RM) -r $(JUMP_DIR)						@@\
									@@\
jumpclean_0:								@@\
	$(RM) down/mk_JUMP_SA_0						@@\
									@@\
jumpclean_1:								@@\
	$(RM) $(JUMP_SO) $(JUMP_DIR)/_GCMN_*.s $(JUMP_DIR)/_GVAR_*.s \
		$(JUMP_DIR)/jump.vars $(JUMP_DIR)/jump.funcs \
		$(JUMP_DIR)/jump.ignore $(JUMP_DIR)/jump.params \
		$(JUMP_DIR)/jump.undefs $(JUMP_DIR)/jump.log \
		$(JUMP_DIR)/jump.import $(JUMP_DIR)/stubs.import \
		down/mk_JUMP_SA_1 down/mk_JUMP_SO_1 down/mk_JUMP_SO_2
#endif /* SharedLibraryTarget */

/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#define	InstallSharedLibrary(libname,rev,dest)				@@\
install:: $(JUMP_SA) $(JUMP_SO)						@@\
	MakeDir($(DESTDIR)dest)						@@\
	@if [ "$(JUMP_IS_HOST)" = YES ]; then \
		(T=$(DESTDIR)dest/`echo $(JUMP_SO)|sed 's/\.[^\.]*\.[^\.]*$$//'`;\
		set -x; \
		$(INSTALL) -s -c $(INSTSOLIBFLAGS) $(JUMP_SO) $(DESTDIR)dest; \
		$(RM) $$T && $(LN) $(DESTDIR)dest/$(JUMP_SO) $$T); fi	@@\
	$(INSTALL) -c $(INSTLIBFLAGS) $(JUMP_SA) $(DESTDIR)dest
#endif /* InstallSharedLibrary */

/*
 * InstallSharedLibraryData - generate rules to install the shared library data
 */
#ifndef InstallSharedLibraryData
#define	InstallSharedLibraryData(libname,rev,dest)
#endif /* InstallSharedLibraryData */
