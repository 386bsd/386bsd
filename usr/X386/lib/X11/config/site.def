XCOMM $XFree86: mit/config/site.def,v 2.23 1993/10/16 17:28:07 dawes Exp $
XCOMM site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

/*****************************************************************************
 *                                                                           *
 *			   SITE-SPECIFIC DEFINITIONS                         *
 *                                                                           *
 * This file contains two halves, one included before the vendor-specific    *
 * configuration file (.cf file), and one included after the .cf file.       *
 * The before-half should be protected by #ifdef BeforeVendorCF, and the     *
 * after-half should be protected by #ifdef AfterVendorCF.                   *
 *                                                                           *
 * The before-half should only set things that the .cf file depends on.      *
 * For the .cf files shipped in this release, the main variable in this      *
 * category is HasGcc.                                                       *
 *                                                                           *
 * The after-half should contain all other definitions.  For example,        *
 * place your ProjectRoot definition here.  Beware that several of the       *
 * .cf files supplied by vendors have a ProjectRoot already defined, so      *
 * you may need to #undef it first.                                          *
 *                                                                           *
 * OS Major and Minor version numbers should be changed directly in the .cf  *
 * file, not overridden in site.def.                                         *
 *                                                                           *
 *****************************************************************************/

#ifdef AmoebaConf
#include "am_site.def"
#endif

#ifdef MinixConf
#include "mnx_site.def"
#endif

#ifdef BeforeVendorCF

/*****************************************************************************
 *                                                                           *
 * Make/Build parameters                                                     *
 *                                                                           *
 *****************************************************************************/

/*
 * If you are using ISC's original make (which has a hash table bug),
 * uncomment this. You will not get dependencies as a result in
 * mit/lib/X, but better then nothing. (Using GNU make instead is recommended.)
 */
/* #define MakeHashTableBug YES */

/*
 * To build normal libraries in addition to shared libraries uncomment this
 *	defaults:
 *		SVR4:		NO
 *		SVR3:		YES
 *		Linux:		YES
 */
/* #define ForceNormalLib	YES */

/*
 * HasLibCrypt: If your system uses a separate libcrypt.a, uncomment this.
 *	    defaults:
 *		NetBsd, FreeBsd YES
 *		others:		NO
 */
/* #define HasLibCrypt		YES */

/*****************************************************************************
 *                                                                           *
 * Compiler parameters                                                       *
 *                                                                           *
 *****************************************************************************/

/*
 * HasGcc: defaults:
 *		SVR3,4:		YES
 *		NCR:		NO
 *		Mach, 386bsd:	YES
 *		linux:		YES
 */
/* #define HasGcc 		NO */

/*
 * HasGcc2: (should also set HasGcc)
 *	    defaults:
 *		SVR3,4:		YES
 *		NCR:		NO
 *		Mach, 386bsd:	NO
 *		NetBSD, FreeBSD YES
 *		linux:		YES
 */
/* #define HasGcc2		NO */

/*
 * GccUsesGas: Required if your gcc uses gas as its assembler.
 *          defaults:
 *		SVR3,4		NO
 *		Mach, 386bsd:	YES
 *		linux:		YES
 */
/* #define GccUsesGas	YES */

/*
 * UseGas: Required if you use gas as your assembler.
 *          defaults:
 *		SVR3,4		NO
 *		Mach, 386bsd:	YES
 *		linux:		YES
 */
/* #define UseGas		YES */

/*
 * GnuCpp:
 *	    defaults:
 *		SVR3,4:		NO
 *		Mach:		NO
 *		386bsd:		YES
 *		linux:		YES
 */
/* #define GnuCpp		YES */

/*
 * If you are building for a 386 you can uncomment this.  It is not
 * necessary that you do this because the -m486 compiled binaries run
 * without performance loss on a 386 CPU.  This option is only used
 * when using gcc-2.x
 */
/* #define Target_486	NO */

/*****************************************************************************
 *                                                                           *
 * Networking parameters                                                     *
 *                                                                           *
 *****************************************************************************/

/* If you don't want to include SCO's Xsight connection code for SVR4,
 * uncomment this (all SVR4's should be able to compile this).
 * Note: you must have SVR4.0.4 or later, with the 'Advanced Compatibility
 * Package' (iBSC-2 compatibility) to make use of this feature. 
 */
/* #define SCOLocalConnSysv4 NO */

/* If you don't have sockets, uncomment this */
/* #define HasSockets	NO */

/*****************************************************************************
 *                                                                           *
 * Other compile-time parameters                                             *
 *                                                                           *
 *****************************************************************************/

/*
 * HasShadowPasswd: Required if your system uses shadow passwords.
 *          defaults:
 *		SVR3,4:		YES
 *		Mach, 386bsd:	NO
 *		linux:		NO
 */
/* #define HasShadowPasswd	NO */

/*
 * If you are not using GNU dbm, sdbm or SVR4's ndbm, uncomment this.
 *          defaults:
 *		ISC:		NO
 *		others:		YES
 */
/* #define HasNdbm		NO */

/*
 * HasSdbm: Required if you are using libsdbm.a  (HasNdbm should also be set)
 *	    defaults:
 *		SVR3,4:		YES
 *		ISC:		NO
 *		Mach, 386bsd:	NO
 *		linux:		NO
 */
/* #define HasSdbm		YES */

/*****************************************************************************
 *                                                                           *
 * Select features to be built/not built                                     *
 *                                                                           *
 *****************************************************************************/

/* You need the DES stuff from MIT to use this */
/* #define HasXdmAuth	YES */

/* To exclude XTEST support, uncomment the following */
/* #define BuildXTest	NO */

/* Do you *really* want PEX? */
/* #define BuildPex	YES */

/*****************************************************************************
 *                                                                           *
 * Font-related parameters                                                   *
 *                                                                           *
 *****************************************************************************/

/* To build the Font Server, uncomment the following */
/* #define BuildFontServer	YES */

/* Usually only want to build fonts once */
#define BuildFonts	NO

/* If you don't want to compress pcf fonts, uncomment this */
/* #define CompressAllFonts	NO */

/* If you want to build 100dpi fonts, uncomment this */
/* #define Build100Dpi	YES */

/* If you don't want to build 75dpi fonts, uncomment this */
/* #define Build75Dpi	NO */

/* If you want to build the k14, jiskan, hanglg fonts, uncomment this */
/* #define BuildLargeMiscFonts	YES */

/* If you want Type1 code included */
#if !defined(AmoebaConf) && !defined(MinixConf) && !defined(OsfArchitecture)
#define BuildType1	YES
#endif

/* If you don't want to build Speedo fonts, uncomment this */
/* #define BuildSpeedo	NO */

/*
 * Select Font Renderers to include.  This overrides BuildType1 and 
 * BuildSpeedo above - it's best to leave this alone and use the above
 * defines unless you are adding a custom font renderer.
 *
 * Default: Speedo
 */
/* #define FontRenderers	Speedo */

/*****************************************************************************
 *                                                                           *
 * Server-related parameters                                                 *
 *                                                                           *
 *****************************************************************************/

/* Uncomment this if you don't want to build the server */
/* #define BuildServer	NO */

/* Change YES to NO for servers you don't want to build */

/* Build the 256 colour SVGA server */
#define XF86SVGAServer		YES

/* Build the 16 colour server */
#define XF86VGA16Server		YES

/* Build the monochrome server */
#define XF86MonoServer		YES

/* Build the S3 server */
#define XF86S3Server		YES

/* Build the 8514/A server */
#define XF86I8514Server		YES

/* Build the Mach8 server */
#define XF86Mach8Server		YES

/* Build the Mach32 server */
#define XF86Mach32Server	YES

/* Set the default server (ie the one that gets the sym-link to "X") */
/* #define XFree86DefaultServer	XF86_S3 */

/*
 * Select drivers in 256-colour server
 *
 * Default: et4000 et3000 pvga1 gvga ati tvga8900 cirrus ncr compaq
 */
/* #define X386Vga256Drivers	et4000 et3000 pvga1 gvga ati tvga8900 cirrus \
				ncr oak compaq */
/*
 * Select drivers in 16-colour server
 *
 * Default: et4000 generic
 */
/* #define X386Vga16Drivers	et4000 generic */

/*
 * Select (S)VGA drivers in monochrome server
 *
 * Default: et4000 et3000 pvga1 gvga tvga8900 ncr compaq generic
 */
/* #define X386Vga2Drivers	et4000 et3000 pvga1 gvga tvga8900 ncr \
				compaq oak generic */
/*
 * To include the Hercules driver in the monochrome server, uncomment this:
 */
/* #define X386Hga2Drivers		hga6845 */

/*
 * To include the generic banked monochrome driver in the monochrome server,
 * uncomment this with one of the following low level drivers
 * 	hgc1280		[Hyundai HGC-1280 1280x1024]
 *	...
 *	(list is subject to grow)
 */
/* #define X386Bdm2Drivers		hgc1280 */

/*
 * Select drivers in the accelerated S3 server
 */
/* #define XF86S3Drivers		mmio_928 s3_generic */

/* Uncomment this to include support for SVR3 mmap driver */
/* #define HasSVR3mmapDrv	YES */

/* Uncomment this if you want to build a debuggable server */
/* #define DebuggableServer	YES */

/* Uncomment this if you are using Conor Cahill's debugging malloc library */
/* #define SpecialMalloc	YES */

/* Uncomment this if you want to link with the Gnu malloc library */
/* #define GnuMalloc		YES */

/*
 * GnuMallocLib: link-time flags to include the Gnu malloc library.
 * this is only used when GnuMalloc is set to YES.
 *	    defaults:
 *		386bsd:		-lgnumalloc
 *		others:		-lgmalloc
 */
/* #define GnuMallocLib		-L/usr/local/gnu -lmalloc */

/*
 * Set this to disable blanking the screen during startup (can be useful
 * for debugging)
 */
/* #define DirtyStartup	YES */

/*****************************************************************************
 *                                                                           *
 * Client-related parameters                                                 *
 *                                                                           *
 *****************************************************************************/

/*
 * Set logging parameters for xterm.  By default, logging is off because of
 * security problems.  It can be turned on with -DALLOWLOGGING, and security
 * can (hopefully) be improved with -DFORKFORLOGFILE.
 */

#define XtermLogFlags		-DALLOWLOGGING -DFORKFORLOGFILE

/*****************************************************************************
 *                                                                           *
 * Installation-related parameters                                           *
 *                                                                           *
 *****************************************************************************/

/*
 * Enable these if you want to automatically install these config files
 * Be careful of overwriting customised files
 */
/*
#define InstallXdmConfig YES
#define InstallXinitConfig YES
#define InstallFSConfig YES
*/

/*****************************************************************************
 *                                                                           *
 * Manual page parameters                                                    *
 *                                                                           *
 *****************************************************************************/

/*
 * Only for SVR3, 386BSD, FreeBSD and NetBSD.
 * FormattedManPages: To install unformatted man pages, set this to NO.
 *	    defaults:
 *		SVR3:		YES
 *		FreeBSD:	NO
 *		other BSD	YES
 */
/* #define FormattedManPages NO */

/*
 * The default man page installation paramters have been moved to x386.cf
 * and may be overriden here.  Note that these are ignored for preformatted
 * man pages on *BSD -- where all suffices are '0'.
 *
 *	    defaults:		ManSuffix	LibManSuffix	FileManSuffix
 *	        SVR3,4:		   1x    	    3x      	      4
 *	        others:		   1x    	    3x      	      5x
 */

/*
 * Only for SVR3:
 * Remove obsolete .DE and .DS macros from manual pages
 *	defaults:
 *		ISC 2.2, 3.0:	YES
 *		SVR3:		NO
 */
/* #define RemoveDSDENroffMacros YES */

/* Only for SVR3:
 * Compress installed manual pages
 *	defaults:
 *		ISC, SCO:	YES
 *		SVR3:		NO
 */
/* #define CompressManPages YES */

/*
 * If you compress the manual pages and want to use gzip, uncomment this.
 * Use the first line if you are using gzip version 1.0.7 or earlier, and
 * the second for gzip 1.1 or later.
 *	default:	compress -v
 */
/* #define CompressManCmd	gzip -v */
/* #define CompressManCmd	gzip -v --suffix .z */

/* If you don't like the 'x' at the end, uncomment these: */
/* #define ManSuffix		1 */
/* #define LibManSuffix		3 */
/* #define FileManSuffix	5  */

#endif /* BeforeVendorCF */

#ifdef AfterVendorCF

/*
#ifdef ProjectRoot
#undef ProjectRoot
#endif
#define ProjectRoot /usr/X11R5
*/


#endif /* AfterVendorCF */
