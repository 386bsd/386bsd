.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtMake-Geometry-Request XtQuery-Geometry wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XtAppCreateShell 3Xt "Release 3" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtAppCreateShell \- create top-level widget instance
.SH SYNTAX
Widget XtAppCreateShell(\fIapplication_name\fP, \
\fIapplication_class\fP, \fIwidget_class\fP, \fIdisplay\fP,
.br
                        \fIargs\fP, \fInum_args\fP)
.br
      String \fIapplication_name\fP;
.br
      String \fIapplication_class\fP;
.br
      WidgetClass \fIwidget_class\fP;
.br
      Display *\fIdisplay\fP;
.br
      ArgList \fIargs\fP;
.br
      Cardinal \fInum_args\fP;
.SH ARGUMENTS
.IP \fIapplication_class\fP 1i
Specifies the class name of this application\*(Ac.
.IP \fIapplication_name\fP 1i
Specifies the name of the application instance.
.IP \fIargs\fP 1i
Specifies the argument list in which to set in the \s-1WM_COMMAND\s+1 property.
.ds Di \ from which to get the resources
.IP \fIdisplay\fP 1i
Specifies the display\*(Di.
.IP \fInum_args\fP 1i
Specifies the number of arguments in the argument list.
.ds Wc \ that the application top-level widget should be
.IP \fIwidget_class\fP 1i
Specifies the widget class\*(Wc.
.SH DESCRIPTION
The
.ZN XtAppCreateShell
function saves the specified application name and application class 
for qualifying all widget resource specifiers.
The application name and application class are used as the left-most components
in all widget resource names for this application.
.ZN XtAppCreateShell
should be used to create a new logical application within a program
or to create a shell on another display.
In the first case, 
it allows the specification of a new root in the resource hierarchy.
In the second case,
it uses the resource database associated with the other display.
.LP
Note that the widget returned by
.ZN XtAppCreateShell
has the \s-1WM_COMMAND\s+1
property set for session managers (see Chapter 4).
.SH "SEE ALSO"
XtCreateWidget(3Xt)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
