.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XEmptyRegion 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XEmptyRegion, XEqualRegion, XPointInRegion, XRectInRegion \- determine if regions are empty or equal
.SH SYNTAX
.\" $Header: XEmptyRegion.f,v 1.2 88/04/07 17:09:49 mento Exp $
Bool XEmptyRegion\^(\^\fIr\fP\^)
.br
      Region \fIr\fP\^;
.LP
.\" $Header: XEqualRegion.f,v 1.2 88/04/07 17:10:16 mento Exp $
Bool XEqualRegion\^(\^\fIr1\fP\^, \fIr2\fP\^)
.br
      Region \fIr1\fP\^, \fIr2\fP\^;
.LP
.\" $Header: XPointInReg.f,v 1.2 88/04/07 17:10:45 mento Exp $
Bool XPointInRegion\^(\^\fIr\fP\^, \fIx\fP\^, \fIy\fP\^)
.br
      Region \fIr\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^;
.LP
.\" $Header: XRectInReg.f,v 1.1 88/02/26 10:02:37 mento Exp $
int XRectInRegion\^(\^\fIr\fP\^, \fIx\fP\^, \fIy\fP\^, \fIwidth\fP\^, \fIheight\fP\^)
.br
      Region \fIr\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^; 
.br
      unsigned int \fIwidth\fP\^, \fIheight\fP\^;
.SH ARGUMENTS
.\" $Header: r.a,v 1.1 88/02/26 10:29:50 mento Exp $
.IP \fIr\fP 1i
Specifies the region.
.\" $Header: r1r2.a,v 1.1 88/02/26 10:30:48 mento Exp $
.IP \fIr1\fP 1i
.br
.ns
.IP \fIr2\fP 1i
Specify the two regions.
.ds Wh , which define the rectangle
.\" $Header: w+h_gen.a,v 1.2 88/08/04 11:21:28 mento Exp $
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify the width and height\*(Wh.
.ds Xy , which define the point \
or the coordinates of the upper-left corner of the rectangle
.\" $Header: xy_gen.a,v 1.2 88/08/04 11:22:37 mento Exp $
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify the x and y coordinates\*(Xy.
.SH DESCRIPTION
.\" $Header: XEmptyRegion.d,v 1.2 88/06/11 07:50:03 mento Exp $
The
.ZN XEmptyRegion
function returns
.ZN True
if the region is empty.
.LP
.\" $Header: XEqualRegion.d,v 1.2 88/06/11 07:50:04 mento Exp $
The
.ZN XEqualRegion
function returns
.ZN True
if the two regions have the same offset, size, and shape.
.LP
.\" $Header: XPointInReg.d,v 1.3 88/04/23 12:44:36 mento Exp $
The
.ZN XPointInRegion
function returns 
.ZN True
if the point (x, y) is contained in the region r.
.LP
.\" $Header: XRectInReg.d,v 1.1 88/02/26 10:50:04 mento Exp $
The
.ZN XRectInRegion
function returns
.ZN RectangleIn
if the rectangle is entirely in the specified region,
.ZN RectangleOut
if the rectangle is entirely out of the specified region,
and
.ZN RectanglePart
if the rectangle is partially in the specified region.
.SH "SEE ALSO"
XCreateRegion(3X11),
XIntersectRegion(3X11)
.br
\fI\*(xL\fP
