.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XIntersectRegion 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XIntersectRegion, XUnionRegion, XUnionRectWithRegion, XSubtractRegion, XXorRegion, XOffsetRegion, XShrinkRegion \- region arithmetic
.SH SYNTAX
.\" $Header: XInterReg.f,v 1.2 88/04/07 17:02:01 mento Exp $
XIntersectRegion\^(\^\fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^)
.br
      Region \fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^;
.LP
.\" $Header: XUnionRegion.f,v 1.2 88/04/07 17:03:24 mento Exp $
XUnionRegion\^(\^\fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^)
.br
      Region \fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^;
.LP
XUnionRectWithRegion\^(\^\fIrectangle\fP, \fIsrc_region\fP, \
\fIdest_region_return\fP\^)
.br
     XRectangle *\fIrectangle\fP\^;
.br
     Region \fIsrc_region\fP\^;
.br
     Region \fIdest_region_return\fP\^;
.LP
.\" $Header: XSubtractReg.f,v 1.2 88/04/07 17:07:58 mento Exp $
XSubtractRegion\^(\^\fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^)
.br
      Region \fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^;
.LP
.\" $Header: XXorRegion.f,v 1.2 88/04/07 17:09:05 mento Exp $
XXorRegion\^(\^\fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^)
.br
      Region \fIsra\fP\^, \fIsrb\fP\^, \fIdr_return\fP\^;
.LP
.\" $Header: XOffsetReg.f,v 1.1 88/02/26 10:01:40 mento Exp $
XOffsetRegion\^(\^\fIr\fP\^, \fIdx\fP\^, \fIdy\fP\^)
.br
      Region \fIr\fP\^;
.br
      int \fIdx\fP\^, \fIdy\fP\^;
.LP
.\" $Header: XShrinkReg.f,v 1.1 88/02/26 10:03:47 mento Exp $
XShrinkRegion\^(\^\fIr\fP\^, \fIdx\fP\^, \fIdy\fP\^)
.br
      Region \fIr\fP\^;
.br
      int \fIdx\fP\^, \fIdy\fP\^;
.SH ARGUMENTS
.IP \fIdest_region_return\fP 1i
Returns the destination region.
.\" $Header: dr.a,v 1.2 88/04/07 17:02:49 mento Exp $
.IP \fIdr_return\fP 1i
Returns the result of the computation.
ds Dy move or shrink
.\" $Header: dxdy.a,v 1.3 88/08/04 11:11:24 mento Exp $
.IP \fIdx\fP 1i
.br
.ns
.IP \fIdy\fP 1i
Specify the x and y coordinates,
which define the amount you want to \*(Dy the specified region.
.\" $Header: r.a,v 1.1 88/02/26 10:29:50 mento Exp $
.IP \fIr\fP 1i
Specifies the region.
.IP \fIrectangle\fP 1i
Specifies the rectangle.
.\" $Header: srasrb.a,v 1.1 88/02/26 10:31:19 mento Exp $
.IP \fIsra\fP 1i
.br
.ns
.IP \fIsrb\fP 1i
Specify the two regions with which you want to perform the computation.
.IP \fIsrc_region\fP 1i
Specifies the source region to be used.
.SH DESCRIPTION
.\" $Header: XInterReg.d,v 1.1 88/02/26 10:48:58 mento Exp $
The
.ZN XIntersectRegion
function computes the intersection of two regions.
.LP
.\" $Header: XUnionRegion.d,v 1.1 88/02/26 10:51:31 mento Exp $
The
.ZN XUnionRegion
function computes the union of two regions.
.LP
The
.ZN XUnionRectWithRegion
function updates the destination region from a union of the specified rectangle
and the specified source region.
.LP
.\" $Header: XSubtractReg.d,v 1.3 88/08/20 10:20:59 mento Exp $
The
.ZN XSubtractRegion
function subtracts srb from sra and stores the results in dr_return.
.LP
.\" $Header: XXorRegion.d,v 1.1 88/02/26 10:51:39 mento Exp $
The
.ZN XXorRegion
function calculates the difference between the union and intersection
of two regions.
.LP
.\" $Header: XOffsetReg.d,v 1.1 88/02/26 10:49:23 mento Exp $
The
.ZN XOffsetRegion
function moves the specified region by a specified amount.
.LP
.\" $Header: XShrinkReg.d,v 1.2 88/06/11 07:53:39 mento Exp $
The
.ZN XShrinkRegion
function reduces the specified region by a specified amount.
Positive values shrink the size of the region,
and negative values expand the region.
.SH "SEE ALSO"
XCreateRegion(3X11),
XDrawRectangle(3X11),
XEmptyRegion(3X11)
.br
\fI\*(xL\fP
