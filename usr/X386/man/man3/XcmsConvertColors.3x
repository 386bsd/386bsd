.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XcmsConvertColors 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XcmsConvertColors \- convert CCC color specifications
.SH SYNTAX
Status XcmsConvertColors\^(\^\fIccc\fP\^, \fIcolors_in_out\fP\^, \fIncolors\fP\^, \fItarget_format\fP\^, \fIcompression_flags_return\fP\^)
.br
      XcmsCCC \fIccc\fP\^;
.br
      XcmsColor \fIcolors_in_out\fP\^[\^]\^;
.br
      unsigned int \fIncolors\fP\^;
.br
      XcmsColorFormat \fItarget_format\fP\^;
.br
      Bool \fIcompression_flags_return\fP\^[\^]\^;
.SH ARGUMENTS
.IP \fIccc\fP 1i
Specifies the CCC.
If Conversion is between device-independent color spaces only
(for example, TekHVC to CIELuv),
the CCC is necessary only to specify the Client White Point.
.IP \fIcolors_in_out\fP 1i
Specifies an array of color specifications.
Pixel members are ignored and remain unchanged upon return.
.IP \fIcompression_flags_return\fP 1i
Specifies an array of Boolean values for returning compression status.
If a non-NULL pointer is supplied,
each element of the array is set to
.ZN True
if the corresponding color was compressed, and
.ZN False
otherwise.
Pass NULL if the compression status is not useful.
.IP \fIncolors\fP 1i
Specifies the number of 
.ZN XcmsColor
structures in the color specification array.
.IP \fItarget_format\fP 1i
Specifies the target color specification format.
.SH DESCRIPTION
The
.ZN XcmsConvertColors
function converts the color specifications in the specified array of
.ZN XcmsColor
structures from their current format to a single target format,
using the specified CCC.
When the return value is
.ZN XcmsFailure ,
the contents of the color specification array are left unchanged.
.LP
The array may contain a mixture of color specification formats
(for example, 3 CIE XYZ, 2 CIE Luv, ...).
Note that when the array contains both device-independent and
device-dependent color specifications, and the target_format argument specifies
a device-dependent format (for example,
.ZN XcmsRGBiFormat ,
.ZN XcmsRGBFormat )
all specifications are converted to CIE XYZ format then to the target
device-dependent format.
.SH "SEE ALSO"
DisplayOfCCC(3X11),
XcmsCCCofColormap(3X11),
XcmsCreateCCC(3X11),
XcmsDefaultCCC(3X11),
XcmsSetWhitePoint(3X11)
.br
\fI\*(xL\fP
