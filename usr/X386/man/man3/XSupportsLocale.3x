.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XSupportsLocal 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XSupportsLocale, XSetLocaleModifiers \- determine locale support and configure locale modifiers
.SH SYNTAX
Bool XSupportsLocale\^(\|)
.LP
char *XSetLocaleModifiers\^(\^\fImodifier_list\fP\^)
.br
      char *\fImodifier_list\fP\^;
.SH ARGUMENTS
.IP \fImodifier_list\fP 1i
Specifies the modifiers.
.SH DESCRIPTION
The 
.ZN XSupportsLocale
function returns 
.ZN True
if Xlib functions are capable of operating under the current locale.
If it returns 
.ZN False ,
Xlib locale-dependent functions for which the 
.ZN XLocaleNotSupported 
return status is defined will return 
.ZN XLocaleNotSupported .
Other Xlib locale-dependent routines will operate in the ``C'' locale.
.LP
.ZN XSetLocaleModifiers
sets the X modifiers for the current locale setting.
The modifier_list argument is a null-terminated string of the form
``{@\^\fIcategory\fP\^=\^\fIvalue\fP\^}'', that is,
having zero or more concatenated ``@\^\fIcategory\fP\^=\^\fIvalue\fP\^''
entries where \fIcategory\fP is a category name 
and \fIvalue\fP is the (possibly empty) setting for that category.
The values are encoded in the current locale.
Category names are restricted to the POSIX Portable Filename Character Set.
.LP
The local host X locale modifiers announcer (on POSIX-compliant systems,
the XMODIFIERS environment variable) is appended to the modifier_list to
provide default values on the local host.
If a given category appears more than once in the list,
the first setting in the list is used.
If a given category is not included in the full modifier list,
the category is set to an implementation-dependent default for the current locale.
An empty value for a category explicitly specifies the
implementation-dependent default.
.LP
If the function is successful, it returns a pointer to a string.  The contents
of the string are such that a subsequent call with that string (in the same
locale) will restore the modifiers to the same settings.  If modifier_list is
a NULL pointer,
.ZN XSetLocaleModifiers
also returns a pointer to such a string,
and the current locale modifiers are not changed.
.LP
If invalid values are given for one or more modifier categories supported by
the locale, a NULL pointer is returned, and none of the
current modifiers are changed.
.LP
At program startup the modifiers that are in effect are unspecified until
the first successful call to set them.  Whenever the locale is changed, the
modifiers that are in effect become unspecified until the next successful call
to set them.
Clients should always call
.ZN XSetLocaleModifiers
with a non-NULL modifier_list after setting the locale,
before they call any locale-dependent Xlib routine.
.LP
The only standard modifier category currently defined is ``im'',
which identifies the desired input method.
The values for input method are not standardized.
A single locale may use multiple input methods,
switching input method under user control.
The modifier may specify the initial input method in effect, 
or an ordered list of input methods.
Multiple input methods may be specified in a single im value string
in an implementation-dependent manner.
.LP
The returned modifiers string is owned by Xlib and should not be modified or
freed by the client.
It may be freed by Xlib after the current locale or modifiers is changed.
Until freed, it will not be modified by Xlib.
.SH "SEE ALSO"
\fI\*(xL\fP
