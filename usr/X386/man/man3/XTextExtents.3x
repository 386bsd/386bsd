.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XTextExtents 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XTextExtents, XTextExtents16, XQueryTextExtents, XQueryTextExtents16 \- compute or query text extents
.SH SYNTAX
XTextExtents\^(\^\fIfont_struct\fP\^, \fIstring\fP\^, \fInchars\fP\^, \
\fIdirection_return\fP, \fIfont_ascent_return\fP,
.br
              \fIfont_descent_return\fP, \fIoverall_return\fP\^)
.br
      XFontStruct *\fIfont_struct\fP\^;
.br
      char *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIfont_ascent_return\fP, *\fIfont_descent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;

.LP
XTextExtents16\^(\^\fIfont_struct\fP\^, \fIstring\fP\^, \fInchars\fP\^, \
\fIdirection_return\fP, \fIfont_ascent_return\fP, 
.br
                \fIfont_descent_return\fP, \fIoverall_return\fP\^)
.br
      XFontStruct *\fIfont_struct\fP\^;
.br
      XChar2b *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIfont_ascent_return\fP, *\fIfont_descent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;

.LP
XQueryTextExtents\^(\^\fIdisplay\fP, \fIfont_ID\fP, \fIstring\fP, \
\fInchars\fP, \fIdirection_return\fP, \fIfont_ascent_return\fP, 
.br
                    \fIfont_descent_return\fP, \fIoverall_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XID \fIfont_ID\fP\^;
.br
      char *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIfont_ascent_return\fP, *\fIfont_descent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;
.LP
XQueryTextExtents16\^(\^\fIdisplay\fP, \fIfont_ID\fP, \fIstring\fP, \
\fInchars\fP, \fIdirection_return\fP, \fIfont_ascent_return\fP, 
.br
                        \fIfont_descent_return\fP, \fIoverall_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XID \fIfont_ID\fP\^;
.br
      XChar2b *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIfont_ascent_return\fP, *\fIfont_descent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;
.SH ARGUMENTS
.IP \fIdirection_return\fP 1i
Returns the value of the direction hint
.Pn ( FontLeftToRight
or
.ZN FontRightToLeft ).
.\" $Header: display.a,v 1.1 88/02/26 10:26:29 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIfont_ID\fP 1i
Specifies either the font ID or the 
.ZN GContext
ID that contains the font.
.IP \fIfont_ascent_return\fP 1i
Returns the font ascent.
.IP \fIfont_descent_return\fP 1i
Returns the font descent.
.IP \fIfont_struct\fP 1i
Specifies the 
.ZN XFontStruct 
structure.
.IP \fInchars\fP 1i
Specifies the number of characters in the character string.
.\" $Header: string.a,v 1.1 88/02/26 10:31:32 mento Exp $
.IP \fIstring\fP 1i
Specifies the character string.
.IP \fIoverall_return\fP 1i
Returns the overall size in the specified
.ZN XCharStruct 
structure.
.SH DESCRIPTION
.\" $Header: XTextExt.d,v 1.2 88/06/11 07:54:02 mento Exp $
The
.ZN XTextExtents
and
.ZN XTextExtents16
functions 
perform the size computation locally and, thereby,
avoid the round-trip overhead of
.ZN XQueryTextExtents 
and
.ZN XQueryTextExtents16 .
Both functions return an
.ZN XCharStruct
structure, whose members are set to the values as follows.
.LP
The ascent member is set to the maximum of the ascent metrics of all
characters in the string.
The descent member is set to the maximum of the descent metrics.
The width member is set to the sum of the character-width metrics of all
characters in the string.
For each character in the string,
let W be the sum of the character-width metrics of all characters preceding 
it in the string.
Let L be the left-side-bearing metric of the character plus W.
Let R be the right-side-bearing metric of the character plus W.
The lbearing member is set to the minimum L of all characters in the string.
The rbearing member is set to the maximum R.
.LP
For fonts defined with linear indexing rather than 2-byte matrix indexing,
each 
.ZN XChar2b 
structure is interpreted as a 16-bit number with byte1 as the 
most-significant byte.
If the font has no defined default character,
undefined characters in the string are taken to have all zero metrics.
.LP
.\" $Header: XQryTExts.d,v 1.2 88/06/11 07:52:33 mento Exp $
The
.ZN XQueryTextExtents
and
.ZN XQueryTextExtents16
functions return the bounding box of the specified 8-bit and 16-bit
character string in the specified font or the font contained in the
specified GC.
These functions query the X server and, therefore, suffer the round-trip
overhead that is avoided by
.ZN XTextExtents
and 
.ZN XTextExtents16 .
Both functions return a
.ZN XCharStruct 
structure, whose members are set to the values as follows.
.LP
The ascent member is set to the maximum of the ascent metrics 
of all characters in the string.
The descent member is set to the maximum of the descent metrics.
The width member is set to the sum of the character-width metrics 
of all characters in the string.
For each character in the string,
let W be the sum of the character-width metrics of all characters preceding
it in the string.
Let L be the left-side-bearing metric of the character plus W.
Let R be the right-side-bearing metric of the character plus W.
The lbearing member is set to the minimum L of all characters in the string.
The rbearing member is set to the maximum R.
.LP
For fonts defined with linear indexing rather than 2-byte matrix indexing,
each 
.ZN XChar2b 
structure is interpreted as a 16-bit number with byte1 as the 
most-significant byte.
If the font has no defined default character,
undefined characters in the string are taken to have all zero metrics.
.LP
Characters with all zero metrics are ignored.
If the font has no defined default_char,
the undefined characters in the string are also ignored.
.LP
.ZN XQueryTextExtents
and
.ZN XQueryTextExtents16
can generate
.ZN BadFont
and
.ZN BadGC 
errors.
.SH DIAGNOSTICS
.\" $Header: badfont.e,v 1.2 87/09/09 18:08:11 mento Exp $
.TP 1i
.ZN BadFont
A value for a Font or GContext argument does not name a defined Font.
.\" $Header: badgc.e,v 1.1 87/09/04 08:23:02 mento Locked $
.TP 1i
.ZN BadGC
A value for a GContext argument does not name a defined GContext.
.SH "SEE ALSO"
XLoadFont(3X11),
XTextWidth(3X11)
.br
\fI\*(xL\fP
