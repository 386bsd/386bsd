.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XInternAtom 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XInternAtom, XGetAtomName \- create or return atom names
.SH SYNTAX
.\" $Header: XInternAtom.f,v 1.1 88/02/26 10:01:15 mento Exp $
Atom XInternAtom\^(\^\fIdisplay\fP, \fIatom_name\fP\^, \fIonly_if_exists\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      char *\fIatom_name\fP\^;
.br
      Bool \fIonly_if_exists\fP\^;
.LP
.\" $Header: XGetAtomName.f,v 1.1 88/02/26 10:00:23 mento Exp $
char *XGetAtomName\^(\^\fIdisplay\fP, \fIatom\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Atom \fIatom\fP\^;
.SH ARGUMENTS
.\" $Header: atom.a,v 1.2 88/04/06 12:06:45 mento Exp $
.IP \fIatom\fP 1i
Specifies the atom for the property name you want returned.
.\" $Header: atom_name.a,v 1.1 88/02/26 10:05:01 mento Exp $
.IP \fIatom_name\fP 1i
Specifies the name associated with the atom you want returned.
.\" $Header: display.a,v 1.1 88/02/26 10:26:29 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: onlyifexist.a,v 1.3 88/05/08 11:36:14 mento Exp $
.IP \fIonly_if_exists\fP 1i
Specifies a Boolean value that indicates whether
.ZN XInternAtom
creates the atom.
.SH DESCRIPTION
.\" $Header: XInternAtom.d,v 1.5 88/08/17 09:06:25 mento Exp $
The
.ZN XInternAtom
function returns the atom identifier associated with the specified atom_name
string.
If only_if_exists is 
.ZN False ,
the atom is created if it does not exist.
Therefore,
.ZN XInternAtom
can return
.ZN None .
If the atom name is not in the Host Portable Character Encoding
the result is implementation dependent.
Case matters; the strings \fIthing\fP, \fIThing\fP, and \fIthinG\fP 
all designate different atoms.  
The atom will remain defined even after the client's connection closes.
It will become undefined only when the last connection to
the X server closes.
.LP
.ZN XInternAtom
can generate
.ZN BadAlloc 
and
.ZN BadValue 
errors.
.LP
.\" $Header: XGetAtomName.d,v 1.3 88/05/08 11:40:48 mento Exp $
The
.ZN XGetAtomName
function returns the name associated with the specified atom.
If the data returned by the server is in the Latin Portable Character Encoding,
then the returned string is in the Host Portable Character Encoding.
Otherwise, the result is implementation dependent.
To free the resulting string,
call
.ZN XFree .
.LP
.ZN XGetAtomName
can generate a
.ZN BadAtom 
error.
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.ZN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badatom.e,v 1.1 87/09/04 08:22:55 mento Exp $
.TP 1i
.ZN BadAtom
A value for an Atom argument does not name a defined Atom.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.ZN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
XFree(3X11),
XGetWindowProperty(3X11)
.br
\fI\*(xL\fP
