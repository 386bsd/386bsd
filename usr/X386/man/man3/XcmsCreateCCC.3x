.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XcmsCreateCCC 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XcmsCreateCCC, XcmsFreeCCC \- creating and destroying CCCs
.SH SYNTAX
XcmsCCC XcmsCreateCCC\^(\^\fIdisplay\fP, \fIscreen_number\fP\^, \fIvisual\fP\^, \fIclient_white_point\fP\^, \fIcompression_proc\fP\^,
.br
                    \fIcompression_client_data\fP\^, \fIwhite_adjust_proc\fP\^, \fIwhite_adjust_client_data\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      int \fIscreen_number\fP\^;
.br
      Visual *\fIvisual\fP\^;
.br
      XcmsColor *\fIclient_white_point\fP\^;
.br
      XcmsCompressionProc \fIcompression_proc\fP\^;
.br
      XPointer \fIcompression_client_data\fP\^;
.br
      XcmsWhiteAdjustProc \fIwhite_adjust_proc\fP\^;
.br
      XPointer \fIwhite_adjust_client_data\fP\^;
.LP
void XcmsFreeCCC\^(\^\fIccc\fP\^)
.br
      XcmsCCC \fIccc\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 1.1 88/02/26 10:26:29 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIccc\fP 1i
Specifies the CCC.
.IP \fIclient_white_point\fP 1i
Specifies the Client White Point.
If NULL, the Client White Point is to be assumed to be the same as the
Screen White Point.
Note that the pixel member is ignored.
.IP \fIcompression_client_data\fP 1i
Specifies client data for use by the gamut compression procedure or NULL.
.IP \fIcompression_proc\fP 1i
Specifies the gamut compression procedure that is to be applied 
when a color lies outside the screen's color gamut.
If NULL and when functions using this CCC must convert
a color specification to a device-dependent format and encounters a color
that lies outside the screen's color gamut, 
that function will return
.ZN XcmsFailure .
.IP \fIscreen_number\fP 1i
Specifies the appropriate screen number on the host server.
.\" $Header: visual_gen.a,v 1.1 88/07/10 10:05:08 mento Exp $
.IP \fIvisual\fP 1i
Specifies the visual type.
.IP \fIwhite_adjust_client_data\fP 1i
Specifies client data for use with the white point adjustment procedure or NULL.
.IP \fIwhite_adjust_proc\fP 1i
Specifies the white adjustment procedure that is to be applied
when the Client White Point differs from the Screen White Point.
NULL indicates that no white point adjustment is desired.
.SH DESCRIPTION
The
.ZN XcmsCreateCCC
function creates a CCC for the specified display, screen, and visual.
.LP
The
.ZN XcmsFreeCCC
function frees the memory used for the specified CCC.
Note that default CCCs and those currently associated with colormaps
are ignored.
.SH "SEE ALSO"
DisplayOfCCC(3X11),
XcmsCCCofColormap(3X11),
XcmsConvertColors(3X11),
XcmsDefaultCCC(3X11),
XcmsSetWhitePoint(3X11)
.br
\fI\*(xL\fP
