.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtMake-Geometry-Request XtQuery-Geometry wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XtSetKeyboardFocus 3Xt "Release 3" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtSetKeyboardFocus \- focus events on a child widget
.SH SYNTAX
XtSetKeyboardFocus(\fIsubtree\fP\, \fIdescendant\fP)
.br
     Widget \fIsubtree\fP, \fIdescendant\fP;
.SH ARGUMENTS
.IP \fIdescendant\fP 1i
Specifies either the widget in the subtree structure which is to receive the 
keyboard event, or 
.ZN None .
Note that it is not an error to specify
.ZN None
when no input focus was previously set.
.ds Wi for which the keyboard focus is to be set
.IP \fIw\fP 1i
Specifies the widget \*(Wi.
.SH DESCRIPTION
If a future 
.ZN KeyPress
or
.ZN KeyRelease 
event occurs within the specified subtree,
.ZN XtSetKeyboardFocus
causes
.ZN XtDispatchEvent
to remap and send the event to the specified descendant widget.
.LP
When there is no modal cascade,
keyboard events can occur within a widget W in one of three ways:
.IP \(bu 5
W has the X input focus.
.IP \(bu 5
W has the keyboard focus of one of its ancestors,
and the event occurs within the ancestor or one of the ancestor's descendants.
.IP \(bu 5
No ancestor of W has a descendant within the keyboard focus,
and the pointer is within W.
.LP
When there is a modal cascade,
a widget W receives keyboard events if an ancestor of W is in the active
subset of the modal cascade and one or more of the previous conditions is
.ZN True .
.LP
When subtree or one of its descendants acquires the X input focus
or the pointer moves into the subtree such that keyboard events would
now be delivered to subtree, a
.ZN FocusIn
event is generated for the descendant if
.ZN FocusNotify
events have been selected by the descendant.
Similarly, when W loses the X input focus
or the keyboard focus for one of its ancestors, a
.ZN FocusOut
event is generated for descendant if
.ZN FocusNotify
events have been selected by the descendant.
.SH "SEE ALSO"
XtCallAcceptFocus(3Xt)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
