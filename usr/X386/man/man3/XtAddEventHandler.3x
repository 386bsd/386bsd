.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtMake-Geometry-Request XtQuery-Geometry wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XtAddEventHandler 3Xt "Release 3" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtAddEventHandler, XtAddRawEventHandler, XtRemoveEventHandler, XtRemoveRawEventHandler \- add and remove event handlers
.SH SYNTAX
void XtAddEventHandler(\fIw\fP, \fIevent_mask\fP, \fInonmaskable\fP, \
\fIproc\fP, \fIclient_data\fP)
.br
      Widget \fIw\fP;
.br
      EventMask \fIevent_mask\fP;
.br
      Boolean \fInonmaskable\fP;
.br
      XtEventHandler \fIproc\fP;
.br
      XtPointer \fIclient_data\fP;
.LP
void XtAddRawEventHandler(\fIw\fP, \fIevent_mask\fP, \fInonmaskable\fP, \
\fIproc\fP, \fIclient_data\fP)
.br
      Widget \fIw\fP;
.br
      EventMask \fIevent_mask\fP;
.br
      Boolean \fInonmaskable\fP;
.br
      XtEventHandler \fIproc\fP;
.br
      XtPointer \fIclient_data\fP;
.LP
void XtRemoveEventHandler(\fIw\fP, \fIevent_mask\fP, \fInonmaskable\fP, \
\fIproc\fP, \fIclient_data\fP)
.br
      Widget \fIw\fP;
.br
      EventMask \fIevent_mask\fP;
.br
      Boolean \fInonmaskable\fP;
.br
      XtEventHandler \fIproc\fP;
.br
      XtPointer \fIclient_data\fP;
.LP
void XtRemoveRawEventHandler(\fIw\fP, \fIevent_mask\fP, \fInonmaskable\fP, \
\fIproc\fP, \fIclient_data\fP)
.br
      Widget \fIw\fP;
.br
      EventMask \fIevent_mask\fP;
.br
      Boolean \fInonmaskable\fP;
.br
      XtEventHandler \fIproc\fP;
.br
      XtPointer \fIclient_data\fP;
.SH ARGUMENTS
.IP \fIclient_data\fP 1i
Specifies additional data to be passed to the client's event handler.
.ds Em to call or unregister this procedure
.IP \fIevent_mask\fP 1i
Specifies the event mask for which \*(Em.
.ds Nm called or removed
.IP \fInonmaskable\fP 1i
Specifies a Boolean value that indicates whether this procedure should be 
\*(Nm on the nonmaskable events
.Pn ( GraphicsExpose ,
.ZN NoExpose ,
.ZN SelectionClear ,
.ZN SelectionRequest ,
.ZN SelectionNotify ,
.ZN ClientMessage ,
and
.ZN MappingNotify ).
.ds Pr \ to be added or removed
.IP \fIproc\fP 1i
Specifies the procedure that is\*(Pr.
.ds Wi for which this event handler is being registered
.IP \fIw\fP 1i
Specifies the widget \*(Wi.
.SH DESCRIPTION
The
.ZN XtAddEventHandler
function registers a procedure with the dispatch mechanism that is
to be called when an event that matches the mask occurs on the specified
widget.
If the procedure is already registered with the same client_data,
the specified mask is ORed into the existing mask.
If the widget is realized,
.ZN XtAddEventHandler
calls
.ZN XSelectInput ,
if necessary.
.LP
The
.ZN XtAddRawEventHandler
function is similar to
.ZN XtAddEventHandler 
except that it does not affect the widget's mask and never causes an
.ZN XSelectInput
for its events.
Note that the widget might already have those mask bits set
because of other nonraw event handlers registered on it.
.LP
The
.ZN XtAddRawEventHandler
function is similar to
.ZN XtAddEventHandler 
except that it does not affect the widget's mask and never causes an
.ZN XSelectInput
for its events.
Note that the widget might already have those mask bits set
because of other nonraw event handlers registered on it.
.LP
The
.ZN XtRemoveRawEventHandler
function stops the specified procedure from receiving the specified events.
Because the procedure is a raw event handler,
this does not affect the widget's mask and never causes a call on
.ZN XSelectInput .
.SH "SEE ALSO"
XtAppNextEvent(3Xt),
XtBuildEventMask(3Xt)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
