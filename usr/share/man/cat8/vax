BAD144(8)               386BSD System Manager's Manual               BAD144(8)

NNAAMMEE
     bbaadd114444 - read/write dec standard 144 bad sector information

SSYYNNOOPPSSIISS
     bbaadd114444 [--cc] [--ff] [--vv] _d_i_s_k [_s_n_o [_b_a_d ...]]
     bbaadd114444 --aa [--cc] [--ff] [--vv] _d_i_s_k [_b_a_d ...]

DDEESSCCRRIIPPTTIIOONN
     BBaadd114444 can be used to inspect the information stored on a disk that is
     used by the disk drivers to implement bad sector forwarding.

     Available options:

     --aa      The argument list consists of new bad sectors to be added to an
             existing list.  The new sectors are sorted into the list, which
             must have been in order.  Replacement sectors are moved to accom-
             modate the additions; the new replacement sectors are cleared.

     --cc      Forces an attempt to copy the old sector to the replacement, and
             may be useful when replacing an unreliable sector.

     --ff      For a RP06, RM03, RM05, Fujitsu Eagle, or SMD disk on a Massbus,
             the --ff option may be used to mark the new bad sectors as ``bad''
             by reformatting them as unusable sectors.  This option is
             _r_e_q_u_i_r_e_d _u_n_l_e_s_s the sectors have already been marked bad, or the
             system will not be notified that it should use the replacement
             sector.  This option may be used while running multiuser; it is
             no longer necessary to perform format operations while running
             single-user.

     --vv      The entire process is described as it happens in gory detail if
             --vv (verbose) is given.

     The format of the information is specified by DEC standard 144, as fol-
     lows.  The bad sector information is located in the first 5 even numbered
     sectors of the last track of the disk pack.  There are five identical
     copies of the information, described by the _d_k_b_a_d structure.

     Replacement sectors are allocated starting with the first sector before
     the bad sector information and working backwards towards the beginning of
     the disk.  A maximum of 126 bad sectors are supported.  The position of
     the bad sector in the bad sector table determines the replacement sector
     to which it corresponds.  The bad sectors must be listed in ascending
     order.

     The bad sector information and replacement sectors are conventionally on-
     ly accessible through the ``c'' file system partition of the disk.  If
     that partition is used for a file system, the user is responsible for
     making sure that it does not overlap the bad sector information or any
     replacement sectors.  Thus, one track plus 126 sectors must be reserved
     to allow use of all of the possible bad sector replacements.

     The bad sector structure is as follows:

     struct dkbad {
             long    bt_csn;          /* cartridge serial number */
             u_short bt_mbz;          /* unused; should be 0 */
             u_short bt_flag;         /* -1 => alignment cartridge */
             struct bt_bad {
                   u_short bt_cyl;    /* bad sector cylinder number */
                   u_short bt_trksec; /* track and sector number */
             } bt_bad[126];
     };

     Unused slots in the _b_t__b_a_d array are filled with all bits set, a puta-
     tively illegal value.

     BBaadd114444 is invoked by giving a device name (e.g. hk0, hp1, etc.).  With no
     optional arguments it reads the first sector of the last track of the
     corresponding disk and prints out the bad sector information.  It issues
     a warning if the bad sectors are out of order.  BBaadd114444 may also be in-
     voked with a serial number for the pack and a list of bad sectors.  It
     will write the supplied information into all copies of the bad-sector
     file, replacing any previous information.  Note, however, that bbaadd114444
     does not arrange for the specified sectors to be marked bad in this case.
     This procedure should only be used to restore known bad sector informa-
     tion which was destroyed.

     It is no longer necessary to reboot to allow the kernel to reread the
     bad-sector table from the drive.

SSEEEE AALLSSOO
     badsect(8),  format(8)

BBUUGGSS
     It should be possible to format disks on-line under UNIX.

     It should be possible to mark bad sectors on drives of all type.

     On an 11/750, the standard bootstrap drivers used to boot the system do
     not understand bad sectors, handle ECC errors, or the special SSE (skip
     sector) errors of RM80-type disks.  This means that none of these errors
     can occur when reading the file /_v_m_u_n_i_x to boot.  Sectors 0-15 of the
     disk drive must also not have any of these errors.

     The drivers which write a system core image on disk after a crash do not
     handle errors; thus the crash dump area must be free of errors and bad
     sectors.

HHIISSTTOORRYY
     The bbaadd114444 command appeared in 4.1BSD.

4th Berkeley Distribution       March 16, 1991                               3



























