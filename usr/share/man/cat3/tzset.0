TZSET(3)                  386BSD Programmer's Manual                  TZSET(3)

NNAAMMEE
     ttzzsseett, ttzzsseettwwaallll - initialize time conversion information

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ttiimmee..hh>>

     _v_o_i_d
     ttzzsseett(_v_o_i_d)

     _v_o_i_d
     ttzzsseettwwaallll(_v_o_i_d)

DDEESSCCRRIIPPTTIIOONN
     The ttzzsseett() function initializes time conversion information used by the
     library routine localtime(3).  The environment variable TZ specifies how
     this is done.

     If TZ does not appear in the environment, the best available approxima-
     tion to local wall clock time, as specified by the tzfile(5)-format  file
     /_e_t_c/_l_o_c_a_l_t_i_m_e is used.

     If TZ appears in the environment but its value is a null string, Coordi-
     nated Universal Time (UTC) is used (without leap second correction).

     If TZ appears in the environment and its value begins with a colon (`'):,
     the rest of its value is used as a pathname of a tzfile(5)-format  file
     from which to read the time conversion information.  If the first charac-
     ter of the pathname is a slash (`/') it is used as an absolute pathname;
     otherwise, it is used as a pathname relative to the system time conver-
     sion information directory.

     If its value does not begin with a colon, it is first used as the path-
     name of a file (as described above) from which to read the time conver-
     sion information.  If that file cannot be read, the value is then inter-
     preted as a direct specification (the format is described below) of the
     time conversion information.

     If the TZ environment variable does not specify a tzfile(5)-format  file
     and cannot be interpreted as a direct specification, UTC is used.

     The ttzzsseettwwaallll() function sets things up so that localtime returns the
     best available approximation of local wall clock time.

SSPPEECCIIFFIICCAATTIIOONN FFOORRMMAATT
     When TZ is used directly as a specification of the time conversion infor-
     mation, it must have the following syntax (spaces inserted for clarity):

           _s_t_d _o_f_f_s_e_t [_d_s_t [_o_f_f_s_e_t] [ , _r_u_l_e]]

     Where:

           _s_t_d and _d_s_t  Three or more bytes that are the designation for the
                        standard (_s_t_d) or summer (_d_s_t) time zone.  Only _s_t_d is
                        required; if _d_s_t is missing, then summer time does not
                        apply in this locale.  Upper and lowercase letters are
                        explicitly allowed.  Any characters except a leading
                        colon (`'):, digits, comma (`,'), minus (`-'), plus
                        (`+'), and ASCII NUL are allowed.

           _o_f_f_s_e_t       Indicates the value one must add to the local time to
                        arrive at Coordinated Universal Time.  The _o_f_f_s_e_t has
                        the form:

                              _h_h [:_m_m[ : _s_s]]

                        The minutes (_m_m) and seconds (_s_s) are optional.  The
                        hour (_h_h) is required and may be a single digit.  The
                        _o_f_f_s_e_t following _s_t_d is required.  If no _o_f_f_s_e_t fol-
                        lows _d_s_t, summer time is assumed to be one hour ahead
                        of standard time.  One or more digits may be used; the
                        value is always interpreted as a decimal number.  The
                        hour must be between zero and 24, and the minutes (and
                        seconds) - if present - between zero and 59.  If pre-
                        ceded by a (`-') the time zone shall be east of the
                        Prime Meridian; otherwise it shall be west (which may
                        be indicated by an optional preceding (`+')).

           _r_u_l_e         Indicates when to change to and back from summer time.
                        The _r_u_l_e has the form:

                              _d_a_t_e/_t_i_m_e,_d_a_t_e/_t_i_m_e

                        where the first _d_a_t_e describes when the change from
                        standard to summer time occurs and the second _d_a_t_e de-
                        scribes when the change back happens.  Each _t_i_m_e field
                        describes when, in current local time, the change to
                        the other time is made.

                        The format of _d_a_t_e is one of the following:

                        JJ _n      The Julian day _n (1 <= _n <= 365).  Leap days
                                 are not counted; that is, in all years - in-
                                 cluding leap years - February 28 is day 59
                                 and March 1 is day 60.  It is impossible to
                                 explicitly refer to the occasional February
                                 29.

                        _n        The zero-based Julian day (0 <= _n <= 365 ) .
                                 Leap days are counted, and it is possible to
                                 refer to February 29.

                        MM _m._n._d  The _d'th day (0 <= _d <= 6 ) of week _n of
                                 month _m of the year (1 <= _n <= 5), (1 <= _m <=
                                 12), where week 5 means ``the last _d day in
                                 month _m'' which may occur in either the
                                 fourth or the fifth week).  Week 1 is the
                                 first week in which the _d'th day occurs.  Day
                                 zero is Sunday.

                                 The _t_i_m_e has the same format as _o_f_f_s_e_t except
                                 that no leading sign (`-') or (`+') is al-
                                 lowed.  The default, if _t_i_m_e is not given, is
                                 0022::0000::0000.

                        If no _r_u_l_e is present in the TZ specification, the
                        rules specified by the tzfile(5)-format  file
                        _p_o_s_i_x_r_u_l_e_s in the system time conversion information
                        directory are used, with the standard and summer time
                        offsets from UTC replaced by those specified by the
                        _o_f_f_s_e_t values in TZ.

     For compatibility with System V Release 3.1, a semicolon (`'); may be
     used to separate the _r_u_l_e from the rest of the specification.

FFIILLEESS
     /etc/localtime                  local time zone file
     /usr/share/zoneinfo             time zone directory


     /usr/share/zoneinfo/posixrules  rules for POSIX-style TZ's
     /usr/share/zoneinfo/GMT  for    UTC leap seconds

     If the file /_u_s_r/_s_h_a_r_e/_z_o_n_e_i_n_f_o/_G_M_T does not exist, UTC leap seconds are
     loaded from /_u_s_r/_s_h_a_r_e/_z_o_n_e_i_n_f_o/_p_o_s_i_x_r_u_l_e_s.

SSEEEE AALLSSOO
     date(1),  gettimeofday(2),  ctime(3),  getenv(3),  time(3),  tzfile(5)

HHIISSTTOORRYY
     The ttzzsseett and ttzzsseettwwaallll functions are currently under development.

BSD Experimental                 July 23, 1991                               4






















































