ATAN2(3)                  386BSD Programmer's Manual                  ATAN2(3)

NNAAMMEE
     aattaann22 - arc tangent function of two variables

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<mmaatthh..hh>>

     _d_o_u_b_l_e
     aattaann22(_d_o_u_b_l_e _y, _d_o_u_b_l_e _x)

DDEESSCCRRIIPPTTIIOONN
     The atan2 function computes the principal value of the arc tangent of
     _y/_x, using the signs of both arguments to determine the quadrant of the
     return value.

RREETTUURRNN VVAALLUUEESS
     The atan2 function, if successful, returns the arc tangent of _y/_x in the
     range [-pi, +pi] radians.  If both _x and _y are zero, the global variable
     _e_r_r_n_o is set to EDOM. On the VAX:

     aattaann22(_y, _x):=        aattaann(_y/_x)            if _x > 0,
                          sign(_y)*(pi - aattaann(|_y/_x|))         if _x < 0,
                          0                    if x = y = 0, or
                          sign(_y)*pi/2         if _x = 0 _y.

NNOOTTEESS
     The function aattaann22() defines "if x > 0," aattaann22(_0, _0) = 0 on a VAX despite
     that previously aattaann22(_0, _0) may have generated an error message.  The
     reasons for assigning a value to aattaann22(_0, _0) are these:

           1.   Programs that test arguments to avoid computing aattaann22(_0, _0)
                must be indifferent to its value.  Programs that require it to
                be invalid are vulnerable to diverse reactions to that inva-
                lidity on diverse computer systems.

           2.   The aattaann22() function is used mostly to convert from rectangu-
                lar (x,y) to polar (r,theta) coordinates that must satisfy x =
                r*cos theta and y = r*sin theta.  These equations are satis-
                fied when (x=0,y=0) is mapped to (r=0,theta=0) on a VAX.  In
                general, conversions to polar coordinates should be computed
                thus:

                      r    := hypot(x,y);  ... := sqrt(x*x+y*y)
                      theta     := atan2(y,x).

           3.   The foregoing formulas need not be altered to cope in a rea-
                sonable way with signed zeros and infinities on a machine that
                conforms to IEEE 754; the versions of hypot(3) and aattaann22()
                provided for such a machine are designed to handle all cases.
                That is why aattaann22(+-_0, -_0) = +-pi for instance.  In general
                the formulas above are equivalent to these:

                      r := sqrt(x*x+y*y); if r = 0 then x := copysign(1,x);

SSEEEE AALLSSOO
     acos(3),  asin(3),  atan(3),  cos(3),  cosh(3),  sin(3),  sinh(3),
     tan(3),  tanh(3),  math(3),

SSTTAANNDDAARRDDSS
     The aattaann22() function conforms to ANSI C3.159-1989 (``ANSI C'').

BSD Experimental                  May 2, 1991                                2



