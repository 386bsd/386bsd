GETSUBOPT(3)              386BSD Programmer's Manual              GETSUBOPT(3)

NNAAMMEE
     ggeettssuubboopptt - get sub options from an argument

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssttddiioo..hh>>

     _i_n_t
     ggeettssuubboopptt(_c_h_a_r **_o_p_t_i_o_n_p, _c_h_a_r * _c_o_n_s_t *_t_o_k_e_n_s, _c_h_a_r **_v_a_l_u_e_p)

DDEESSCCRRIIPPTTIIOONN
     The ggeettssuubboopptt() parses a string containing tokens delimited by one or
     more tab, space or comma (`,') characters.  It is intended for use in
     parsing groups of option arguments provided as part of a utility command
     line.

     The argument _o_p_t_i_o_n_p is a pointer to a pointer to the string.  The argu-
     ment _t_o_k_e_n_s is a pointer to a NULL-terminated array of pointers to
     strings.

     The ggeettssuubboopptt() function returns the zero-based offset of the pointer in
     the _t_o_k_e_n_s array referencing a string which matches the first token in
     the string, or, -1 if the string contains no tokens or _t_o_k_e_n_s does not
     contain a matching string.

     If the token is of the form ``name=value'', the location referenced by
     _v_a_l_u_e_p will be set to point to the start of the ``value'' portion of the
     token.

     On return from ggeettssuubboopptt(), _o_p_t_i_o_n_p will be set to point to the start of
     the next token in the string, or the null at the end of the string if no
     more tokens are present.  The external variable _s_u_b_o_p_t_a_r_g will be set to
     point to the start of the current token, or NULL if no tokens were pre-
     sent.  The argument _v_a_l_u_e_p will be set to point to the ``value'' portion
     of the token, or NULL if no ``value'' portion was present.

EEXXAAMMPPLLEE
     char *tokens[] = {
             #define ONE     0
                     "one",
             #define TWO     1
                     "two",
             NULL
     };

     ...

     extern char *optarg, *suboptarg;
     char *options, *value;

     while ((ch = getopt(argc, argv, "ab:")) != -1) {
             switch(ch) {
             case 'a':
                     /* process ``a'' option */
                     break;
             case 'b':
                     options = optarg;
                     while (*options) {
                             switch(getsubopt(&options, tokens, &value)) {
                             case ONE:
                                     /* process ``one'' sub option */
                                     break;
                             case TWO:
                                     /* process ``two'' sub option */
                                     if (!value)
                                             error("no value for two");
                                     i = atoi(value);
                                     break;
                             case -1:
                                     if (suboptarg)
                                             error("illegal sub option %s",
                                               suboptarg);
                                     else
                                             error("missing sub option");
                                     break;
                     }
                     break;
             }

SSEEEE AALLSSOO
     getopt(3),  strsep(3)

HHIISSTTOORRYY
     The ggeettssuubboopptt() function is currently under development.

BSD Experimental                 July 31, 1991                               3













































