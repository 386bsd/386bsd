IEEE(3)                   386BSD Programmer's Manual                   IEEE(3)

NNAAMMEE
     ccooppyyssiiggnn, ddrreemm, ffiinniittee, llooggbb, ssccaallbb ccooppyyssiiggnn, rreemmaaiinnddeerr,, - exponent
     manipulations

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<mmaatthh..hh>>

     _d_o_u_b_l_e
     ccooppyyssiiggnn(_d_o_u_b_l_e _x, _d_o_u_b_l_e _y)

     _d_o_u_b_l_e
     ddrreemm(_d_o_u_b_l_e _x, _d_o_u_b_l_e _y)

     _i_n_t
     ffiinniittee(_d_o_u_b_l_e _x)

     _d_o_u_b_l_e
     llooggbb(_d_o_u_b_l_e _x)

     _d_o_u_b_l_e
     ssccaallbb(_d_o_u_b_l_e _x, _i_n_t _n)

DDEESSCCRRIIPPTTIIOONN
     These functions are required for, or recommended by the IEEE standard 754
     for floating-point arithmetic.

     The ccooppyyssiiggnn() function returns _x with its sign changed to _y's.

     The ddrreemm() function returns the remainder _r := _x - _n*_y where _n is the
     integer nearest the exact value of _x/_y; moreover if |_n - _x/_y| = 1/2 then
     _n is even.  Consequently the remainder is computed exactly and |_r| <=
     |_y|/2. But ddrreemm(_x, _0) is exceptional.  (See below under _D_I_A_G_N_O_S_T_I_C_S.)

     The ffiinniittee() function returns the value 1 just when -infinity < _x <
     +infinity; otherwise a zero is returned (when |_x| = infinity or _x is _N_a_N
     or is the VAX's reserved operand).

     The llooggbb() function returns _x's exponent _n, a signed integer converted to
     double-precision floating-point and so chosen that 1 (<= |_x|2**_n < 2
     unless _x = 0 or (only on machines that conform to IEEE 754) |_x| =
     infinity or _x lies between 0 and the Underflow Threshold.  (See below
     under _B_U_G_S.)

     The Fn calb returns _x*(2**_n) computed, for integer n, without first
     computing 2*_n.

RREETTUURRNN VVAALLUUEESS
     The IEEE standard 754 defines ddrreemm(_x, _0) and ddrreemm(_i_n_f_i_n_i_t_y, _y) to be
     invalid operations that produce a _N_a_N.  On the VAX, ddrreemm(_x, _0) generates
     a reserved operand fault.  No infinity exists on a VAX.

     IEEE 754 defines llooggbb(+-_i_n_f_i_n_i_t_y) = infinity and llooggbb(_0) = -infinity, and
     requires the latter to signal Division-by-Zero.  But on a VAX, llooggbb(_0) =
     1.0 - 2.0**31 = -2,147,483,647.0.  And if the correct value of ssccaallbb()
     would overflow on a VAX, it generates a reserved operand fault and sets
     the global variable _e_r_r_n_o to ERANGE.

SSEEEE AALLSSOO
     floor(3),  math(3),  infnan(3)

HHIISSTTOORRYY
     The iieeeeee functions appeared in 4.3BSD.

BBUUGGSS
     Should ddrreemm(_x, _0) and llooggbb(_0) on a VAX signal invalidity by setting _e_r_r_n_o
     = EDOM ? Should llooggbb(_0) return  -1.7e38?

     IEEE 754 currently specifies that llooggbb(_d_e_n_o_r_m_a_l_i_z_e_d _n_o.) = llooggbb(_t_i_n_i_e_s_t
     _n_o_r_m_a_l_i_z_e_d _n_o. > _0) but the consensus has changed to the specification in
     the new proposed IEEE standard p854, namely that llooggbb(_x) satisfy

           1 <= ssccaallbb(|_x|, -_l_o_g_b(_x)) < Radix  ... = 2 for IEEE 754

     for every x except 0, infinity and _N_a_N.  Almost every program that
     assumes 754's specification will work correctly if llooggbb() follows 854's
     specification instead.

     IEEE 754 requires ccooppyyssiiggnn(_x, _N_a_N)) = +-_x but says nothing else about the
     sign of a _N_a_N.  A _N_a_N _Not _a _Number) is similar in spirit to the VAX's
     reserved operand, but very different in important details.  Since the
     sign bit of a reserved operand makes it look negative,

           ccooppyyssiiggnn(_x, _r_e_s_e_r_v_e_d _o_p_e_r_a_n_d) = -_x;

     should this return the reserved operand instead?

4.3 Berkeley Distribution         May 6, 1991                                2











































