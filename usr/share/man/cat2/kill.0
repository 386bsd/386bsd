KILL(2)                   386BSD Programmer's Manual                   KILL(2)

NNAAMMEE
     kkiillll - send signal to a process

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ssiiggnnaall..hh>>

     _i_n_t
     kkiillll(_p_i_d__t _p_i_d, _i_n_t _s_i_g)

DDEESSCCRRIIPPTTIIOONN
     The kkiillll() function sends the signal given by _s_i_g to _p_i_d, a process or a
     group of processes.  _S_i_g may be one of the signals specified in
     sigaction(2) or it may be 0, in which case error checking is performed
     but no signal is actually sent.  This can be used to check the validity
     of _p_i_d.

     For a process to have permission to send a signal to a process designated
     by _p_i_d, the real or effective user ID of the receving process must match
     that of the sending process or the user must have appropriate privileges
     (such as given by a set-user-ID program or the user is the super-user).
     A single exception is the signal SIGCONT, which may always be sent to any
     descendant of the current process.

     If _p_i_d is greater than zero:
             _S_i_g is sent to the process whose ID is equal to _p_i_d.

     If _p_i_d is zero:
             _S_i_g is sent to all processes whose group ID is equal to the
             process group ID of the sender, and for which the process has
             permission; this is a variant of killpg(2).

     If _p_i_d is -1:
             If the user has super user privileges, the signal is sent to all
             processes excluding system processes. If the user is not the
             super user, the signal is sent to all processes with the same uid
             as the user except the process sending the signal.  No error is
             returned if any process could be signaled.

     For compatibility with System V, if the process number is negative but
     not -1, the signal is sent to all processes whose process group ID is
     equal to the absolute value of the process number.  This is a variant of
     killpg(2).

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, a value of 0 is returned.  Otherwise, a value
     of -1 is returned and _e_r_r_n_o is set to indicate the error.

EERRRROORRSS
     KKiillll() will fail and no signal will be sent if:

     [EINVAL]  _S_i_g is not a valid signal number.

     [ESRCH]   No process can be found corresponding to that specified by _p_i_d.

     [ESRCH]   The process id was given as 0 but the sending process does not
               have a process group.

     [EPERM]   The sending process is not the super-user and its effective
               user id does not match the effective user-id of the receiving
               process.  When signaling a process group, this error is
               returned if any members of the group could not be signaled.

SSEEEE AALLSSOO
     getpid(2),  getpgrp(2),  killpg(2),  sigaction(2)

SSTTAANNDDAARRDDSS
     The kkiillll() function is expected to conform to IEEE Std 1003.1-1988
     (``POSIX'').

4th Berkeley Distribution       March 10, 1991                               2




























































