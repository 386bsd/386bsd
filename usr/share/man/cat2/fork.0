FORK(2)                   386BSD Programmer's Manual                   FORK(2)

NNAAMMEE
     ffoorrkk - create a new process

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _p_i_d__t
     ffoorrkk(_v_o_i_d)

DDEESSCCRRIIPPTTIIOONN
     FFoorrkk() causes creation of a new process.  The new process (child process)
     is an exact copy of the calling process (parent process) except for the
     following:

           oo   The child process has a unique process ID.

           oo   The child process has a different parent process ID (i.e., the
               process ID of the parent process).

           oo   The child process has its own copy of the parent's descriptors.
               These descriptors reference the same underlying objects, so
               that, for instance, file pointers in file objects are shared
               between the child and the parent, so that an lseek(2) on a de-
               scriptor in the child process can affect a subsequent read or
               write by the parent.  This descriptor copying is also used by
               the shell to establish standard input and output for newly cre-
               ated processes as well as to set up pipes.

           oo   The child processes resource utilizations are set to 0; see
               setrlimit(2).

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, ffoorrkk() returns a value of 0 to the child pro-
     cess and returns the process ID of the child process to the parent pro-
     cess.  Otherwise, a value of -1 is returned to the parent process, no
     child process is created, and the global variable _e_r_r_n_o is set to indi-
     cate the error.

EERRRROORRSS
     FFoorrkk() will fail and no child process will be created if:

     [EAGAIN]  The system-imposed limit on the total number of processes under
               execution would be exceeded.  This limit is configuration-
               dependent.

     [EAGAIN]  The system-imposed limit MAXUPRC (<_s_y_s/_p_a_r_a_m._h>) on the total
               number of processes under execution by a single user would be
               exceeded.

     [ENOMEM]  There is insufficient swap space for the new process.

SSEEEE AALLSSOO
     execve(2),  wait(2)

HHIISSTTOORRYY
     A ffoorrkk function call appeared in Version 6 AT&T UNIX.

 BSD                            March 10, 1991                               2






