


CRONTAB(5)                     1990                    CRONTAB(5)


NNAAMMEE
       crontab - tables for driving cron

DDEESSCCRRIIPPTTIIOONN
       A  _c_r_o_n_t_a_b file contains instructions to the _c_r_o_n_d(8) dae-
       mon of the general form: ``run this command at  this  time
       on this date''.  Each user has their own crontab, and com-
       mands in any given crontab will be executed  as  the  user
       who  owns  the  crontab.   Uucp and News will usually have
       their own crontabs, eliminating the  need  for  explicitly
       running _s_u(1) as part of a cron command.

       Blank  lines  and  leading  spaces  and  tabs are ignored.
       Lines whose first non-space character is a pound-sign  (#)
       are comments, and are ignored.  Note that comments are not
       allowed on the same line as cron commands, since they will
       be  taken  to be part of the command.  Similarly, comments
       are not allowed on the same line as  environment  variable
       settings.

       An  active line in a crontab will be either an environment
       setting or a cron command.  An environment setting  is  of
       the form,

           name = value

       where  the  spaces around the equal-sign (=) are optional,
       and any subsequent non-leading spaces  in  _v_a_l_u_e  will  be
       part  of the value assigned to _n_a_m_e.  The _v_a_l_u_e string may
       be placed in quotes (single or double,  but  matching)  to
       preserve leading or trailing blanks.

       Several  environment variables are set up automatically by
       the _c_r_o_n_d(8) daemon  from  the  /etc/passwd  line  of  the
       crontab's  owner:  USER,  HOME, and SHELL.  HOME and SHELL
       may be overridden by settings in  the  crontab;  USER  may
       not.

       (Note:  for  UUCP,  always  set SHELL=/bin/sh, or _c_r_o_n_d(8)
       will  cheerfully  try  to  execute  your  commands   using
       /usr/lib/uucp/uucico.)

       (Another  note: the USER variable is sometimes called LOG-
       NAME or worse on System V...  on  these  systems,  LOGNAME
       will be set rather than USER.)

       In  addition  to USER, HOME, and SHELL, _c_r_o_n_d(8) will look
       at MAILTO if it has any reason to send mail as a result of
       running  commands  in  ``this''  crontab.   If  MAILTO  is
       defined (and non-empty), mail  is  sent  to  the  user  so
       named.   If  MAILTO  is  defined but empty (MAILTO=""), no
       mail will be sent.  Otherwise mail is sent to the owner of
       the  crontab.   This  option  is  useful  if you decide on
       /bin/mail instead of /usr/lib/sendmail as your mailer when



January                         15                              1





CRONTAB(5)                     1990                    CRONTAB(5)


       you  install  cron  --  /bin/mail doesn't do aliasing, and
       UUCP usually doesn't read its mail.

       The format of a cron command is very much the V7 standard,
       with  a number of upward-compatible extensions.  Each line
       has five time and date  fields,  followed  by  a  command.
       Commands  are  executed by _c_r_o_n_d(8) when the minute, hour,
       and month of year fields match the current time, _a_n_d  when
       at  least  one of the two day fields (day of month, or day
       of week) match the  current  time  (see  ``Note''  below).
       _c_r_o_n_d(8)  examines  cron  entries  once every minute.  The
       time and date fields are:

              field          allowed values
              -----          --------------
              minute         0-59
              hour           0-23
              day of month   0-31
              month          0-12 (or names, see below)
              day of week    0-7 (0 or 7 is Sun, or use names)

       A field may be an asterisk (*), which always  matches  the
       current time.

       Ranges  of  numbers  are  allowed.  Ranges are two numbers
       separated with a hyphen.  The specified  range  is  inclu-
       sive.   For example, 8-11 for an ``hours'' entry specifies
       execution at hours 8, 9, 10 and 11.

       Lists are allowed.  A list is a set of numbers (or ranges)
       separated by commas.  Examples: ``1,2,5,9'', ``0-4,8-12''.

       Step values can be used in conjunction with ranges.   Fol-
       lowing  a  range with ``/<number>'' specifies skips of the
       number's value through the range.  For example, ``0-23/2''
       can  be  used in the hours field to specify command execu-
       tion every other hour (the alternative in the V7  standard
       is ``0,2,4,6,8,10,12,14,16,18,20,22'').

       Names  can  also  be  used  for the ``month'' and ``day of
       week'' fields.  Use the first three letters of the partic-
       ular  day or month (case doesn't matter).  Ranges or lists
       of names are not allowed.

       The ``sixth'' field (the rest of the line)  specifies  the
       command  to  be  run.   The  entire command portion of the
       line, up to a newline or % character, will be executed  by
       the  user's  login  shell or by the shell specified in the
       SHELL variable of the cronfile.  Percent-signs (%) in  the
       command,  unless  escaped  with  backslash  (\),  will  be
       changed into newline characters, and all  data  after  the
       first % will be sent to the command as standard input.

       Note: The day of a command's execution can be specified by



January                         15                              2





CRONTAB(5)                     1990                    CRONTAB(5)


       two fields - day of month,  and  day  of  week.   If  both
       fields  are restricted (ie, aren't *), the command will be
       run when _e_i_t_h_e_r field matches the current time.  For exam-
       ple,
       ``30  4 1,15 * 5'' would cause a command to be run at 4:30
       am on the 1st and 15th of each month, plus every Friday.

EEXXAAMMPPLLEE CCRROONN FFIILLEE
       # use /bin/sh to run commands, no matter what /etc/passwd says
       SHELL=/bin/sh
       # mail any output to `paul', no matter whose crontab this is
       MAILTO=paul
       #
       # run five minutes after midnight, every day
       5 0 * * *       $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
       # run at 2:15pm on the first of every month -- output mailed to paul
       15 14 1 * *     $HOME/bin/monthly
       # run at 10 pm on weekdays, annoy Joe
       0 22 * * 1-5   mail -s "It's 10pm" joe%Joe,%%Where are your kids?%
       23 0-23/2 * * * echo "run 23 minutes after midn, 2am, 4am ..., everyday"
       5 4 * * sun     echo "run at 5 after 4 every sunday"

SSEEEE AALLSSOO
       crond(8), crontab(1)

EEXXTTEENNSSIIOONNSS
       When specifying day of week, both day 0 and day 7 will  be
       considered  Sunday.   BSD  and  ATT seem to disagree about
       this.

       Lists and ranges are  allowed  to  co-exist  in  the  same
       field.   "1-3,7-9" would be rejected by ATT or BSD cron --
       they want to see "1-3" or "7,8,9" ONLY.

       Ranges can include "steps", so  "1-9/2"  is  the  same  as
       "1,3,5,7,9".

       Names  of  months  or days of the week can be specified by
       name.

       Environment variables can be set in the crontab.   In  BSD
       or ATT, the environment handed to child processes is basi-
       cally the one from /etc/rc.

       Command output is mailed to the crontab owner  (BSD  can't
       do this), can be mailed to a person other than the crontab
       owner (SysV can't do this), or the feature can  be  turned
       off  and  no  mail will be sent at all (SysV can't do this
       either).

AAUUTTHHOORR
       Paul Vixie, paul@vixie.sf.ca.us





January                         15                              3


