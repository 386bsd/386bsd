TIP(1)                      386BSD Reference Manual                     TIP(1)

NNAAMMEE
     ttiipp, ccuu - connect to a remote system

SSYYNNOOPPSSIISS
     ttiipp [--vv] --_s_p_e_e_d _s_y_s_t_e_m-_n_a_m_e
     ttiipp [--vv] --_s_p_e_e_d _p_h_o_n_e-_n_u_m_b_e_r
     ccuu _p_h_o_n_e-_n_u_m_b_e_r [--tt] [--ss _s_p_e_e_d] [--aa _a_c_u] [--ll _l_i_n_e] [--##]

DDEESSCCRRIIPPTTIIOONN
     TTiipp and _c_u establish a full-duplex connection to another machine, giving
     the appearance of being logged in directly on the remote cpu.  It goes
     without saying that you must have a login on the machine (or equivalent)
     to which you wish to connect.  The preferred interface is ttiipp. The _c_u
     interface is included for those people attached to the ``call UNIX''
     command of version 7.  This manual page describes only ttiipp.

     Available Option:

     --vv      Set verbose mode.

     Typed characters are normally transmitted directly to the remote machine
     (which does the echoing as well).  A tilde (`~') appearing as the first
     character of a line is an escape signal; the following are recognized:

     ~~^^DD or ~~.
           Drop the connection and exit (you may still be logged in on the
           remote machine).

     ~~cc [_n_a_m_e]
           Change directory to _n_a_m_e (no argument implies change to your home
           directory).

     ~~!!    Escape to a shell (exiting the shell will return you to tip).

     ~~>>    Copy file from local to remote.  TTiipp prompts for the name of a
           local file to transmit.

     ~~<<    Copy file from remote to local.  TTiipp prompts first for the name of
           the file to be sent, then for a command to be executed on the
           remote machine.

     ~~pp _f_r_o_m [_t_o]
           Send a file to a remote UNIX host.  The put command causes the
           remote UNIX system to run the command string ``cat > 'to''', while
           ttiipp sends it the ``from'' file.  If the ``to'' file isn't specified
           the ``from'' file name is used.  This command is actually a UNIX
           specific version of the ``~>'' command.

     ~~tt _f_r_o_m [_t_o]
           Take a file from a remote UNIX host.  As in the put command the
           ``to'' file defaults to the ``from'' file name if it isn't
           specified.  The remote host executes the command string ``cat
           'from';echo ^A'' to send the file to ttiipp.

     ~~     Pipe the output from a remote command to a local UNIX process.  The
           command string sent to the local UNIX system is processed by the
           shell.

     ~~$$    Pipe the output from a local UNIX process to the remote host.  The
           command string sent to the local UNIX system is processed by the
           shell.

     ~~##    Send a BREAK to the remote system.  For systems which don't support
           the necessary _i_o_c_t_l call the break is simulated by a sequence of
           line speed changes and DEL characters.

     ~~ss    Set a variable (see the discussion below).

     ~~^^ZZ   Stop ttiipp (only available with job control).

     ~~^^YY   Stop only the ``local side'' of ttiipp (only available with job
           control); the ``remote side'' of ttiipp, the side that displays output
           from the remote host, is left running.

     ~~??    Get a summary of the tilde escapes

     TTiipp uses the file /_e_t_c/_r_e_m_o_t_e to find how to reach a particular system
     and to find out how it should operate while talking to the system; refer
     to remote(5) for a full description.  Each system has a default baud rate
     with which to establish a connection.  If this value is not suitable, the
     baud rate to be used may be specified on the command line, e.g.  `tip
     -300 mds'.

     When ttiipp establishes a connection it sends out a connection message to
     the remote system; the default value, if any, is defined in /_e_t_c/_r_e_m_o_t_e
     (see remote(5)).

     When ttiipp prompts for an argument (e.g. during setup of a file transfer)
     the line typed may be edited with the standard erase and kill characters.
     A null line in response to a prompt, or an interrupt, will abort the
     dialogue and return you to the remote machine.

     TTiipp guards against multiple users connecting to a remote system by
     opening modems and terminal lines with exclusive access, and by honoring
     the locking protocol used by uucp(1).

     During file transfers ttiipp provides a running count of the number of lines
     transferred.  When using the ~> and ~< commands, the ``eofread'' and
     ``eofwrite'' variables are used to recognize end-of-file when reading,
     and specify end-of-file when writing (see below).  File transfers
     normally depend on tandem mode for flow control.  If the remote system
     does not support tandem mode, ``echocheck'' may be set to indicate ttiipp
     should synchronize with the remote system on the echo of each transmitted
     character.

     When ttiipp must dial a phone number to connect to a system it will print
     various messages indicating its actions.  TTiipp supports the DEC DN Ns-11
     and Racal-Vadic 831 auto-call-units; the DEC DF02 and DF03, Ventel 212+,
     Racal-Vadic 3451, and Bizcomp 1031 and 1032 integral call unit/modems.

   VVAARRIIAABBLLEESS
     TTiipp maintains a set of _v_a_r_i_a_b_l_e_s which control its operation.  Some of
     these variable are read-only to normal users (root is allowed to change
     anything of interest).  Variables may be displayed and set through the
     ``s'' escape.  The syntax for variables is patterned after vi(1) and
     Mail(1).  Supplying ``all'' as an argument to the set command displays
     all variables readable by the user.  Alternatively, the user may request
     display of a particular variable by attaching a `?' to the end.  For
     example ``escape?''  displays the current escape character.

     Variables are numeric, string, character, or boolean values.  Boolean
     variables are set merely by specifying their name; they may be reset by
     prepending a `!' to the name.  Other variable types are set by
     concatenating an `=' and the value.  The entire assignment must not have
     any blanks in it.  A single set command may be used to interrogate as
     well as set a number of variables.  Variables may be initialized at run
     time by placing set commands (without the ``~s'' prefix in a file ._t_i_p_r_c
     in one's home directory).  The --vv option causes ttiipp to display the sets
     as they are made.  Certain common variables have abbreviations.  The
     following is a list of common variables, their abbreviations, and their
     default values.

     _b_e_a_u_t_i_f_y      (bool) Discard unprintable characters when a session is
                   being scripted; abbreviated _b_e.

     _b_a_u_d_r_a_t_e      (num) The baud rate at which the connection was
                   established; abbreviated _b_a.

     _d_i_a_l_t_i_m_e_o_u_t   (num) When dialing a phone number, the time (in seconds) to
                   wait for a connection to be established; abbreviated _d_i_a_l.

     _e_c_h_o_c_h_e_c_k     (bool) Synchronize with the remote host during file
                   transfer by waiting for the echo of the last character
                   transmitted; default is _o_f_f.

     _e_o_f_r_e_a_d       (str) The set of characters which signify and end-of-
                   tranmission during a ~< file transfer command; abbreviated
                   _e_o_f_r.

     _e_o_f_w_r_i_t_e      (str) The string sent to indicate end-of-transmission
                   during a ~> file transfer command; abbreviated _e_o_f_w.

     _e_o_l           (str) The set of characters which indicate an end-of-line.
                   TTiipp will recognize escape characters only after an end-of-
                   line.

     _e_s_c_a_p_e        (char) The command prefix (escape) character; abbreviated
                   _e_s; default value is `~'.

     _e_x_c_e_p_t_i_o_n_s    (str) The set of characters which should not be discarded
                   due to the beautification switch; abbreviated _e_x; default
                   value is ``\t\n\f\b''.

     _f_o_r_c_e         (char) The character used to force literal data
                   transmission; abbreviated _f_o; default value is `^P'.

     _f_r_a_m_e_s_i_z_e     (num) The amount of data (in bytes) to buffer between file
                   system writes when receiving files; abbreviated _f_r.

     _h_o_s_t          (str) The name of the host to which you are connected;
                   abbreviated _h_o.

     _p_r_o_m_p_t        (char) The character which indicates and end-of-line on the
                   remote host; abbreviated _p_r; default value is `\n'.  This
                   value is used to synchronize during data transfers.  The
                   count of lines transferred during a file transfer command
                   is based on recipt of this character.

     _r_a_i_s_e         (bool) Upper case mapping mode; abbreviated _r_a; default
                   value is _o_f_f. When this mode is enabled, all lower case
                   letters will be mapped to upper case by ttiipp for
                   transmission to the remote machine.

     _r_a_i_s_e_c_h_a_r     (char) The input character used to toggle upper case
                   mapping mode; abbreviated _r_c; default value is `^A'.

     _r_e_c_o_r_d        (str) The name of the file in which a session script is
                   recorded; abbreviated _r_e_c; default value is ``tip.record''.

     _s_c_r_i_p_t        (bool) Session scripting mode; abbreviated _s_c; default is
                   _o_f_f. When _s_c_r_i_p_t is true, ttiipp will record everything
                   transmitted by the remote machine in the script record file
                   specified in _r_e_c_o_r_d. If the _b_e_a_u_t_i_f_y switch is on, only
                   printable ASCII characters will be included in the script
                   file (those characters betwee 040 and 0177).  The variable
                   _e_x_c_e_p_t_i_o_n_s is used to indicate characters which are an
                   exception to the normal beautification rules.

     _t_a_b_e_x_p_a_n_d     (bool) Expand tabs to spaces during file transfers;
                   abbreviated _t_a_b; default value is _f_a_l_s_e. Each tab is
                   expanded to 8 spaces.

     _v_e_r_b_o_s_e       (bool) Verbose mode; abbreviated _v_e_r_b; default is _t_r_u_e.
                   When verbose mode is enabled, ttiipp prints messages while
                   dialing, shows the current number of lines transferred
                   during a file transfer operations, and more.

EENNVVIIRROONNMMEENNTT
     TTiipp uses the following environment variables:

     SHELL       (str) The name of the shell to use for the ~! command;
                 default value is ``/bin/sh'', or taken from the environment.

     HOME        (str) The home directory to use for the ~c command; default
                 value is taken from the environment.

     HOST        Check for a default host if none specified.

     The variables ${REMOTE} and ${PHONES} are also exported.

FFIILLEESS
     /etc/remote             Global system descriptions.
     /etc/phones             Global phone number data base.
     ${REMOTE}               Private system descriptions.
     ${PHONES}               Private phone numbers.
     ~/.tiprc                Initialization file.
     tip.record              Record file.
     /var/log/aculog         Line access log.
     /var/spool/uucp/LCK..*  Lock file to avoid conflicts with uucp.

DDIIAAGGNNOOSSTTIICCSS
     Diagnostics are, hopefully, self explanatory.

SSEEEE AALLSSOO
     remote(5),  phones(5)

HHIISSTTOORRYY
     The ttiipp appeared command in 4.2BSD.

BBUUGGSS
     The full set of variables is undocumented and should, probably, be paired
     down.

4th Berkeley Distribution        July 27, 1991                               4


















