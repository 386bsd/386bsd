AT(1)                       386BSD Reference Manual                      AT(1)

NNAAMMEE
     aatt,, bbaattcchh,, aattqq,, aattrrmm - queue, examine, or delete jobs for later execution

SSYYOOPPSSIISS
     aatt [--qq _q_u_e_u_e] [--ff _f_i_l_e] [--mm] _t_i_m_e

     aattqq [--qq _q_u_e_u_e] [--vv]

     aattrrmm _j_o_b [_j_o_b ...]

     bbaattcchh [--ff _f_i_l_e] [--mm] _t_i_m_e

DDEESSCCRRIIPPTTIIOONN
     The aatt and bbaattcchh utilities read commands from the standard input or a
     specified file which are to be executed at a later time, using sh(1).

     The functions of the commands are as follows:

     aatt      Executes commands at a specified time.

     aattqq     Lists the user's pending jobs, unless the user is the superuser.
             In that case, everybody's jobs are listed.

     aattrrmm    Deletes jobs.

     bbaattcchh   executes commands when system load levels  permit.  In other
             words, it executes the commands when the load average drops below
             a specified level.

     For both aatt and bbaattcchh, the working directory, environment (except for the
     variables TTEERRMM, TTEERRMMCCAAPP, DDIISSPPLLAAYY, and __) and the umask are retained from
     the time of invocation.  The user will be mailed the standard output and
     standard error from his commands if any output is generated.  If aatt is
     executed from a su(1) shell, the owner of the login shell will receive
     the mail.

OOPPTTIIOONNSS
     The available options are as follows:

     --qq _q_u_e_u_e
             Use the specified queue.  A queue designation consists of a
             single letter; valid queue designation range from _a to _l. The _a
             queue is the default, and _b is the batch queue.  Queues with
             higher letters run with increased niceness.  If aattqq is given a
             specific queue, it will only show jobs pending in that queue.

     --mm      Send mail to the user when the job has completed, even if there
             was no output.

     --ff _f_i_l_e
             Reads the job from _f_i_l_e rather than the standard input.

     --vv      Shows completed but not yet deleted jobs in the queue.

TTIIMMEE SSPPEECCIIFFIICCAATTIIOONN
     AAtt allows some moderately complex time specifications.  It accepts times
     of the form _H_H_M_M or _H_H:_M_M to run a job at a specific time of day.  If
     that time is already passed, the next day is assumed.  You may also
     specify mmiiddnniigghhtt, nnoooonn, or tteeaattiimmee (4PM) and you can give a time of day
     suffixed with AAMM or PPMM for running in the morning or the evening.  You
     can also specify the date on which the job will be run by giving a date
     in the form _m_o_n_t_h-_n_a_m_e _d_a_y with an optional _y_e_a_r, or giving a date of the
     form _M_M_D_D_Y_Y, _M_M/_D_D/_Y_Y or _D_D._M_M._Y_Y. You can also give times like nnooww ++
     _c_o_u_n_t _t_i_m_e-_u_n_i_t_s, where the time units can be mmiinnuutteess,, hhoouurrss,, ddaayyss,, or
     wweeeekkss You can suffix the time with ttooddaayy to run the job today, or
     ttoommoorrrrooww to run the job tomorrow.

     For example, to run a job at 4PM three days from now, you would specify a
     time of 44PPMM ++ 33 ddaayyss. To run a job at 10:00AM on on July 31, you would
     specify a time of 1100AAMM JJuull 3311. Finally, to run a job at 1AM tomorrow, you
     would specify a time of 11AAMM ttoommoorrrrooww.

FFIILLEESS
     /var/at/jobs      Directory containing job files
     /var/at/spool     Directory containing output spool files
     /var/at/lockfile  Job-creation lock file.
     /var/run/utmp

SSEEEE AALLSSOO
     crond(8),  nice(1),  sh(1),  atrun(8)

AAUUTTHHOORR
     Thomas Koenig, ig25@rz.uni-karlsruhe.de

BBUUGGSS
     Traditional access control to aatt and bbaattcchh via the files /_v_a_r/_a_t/_a_t._a_l_l_o_w
     and /_v_a_r/_a_t/_a_t._d_e_n_y is not implemented.

     If the file /_v_a_r/_r_u_n/_u_t_m_p is not available or corrupted, or if the user
     is not logged in at the time aatt is invoked, the mail is sent to the
     userid found in the environment variable LLOOGGNNAAMMEE. If that is undefined or
     empty, the current userid is assumed.

BSD Experimental               December 5, 1993                              2




































