CPIO(1)                     386BSD Reference Manual                    CPIO(1)

NNAAMMEE
     ccppiioo - copy file archives in and out

SSYYNNOOPPSSIISS
     ccppiioo --ii [--BBccddmmrrttuuvvffssSSbb66] [_p_a_t_t_e_r_n_s]
     ccppiioo --oo [--aaccBBvv]
     ccppiioo --pp [--aaddllmmrruuvv] _d_i_r_e_c_t_o_r_y

DDEESSCCRRIIPPTTIIOONN
     CCppiioo has three functional modes; copy out, copy in and pass.

     Functional Options:

     --ii    _C_o_p_y _i_n. Extracts files from the standard input, which is assumed
           to be the product of a previous ccppiioo --oo. Only files with names that
           match patterns are selected.  Patterns are given in the name-
           generating notation of sh(1).  In patterns, meta-characters `?',
           `*', and `[...]' match the slash `/' character.  Multiple patterns
           may be specified and if no patterns are specified, the default for
           patterns is `*' (i.e., select all files).  The extracted files are
           conditionally created and copied into the current directory tree
           based upon the options described below.  The permissions of the
           files will be those of the previous ccppiioo --oo. The owner and group of
           the files will be that of the current user unless the user is su-
           per-user, which causes ccppiioo to retain the owner and group of the
           files of the previous ccppiioo --oo.

     --oo    _C_o_p_y _o_u_t. Reads the standard input to obtain a list of path names
           and copies those files onto the standard output together with path
           name and status information.  Output is padded to a 512-byte bound-
           ary.

     --pp    _P_a_s_s. Reads the standard input to obtain a list of path names of
           files that are conditionally created and copied into the destina-
           tion directory tree based upon the options described below.

     Options for the above functional options:

     --BB    Input/output is to be blocked 5,120 bytes to the record (does not
           apply to the pass options; meaningful only with data directed to or
           from /_d_e_v/_r_m_t/??).

     --SS    Swap halfwords.  Use only with the --ii option.

     --aa    Reset access times of input files after they have been copied.

     --bb    halfwords.  Use only with the --ii option.

     --cc    Write header information in ASCII character form for portability.

     --dd    Directories are to be created as needed.

     --ff    Copy in all files except those in patterns.

     --ll    Whenever possible, link files rather than copying them.  Usable on-
           ly with the --pp option.

     --mm    Retain previous file modification time.  This option is ineffective
           on directories that are being copied.

     --rr    Interactively rename files.  If the user types a null line, the


           files is skipped.

     --ss    Swap bytes.  Use only with the --ii option.

     --tt    Print a table of contents of the input.  No files are created.

     --uu    Copy unconditionally (normally, an older file will not replace a
           newer file with the same name).

     --vv    Verbose: causes a list of file names to be printed.  When used with
           the t option, the table of contents looks like the output of an `ls
           -l' command (see ls(1)).

     --66    Process an old (i.e., UNIX System Sixth Edition format) file.  Only
           useful with --ii (copy in).

EEXXAAMMPPLLEESS
     The first example below copies the contents of a directory into an
     archive; the second duplicates a directory hierarchy:

           ls  | cpio -o > edev/rmt/0m

           cd olddir
           find . -depth -print |  cpio -pdl newdir

           The trivial case

                 find . -depth -print | cpio -oB >/dev/fmt/0m

           can be handled more efficiently by:

                 find . -cpio /dev/rmt/0m

SSEEEE AALLSSOO
     ar(1),  find(1),  ls(1),  cpio(4)

HHIISSTTOORRYY
     The ccppiioo command appeared in System V AT&T UNIX.  This program is derived
     from the System V AT&T sources which were contributed to the public do-
     main by AT&T.

BBUUGGSS
     Path names are restricted to 128 characters.  If there are too many
     unique linked files, the program runs out of memory to keep track of them
     and, thereafter, linking information is lost.  Only the super-user can
     copy special files.  The --BB option does not work with certain magnetic
     tape drives.

BSD Experimental                March 14, 1991                               3


















