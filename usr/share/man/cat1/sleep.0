SLEEP(1)                    386BSD Reference Manual                   SLEEP(1)

NNAAMMEE
     sslleeeepp - suspend execution for an interval of time

SSYYNNOOPPSSIISS
     sslleeeepp _s_e_c_o_n_d_s

DDEESSCCRRIIPPTTIIOONN
     The sslleeeepp command suspends execution for a minimum of _s_e_c_o_n_d_s. SSlleeeepp is
     used to schedule the execution of other commands (see _E_X_A_M_P_L_E_S below).

     The SSlleeeepp utility exits with one of the following values:

     0     On successful completetion, or if the signal SIGALRM was received.

     >0    An error occurred.

EEXXAAMMPPLLEESS
     To schedule the execution of a command for _x number seconds later:

           (sleep 1800; sh command_file >& errors)&

     This incantation would wait a half hour before running the script com-
     mand_file. (See the at(1) utility.)

     To reiteratively run a command (with the csh(1)):

           while (1)
                   if (! -r zzz.rawdata) then
                           sleep 300
                   else
                           foreach i (`ls *.rawdata`)
                                   sleep 70
                                   awk -f collapse_data $i >> results
                           end
                           break
                   endif
           end

     The scenario for a script such as this might be: a program currently run-
     ning is taking longer than expected to process a series of files, and it
     would be nice to have another program start processing the files created
     by the first program as soon as it is finished (when zzz.rawdata is cre-
     ated).  The script checks every five minutes for the file zzz.rawdata,
     when the file is found, then another portion processing is done curteous-
     ly by sleeping for 70 seconds in between each awk job.

SSEEEE AALLSSOO
     setitimer(2),  alarm(3),  sleep(3),  at(1)

SSTTAANNDDAARRDDSS
     The sslleeeepp command is expected to be IEEE Std1003.2 (``POSIX'') compati-
     ble.

BSD Experimental                 July 27, 1991                               2










