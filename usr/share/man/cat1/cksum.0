CKSUM(1)                    386BSD Reference Manual                   CKSUM(1)

NNAAMMEE
     cckkssuumm - display file checksums and block counts

SSYYNNOOPPSSIISS
     cckkssuumm [--oo [1 | 2]] [_f_i_l_e ...]

DDEESSCCRRIIPPTTIIOONN
     The cckkssuumm utility writes to standard output three whitespace separated
     fields for each input file (or the standard input by default).  These
     fields are a checksum CRC, the total number of bytes in the file and the
     file name.

     The options are as follows:

     --oo      Use historic algorithms instead of the (superior) default one.

             Algorithm 1 is the algorithm used by historic BSD UNIX systems as
             the sum(1) algorithm and by historic AT&T System V UNIX systems
             as the sum algorithm when using the --rr option.  This is a 16-bit
             checksum, with a right rotation before each addition; overflow is
             discarded.

             Algorithm 2 is the algorithm used by historic AT&T System V UNIX
             systems as the default sum algorithm.  This is a 32-bit checksum,
             and is defined as follows:

                   s = sum of all bytes;
                   r = s % 2^16 + (s % 2^32) / 2^16;
                   cksum = (r % 2^16) + r / 2^16;

             Both algorithm 1 and 2 write to standard output the same fields
             as the default algorithm except that the size of the file in
             bytes is replaced with the size of the file in blocks.  For
             historic reasons, the block size is 1024 for algorithm 1 and 512
             for algorithm 2.  Partial blocks are rounded up.

     The default CRC used is based on the polynomial used for CRC error
     checking in the networking standard ISO 8802-3: 1989  The CRC checksum
     encoding is defined by the generating polynomial:

           G(x) = x^32 + x^26 + x^23 + x^22 + x^16 + x^12 +
                x^11 + x^10 + x^8 + x^7 + x^5 + x^4 + x^2 + x + 1

     Mathematically, the CRC value corresponding to a given file is defined by
     the following procedure:

           The _n bits of the file are considered to be the coefficients of a
           mod 2 polynomial M(x) of degree _n-1.

           M(x) is multiplied by x^32 (i.e., shifted left 32 bits) and divided
           by G(x) using mod 2 division, producing a remainder R(x) of degree
           <= 31.  During the division, each time the intermediate remainder
           is zero, it is changed to the next value from a predefined sequence
           of 32-bit integers before completing the division.  This sequence
           is long and complex -- see the source code for more information.

           The coefficients of R(x) are considered to be a 32-bit sequence.

     The calculation used is identical to that given in pseudo-code in the ACM
     article referenced below.

     The cckkssuumm utility exits 0 on success, and >0 if an error occurs.

SSEEEE AALLSSOO
     Dilip V. Sarwate, "Computation of Cyclic Redundancy Checks Via Table
     Lookup", _C_o_m_m_u_n_i_c_a_t_i_o_n_s _o_f _t_h_e _A_C_M, August 1988.

SSTTAANNDDAARRDDSS
     CCkkssuumm is expected to conform to IEEE Std1003.2 (``POSIX'').

HHIISSTTOORRYY
     The cckkssuumm utility is currently under development.

BSD Experimental                 June 27, 1991                               2
























































