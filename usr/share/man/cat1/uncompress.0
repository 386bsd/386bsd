COMPRESS(1)                 386BSD Reference Manual                COMPRESS(1)

NNAAMMEE
     ccoommpprreessss, uunnccoommpprreessss, zzccaatt - compress and expand data

SSYYNNOOPPSSIISS
     ccoommpprreessss [--ff] [--vv] [--cc] [--bb _b_i_t_s] [_f_i_l_e ...]
     uunnccoommpprreessss [--ff] [--vv] [--cc] _f_i_l_e ...
     zzccaatt [_f_i_l_e ...]

DDEESSCCRRIIPPTTIIOONN
     CCoommpprreessss reduces the size of the named files using adaptive Lempel-Ziv
     coding.  Whenever possible, each _f_i_l_e is replaced by one with the exten-
     sion ._Z, while keeping the same ownership modes, access and modification
     times.  If no files are specified, the standard input is compressed to
     the standard output.  Compressed files can be restored to their original
     form using uunnccoommpprreessss or zzccaatt

     --ff      Force compression of _f_i_l_e, even if it does not actually shrink or
             the corresponding _f_i_l_e._Z file already exists.  Except when run in
             the background under /_b_i_n/_s_h, if --ff is not given the user is
             prompted as to whether an existing _f_i_l_e._Z file should be over-
             written.

     --cc      (``cat'').  CCoommpprreessss//uunnccoommpprreessss writes to the standard output; no
             files are changed.  The nondestructive behavior of zzccaatt is iden-
             tical to that of uunnccoommpprreessss --cc.

     --bb      Specify _b_i_t_s code limit (see below).

     --vv      Print the percentage reduction of each file.

     CCoommpprreessss uses the modified Lempel-Ziv algorithm popularized in "A Tech-
     nique for High Performance Data Compression", Terry A. Welch, _I_E_E_E
     _C_o_m_p_u_t_e_r, vol. 17, (June 1984), pp. 8-19.  Common substrings in the file
     are first replaced by 9-bit codes 257 and up.  When code 512 is reached,
     the algorithm switches to 10-bit codes and continues to use more bits un-
     til the limit specified by the --bb flag is reached (default 16).  _B_i_t_s
     must be between 9 and 16.  The default can be changed in the source to
     allow ccoommpprreessss to be run on a smaller machine.

     After the _b_i_t_s limit is attained, ccoommpprreessss periodically checks the com-
     pression ratio.  If it is increasing, ccoommpprreessss continues to use the ex-
     isting code dictionary.  However, if the compression ratio decreases,
     ccoommpprreessss discards the table of substrings and rebuilds it from scratch.
     This allows the algorithm to adapt to the next "block" of the file.

     Note that the --bb flag is omitted for _u_n_c_o_m_p_r_e_s_s since the _b_i_t_s parameter
     specified during compression is encoded within the output, along with a
     magic number to ensure that neither decompression of random data nor re-
     compression of compressed data is attempted.

     The amount of compression obtained depends on the size of the input, the
     number of _b_i_t_s per code, and the distribution of common substrings.  Typ-
     ically, text such as source code or English is reduced by 50-60%.  Com-
     pression is generally much better than that achieved by Huffman coding
     (as used in the historical command pack), or adaptive Huffman coding (as
     used in the historical command compact), and takes less time to compute.

     If an error occurs, exit status is 1; if the last file was not compressed
     because it became larger, the status is 2; otherwise the status is 0.

DDIIAAGGNNOOSSTTIICCSS



     Usage: compress [-fvc] [-b maxbits] [file ...]
           Invalid options were specified on the command line.

     Missing maxbits
           Maxbits must follow --bb.

     _f_i_l_e: not in compressed format
           The file specified to _u_n_c_o_m_p_r_e_s_s has not been compressed.

     _f_i_l_e: compressed with _x_x bits, can only handle _y_y bits
           _F_i_l_e was compressed by a program that could deal with more _b_i_t_s
           than the compress code on this machine.  Recompress the file with
           smaller _b_i_t_s.

     _f_i_l_e: already has .Z suffix -- no change
           The file is assumed to be already compressed.  Rename the file and
           try again.

     _f_i_l_e: filename too long to tack on .Z
           The file cannot be compressed because its name is longer than 12
           characters.  Rename and try again.  This message does not occur on
           BSD UNIX systems.

     _f_i_l_e already exists; do you wish to overwrite (y or n)?
           Respond "y" if you want the output file to be replaced; "n" if not.

     uncompress: corrupt input
           A SIGSEGV violation was detected which usually means that the input
           file is corrupted.

     Compression: _x_x._x_x%
           Percentage of the input saved by compression.  (Relevant only for
           --vv.)

     -- not a regular file: unchanged
           When the input file is not a regular file, (e.g. a directory), it
           is left unaltered.

     -- has _x_x other links: unchanged
           The input file has links; it is left unchanged.  See ln(1) for more
           information.

     -- file unchanged
           No savings is achieved by compression.  The input remains virgin.

FFIILLEESS
     file.Z  compressed file is file.Z

BBUUGGSS
     Although compressed files are compatible between machines with large mem-
     ory, --bb_1_2 should be used for file transfer to architectures with a small
     process data space (64KB or less, as exhibited by the DEC PDP series, the
     Intel 80286, etc.)

     CCoommpprreessss should be more flexible about the existence of the `.Z' suffix.

HHIISSTTOORRYY
     The ccoommpprreessss command appeared in 4.3BSD.

4.3 Berkeley Distribution        July 30, 1991                               3






