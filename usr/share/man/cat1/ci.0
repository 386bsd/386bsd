


CI(1L)                                                     CI(1L)


NNAAMMEE
       ci - check in RCS revisions

SSYYNNOOPPSSIISS
       ccii [ options ] file ...

DDEESSCCRRIIPPTTIIOONN
       _C_i  stores  new  revisions into RCS files.  Each file name
       ending in `,v' is taken to be an RCS file, all others  are
       assumed  to be working files containing new revisions.  _C_i
       deposits the  contents  of  each  working  file  into  the
       corresponding  RCS file.  If only a working file is given,
       _c_i tries  to  find  the  corresponding  RCS  file  in  the
       directory  ./RCS  and  then in the current directory.  For
       more details, see the file naming section below.

       For _c_i to work, the caller's login must be on  the  access
       list,  except if the access list is empty or the caller is
       the superuser or the owner of the file.  To append  a  new
       revision  to  an existing branch, the tip revision on that
       branch must be locked by the caller. Otherwise, only a new
       branch  can  be  created. This restriction is not enforced
       for the owner of the file, unless locking is set to _s_t_r_i_c_t
       (see  _r_c_s(1L)).  A lock held by someone else may be broken
       with the _r_c_s command.

       Normally, _c_i checks whether the revision to  be  deposited
       is  different  from  the  preceding  one.  If  it  is  not
       different, _c_i either aborts the deposit (if --qq  is  given)
       or asks whether to abort (if --qq is omitted). A deposit can
       be forced with the --ff option.

       For each revision deposited, _c_i prompts for a log message.
       The  log  message  should summarize the change and must be
       terminated with a  line  containing  a  single  `.'  or  a
       control-D.   If  several  files  are  checked  in, _c_i asks
       whether  to  reuse  the  previous  log  message.   If  the
       standard input is not a terminal, _c_i suppresses the prompt
       and uses the same log message for all files.  See also --mm.

       The  number  of the deposited revision can be given by any
       of the options --rr, --ff, --kk, --ll, --uu, or --qq.

       If the RCS file does not exist, _c_i creates it and deposits
       the  contents  of the working file as the initial revision
       (default number: 1.1).  The access list is initialized  to
       empty.    Instead   of   the   log  message,  _c_i  requests
       descriptive text (see --tt below).

       --rr[_r_e_v]   assigns the revision number _r_e_v to the  checked-
                 in  revision,  releases  the corresponding lock,
                 and  deletes  the  working  file.  This  is  the
                 default.   _R_e_v  may  be  symbolic,  numeric,  or
                 mixed.



University                    Purdue                            1





CI(1L)                                                     CI(1L)


                 If _r_e_v is a revision number, it must  be  higher
                 than  the  latest one on the branch to which _r_e_v
                 belongs, or must start a new branch.

                 If _r_e_v  is  a  branch  rather  than  a  revision
                 number,  the  new  revision  is appended to that
                 branch.  The  level  number   is   obtained   by
                 incrementing  the  tip  revision  number of that
                 branch.  If _r_e_v indicates a non-existing branch,
                 that branch is created with the initial revision
                 numbered _r_e_v.1.

                 If _r_e_v is omitted, _c_i tries to  derive  the  new
                 revision  number from the caller's last lock. If
                 the caller has locked  the  tip  revision  of  a
                 branch,  the  new  revision  is appended to that
                 branch. The new revision number is  obtained  by
                 incrementing  the  tip  revision number.  If the
                 caller locked a non-tip revision, a  new  branch
                 is  started at that revision by incrementing the
                 highest branch number  at  that  revision.   The
                 default  initial branch and level numbers are 1.

                 If _r_e_v is omitted and the caller  has  no  lock,
                 but  he  is the owner of the file and locking is
                 not set to _s_t_r_i_c_t, then the revision is appended
                 to  the  default branch (normally the trunk; see
                 the --bb option of _r_c_s(1L)).

                 Exception:  On  the  trunk,  revisions  can   be
                 appended to the end, but not inserted.

       --ff[_r_e_v]   forces  a deposit; the new revision is deposited
                 even it is not different from the preceding one.

       --kk[_r_e_v]   searches  the working file for keyword values to
                 determine its revision  number,  creation  date,
                 state, and author (see _c_o(1)), and assigns these
                 values to the deposited  revision,  rather  than
                 computing  them  locally.   It  also generates a
                 default login message noting the  login  of  the
                 caller and the actual checkin date.  This option
                 is useful for software distribution. A  revision
                 that  is sent to several sites should be checked
                 in with the --kk option at these sites to preserve
                 the  original  number,  date, author, and state.
                 The extracted keyword values and the default log
                 message  may  be overridden with the options --rr,
                 --dd, --ss, --ww, and --mm.

       --ll[_r_e_v]   works like --rr, except it performs an  additional
                 _c_o  --ll  for  the  deposited  revision. Thus, the
                 deposited revision is  immediately  checked  out
                 again  and  locked.  This is useful for saving a



University                    Purdue                            2





CI(1L)                                                     CI(1L)


                 revision although one wants to continue  editing
                 it after the checkin.

       --uu[_r_e_v]   works   like   --ll,  except  that  the  deposited
                 revision is not locked.  This is useful  if  one
                 wants  to  process  (e.g., compile) the revision
                 immediately after checkin.

       --qq[_r_e_v]   quiet mode; diagnostic output is not printed.  A
                 revision   that   is   not  different  from  the
                 preceding one is not  deposited,  unless  --ff  is
                 given.

       --dd_d_a_t_e    uses  _d_a_t_e  for the checkin date and time.  _D_a_t_e
                 may be specified in free format as explained  in
                 _c_o(1).  Useful for lying about the checkin date,
                 and for --kk if no date is available.

       --mm_m_s_g     uses the string _m_s_g as the log message  for  all
                 revisions checked in.

       --nn_n_a_m_e    assigns  the symbolic name _n_a_m_e to the number of
                 the checked-in revision.   _C_i  prints  an  error
                 message  if  _n_a_m_e is already assigned to another
                 number.

       --NN_n_a_m_e    same as --nn, except that it overrides a  previous
                 assignment of _n_a_m_e.

       --ss_s_t_a_t_e   sets the state of the checked-in revision to the
                 identifier _s_t_a_t_e.  The default is _E_x_p.

       --tt[_t_x_t_f_i_l_e]
                 writes  descriptive  text  into  the  RCS   file
                 (deletes  the  existing  text).   If  _t_x_t_f_i_l_e is
                 omitted, _c_i prompts the user for  text  supplied
                 from  the standard input, terminated with a line
                 containing   a   single   `.'   or    control-D.
                 Otherwise,  the  descriptive text is copied from
                 the  file   _t_x_t_f_i_l_e.    During   initialization,
                 descriptive  text is requested even if --tt is not
                 given.  The prompt  is  suppressed  if  standard
                 input is not a terminal.

       --ww_l_o_g_i_n   uses _l_o_g_i_n for the author field of the deposited
                 revision.  Useful for lying  about  the  author,
                 and for --kk if no author is available.

FFIILLEE NNAAMMIINNGG
       Pairs of RCS files and working files may be specified in 3
       ways (see also the example section of _c_o(1)).

       1) Both the RCS file and the working file are  given.  The
       RCS  file  name  is  of  the form _p_a_t_h_1/_w_o_r_k_f_i_l_e,_v and the



University                    Purdue                            3





CI(1L)                                                     CI(1L)


       working file name is of  the  form  _p_a_t_h_2/_w_o_r_k_f_i_l_e,  where
       _p_a_t_h_1/  and _p_a_t_h_2/ are (possibly different or empty) paths
       and _w_o_r_k_f_i_l_e is a file name.

       2) Only the RCS file is given.  Then the working  file  is
       assumed  to  be  in  the current directory and its name is
       derived from the name of the RCS file by  removing  _p_a_t_h_1/
       and the suffix ,_v.

       3)  Only  the working file is given.  Then _c_i looks for an
       RCS   file   of   the   form    _p_a_t_h_2/_R_C_S/_w_o_r_k_f_i_l_e,_v    or
       _p_a_t_h_2/_w_o_r_k_f_i_l_e,_v (in this order).

       If  the RCS file is specified without a path in 1) and 2),
       then _c_i looks for the RCS  file  first  in  the  directory
       ./RCS and then in the current directory.

FFIILLEE MMOODDEESS
       An  RCS  file  created by _c_i inherits the read and execute
       permissions from the working file. If the RCS file  exists
       already,  _c_i  preserves  its read and execute permissions.
       _C_i always turns off all write permissions of RCS files.

FFIILLEESS
       The caller of the command must have read/write  permission
       for  the  directories  containing  the  RCS  file  and the
       working file, and read permission for the RCS file itself.
       A number of temporary files are created.  A semaphore file
       is created in the directory containing the RCS  file.   _C_i
       always  creates  a  new  RCS file and unlinks the old one.
       This strategy makes links to RCS files useless.

DDIIAAGGNNOOSSTTIICCSS
       For each revision, _c_i prints the  RCS  file,  the  working
       file,  and  the  number  of  both  the  deposited  and the
       preceding revision.  The exit status always refers to  the
       last  file  checked  in,  and  is  0  if the operation was
       successful, 1 otherwise.

IIDDEENNTTIIFFIICCAATTIIOONN
       Author:  Walter  F.   Tichy,   Purdue   University,   West
       Lafayette, IN, 47907.
       Revision Number: 1.3 ; Release Date: 89/05/02 .
       Copyright (C) 1982, 1988, 1989 by Walter F. Tichy.

SSEEEE AALLSSOO
       co(1L),  ident(1L),  rcs(1L),  rcsdiff(1L),  rcsintro(1L),
       rcsmerge(1L), rlog(1L), rcsfile(5L)
       Walter F. Tichy, "Design, Implementation,  and  Evaluation
       of  a  Revision Control System," in _P_r_o_c_e_e_d_i_n_g_s _o_f _t_h_e _6_t_h
       _I_n_t_e_r_n_a_t_i_o_n_a_l _C_o_n_f_e_r_e_n_c_e _o_n  _S_o_f_t_w_a_r_e  _E_n_g_i_n_e_e_r_i_n_g,  IEEE,
       Tokyo, Sept. 1982.





University                    Purdue                            4


