ANGRY	hack.shk.c	/^#define	ANGRY(mon)	!NOTANGRY(mon)$/
Amonnam	hack.do_name.c	/^Amonnam(mtmp, adj)$/
CORPSE_I_TO_C	hack.eat.c	/^#define	CORPSE_I_TO_C(otyp)	(char) ((otyp >= DEAD_/
DDIST	hack.dog.c	/^#define DDIST(x,y) ((x-omx)*(x-omx) + (y-omy)*(y-o/
Doname	hack.objnam.c	/^Doname(obj)$/
ESHK	hack.shk.c	/^#define	ESHK(mon)	((struct eshk *)(&(mon->mextra[0/
GDIST	hack.dog.c	/^#define GDIST(x,y) ((x-gx)*(x-gx) + (y-gy)*(y-gy))/
GTTY	hack.tty.c	/^#define GTTY(x)		(ioctl(0, TCGETA, x))$/
Meatdone	hack.eat.c	/^Meatdone(){$/
Mhack.main	hack.main.c	/^main(argc,argv)$/
Monnam	hack.do_name.c	/^Monnam(mtmp) register struct monst *mtmp; {$/
NOTANGRY	hack.shk.c	/^#define	NOTANGRY(mon)	mon->mpeaceful$/
OSPEED	hack.tty.c	/^#define OSPEED(x)	((x).c_cflag & CBAUD)$/
RND	rnd.c	/^#define RND(x)	((random()>>3) % x)$/
STTY	hack.tty.c	/^#define STTY(x)		(ioctl(0, TCSETA, x))	\/* TCSETAF/
Tmp_at	hack.pri.c	/^Tmp_at(x,y) schar x,y; {$/
Xmonnam	hack.do_name.c	/^Xmonnam(mtmp) register struct monst *mtmp; {$/
abon	hack.c	/^abon()$/
addinv	hack.invent.c	/^addinv(obj)$/
addrs	hack.mklev.c	/^addrs(lowx,lowy,hix,hiy)$/
addrsx	hack.mklev.c	/^addrsx(lx,ly,hx,hy,discarded)$/
addtobill	hack.shk.c	/^addtobill(){}$/
addtopl	hack.topl.c	/^addtopl(s) char *s; {$/
addupbill	hack.shk.c	/^addupbill(){	\/* delivers result in total *\/$/
aggravate	hack.wizard.c	/^aggravate()$/
alloc	alloc.c	/^alloc(n) unsigned n; {$/
amonnam	hack.do_name.c	/^amonnam(mtmp,adj)$/
amulet	hack.wizard.c	/^amulet(){$/
aobjnam	hack.objnam.c	/^aobjnam(otmp,verb) register struct obj *otmp; regi/
armoroff	hack.do_wear.c	/^armoroff(otmp) register struct obj *otmp; {$/
askchain	hack.invent.c	/^askchain(objchn, olets, allflag, fn, ckfn, max)$/
askname	hack.main.c	/^askname(){$/
assigninvlet	hack.invent.c	/^assigninvlet(otmp)$/
at	hack.pri.c	/^at(x,y,ch)$/
atl	hack.pri.c	/^atl(x,y,ch)$/
attack	hack.fight.c	/^attack(mtmp)$/
backsp	hack.termcap.c	/^backsp()$/
bchit	hack.apply.c	/^bchit(ddx,ddy,range,sym) register int ddx,ddy,rang/
bell	hack.termcap.c	/^bell()$/
bhit	hack.zap.c	/^bhit(ddx,ddy,range,sym,fhitm,fhito,obj)$/
bhitm	hack.zap.c	/^bhitm(mtmp, otmp)$/
bhito	hack.zap.c	/^bhito(obj, otmp)	\/* object obj was hit by the eff/
boomhit	hack.zap.c	/^boomhit(dx,dy) {$/
bot	hack.pri.c	/^bot()$/
bp_to_obj	hack.shk.c	/^bp_to_obj(bp)$/
burn_scrolls	hack.zap.c	/^burn_scrolls()$/
buzz	hack.zap.c	/^buzz(type,sx,sy,dx,dy)$/
bwrite	hack.lev.c	/^bwrite(fd,loc,num)$/
cansee	hack.c	/^cansee(x,y) xchar x,y; {$/
canseemon	hack.mon.c	/^canseemon(mtmp)$/
carried	hack.invent.c	/^carried(obj) register struct obj *obj; {$/
carrying	hack.invent.c	/^carrying(type)$/
center	hack.rip.c	/^center(line, text) int line; char *text; {$/
cgetret	hack.tty.c	/^cgetret(s)$/
charcat	hack.end.c	/^charcat(s,c) register char *s, c; {$/
chdirx	hack.main.c	/^chdirx(dir, wr)$/
child	hack.pager.c	/^child(wt) {$/
chwepon	hack.wield.c	/^chwepon(otmp,amount)$/
ck_ice_box	hack.apply.c	/^ck_ice_box(obj) register struct obj *obj; {$/
ckmailstatus	hack.unix.c	/^ckmailstatus() {$/
ckunpaid	hack.invent.c	/^ckunpaid(otmp) register struct obj *otmp; {$/
cl_end	hack.termcap.c	/^cl_end() {$/
cl_eos	hack.termcap.c	/^cl_eos()			\/* free after Robert Viduya *\/$/
clear_screen	hack.termcap.c	/^clear_screen() {$/
clearlocks	hack.end.c	/^clearlocks(){$/
clonewiz	hack.wizard.c	/^clonewiz(mtmp)$/
clrlin	hack.topl.c	/^clrlin(){$/
cls	hack.pri.c	/^cls(){$/
cmore	hack.topl.c	/^cmore(s)$/
cmov	hack.termcap.c	/^cmov(x, y)$/
comp	hack.mklev.c	/^comp(x,y)$/
confdir	hack.cmd.c	/^confdir()$/
cornbot	hack.pri.c	/^cornbot(lth)$/
cornline	hack.pager.c	/^cornline(mode, text)$/
corrode_armor	hack.do_wear.c	/^corrode_armor(){$/
corrode_weapon	hack.wield.c	/^corrode_weapon(){$/
countgold	hack.invent.c	/^countgold(){$/
curs	hack.termcap.c	/^curs(x, y)$/
curs_on_u	hack.pri.c	/^curs_on_u(){$/
cursed	hack.do_wear.c	/^cursed(otmp) register struct obj *otmp; {$/
cutworm	hack.worm.c	/^cutworm(mtmp,x,y,weptyp)$/
d	rnd.c	/^d(n,x)$/
dbon	hack.c	/^dbon()$/
ddocall	hack.do_name.c	/^ddocall()$/
ddoinv	hack.invent.c	/^ddoinv()$/
del_engr	hack.engrave.c	/^del_engr(ep) register struct engr *ep; {$/
delay_output	hack.termcap.c	/^delay_output() {$/
delobj	hack.invent.c	/^delobj(obj) register struct obj *obj; {$/
deltrap	hack.invent.c	/^deltrap(trap)$/
dig	hack.apply.c	/^dig() {$/
dighole	hack.apply.c	/^dighole()$/
digit	hack.invent.c	/^digit(c) char c; {$/
dirlet	hack.zap.c	/^dirlet(dx,dy) register dx,dy; {$/
dist	hack.mon.c	/^dist(x,y) int x,y; {$/
dist2	hack.mkshop.c	/^dist2(x0,y0,x1,y1){$/
dmonsfree	hack.mon.c	/^dmonsfree(){$/
do_mname	hack.do_name.c	/^do_mname(){$/
do_oname	hack.do_name.c	/^do_oname(obj) register struct obj *obj; {$/
doapply	hack.apply.c	/^doapply() {$/
docall	hack.do_name.c	/^docall(obj)$/
dochug	hack.mon.c	/^dochug(mtmp)$/
dochugw	hack.mon.c	/^dochugw(mtmp) register struct monst *mtmp; {$/
docorner	hack.pri.c	/^docorner(xmin,ymax) register xmin,ymax; {$/
docrt	hack.pri.c	/^docrt()$/
doddrop	hack.do.c	/^doddrop() {$/
dodip	hack.potion.c	/^dodip(){$/
dodiscovered	hack.o_init.c	/^dodiscovered()				\/* free after Robert Viduya *\//
dodoor	hack.mklev.c	/^dodoor(x,y,aroom)$/
dodown	hack.do.c	/^dodown()$/
dodrink	hack.potion.c	/^dodrink() {$/
dodrop	hack.do.c	/^dodrop() {$/
doeat	hack.eat.c	/^doeat(){$/
doengrave	hack.engrave.c	/^doengrave(){$/
doextcmd	hack.cmd.c	/^doextcmd()	\/* here after # - now read a full-word/
dog_move	hack.dog.c	/^dog_move(mtmp, after) register struct monst *mtmp;/
dogfood	hack.dog.c	/^dogfood(obj) register struct obj *obj; {$/
dohelp	hack.pager.c	/^dohelp()$/
doidtrap	hack.search.c	/^doidtrap() {$/
doinv	hack.invent.c	/^doinv(lets)$/
doinvbill	hack.shk.c	/^doinvbill(){ return(0); }$/
dolook	hack.invent.c	/^dolook() {$/
domove	hack.c	/^domove()$/
doname	hack.objnam.c	/^doname(obj)$/
done	hack.end.c	/^done(st1)$/
done1	hack.end.c	/^done1()$/
done_hangup	hack.end.c	/^done_hangup(){$/
done_in_by	hack.end.c	/^done_in_by(mtmp) register struct monst *mtmp; {$/
done_intr	hack.end.c	/^done_intr(){$/
donull	hack.do.c	/^donull() {$/
dopay	hack.shk.c	/^dopay(){ return(0); }$/
dopayobj	hack.shk.c	/^dopayobj(bp) register struct bill_x *bp; {$/
dopickup	hack.c	/^dopickup(){$/
doprarm	hack.invent.c	/^doprarm(){$/
dopray	hack.do.c	/^dopray() {$/
doprgold	hack.invent.c	/^doprgold(){$/
doprring	hack.invent.c	/^doprring(){$/
doprwep	hack.invent.c	/^doprwep(){$/
doread	hack.read.c	/^doread() {$/
dorecover	hack.save.c	/^dorecover(fd)$/
doredotopl	hack.topl.c	/^doredotopl(){$/
doredraw	hack.pri.c	/^doredraw()$/
doremarm	hack.do_wear.c	/^doremarm() {$/
doremring	hack.do_wear.c	/^doremring() {$/
dorr	hack.do_wear.c	/^dorr(otmp) register struct obj *otmp; {$/
dosave	hack.save.c	/^dosave(){$/
dosave0	hack.save.c	/^dosave0(hu) int hu; {$/
dosdoor	hack.mklev.c	/^dosdoor(x,y,aroom,type)$/
dosearch	hack.search.c	/^dosearch()$/
doset	hack.options.c	/^doset()$/
dosh	hack.pager.c	/^dosh(){$/
dosuspend	hack.ioctl.c	/^dosuspend() {$/
dotele	hack.trap.c	/^dotele() {$/
dothrow	hack.do.c	/^dothrow()$/
dotrap	hack.trap.c	/^dotrap(trap) register struct trap *trap; {$/
dotypeinv	hack.invent.c	/^dotypeinv ()				\/* free after Robert Viduya *\/$/
doup	hack.do.c	/^doup()$/
doversion	hack.version.c	/^doversion(){$/
doweararm	hack.do_wear.c	/^doweararm() {$/
dowearring	hack.do_wear.c	/^dowearring() {$/
dowhatis	hack.pager.c	/^dowhatis()$/
dowield	hack.wield.c	/^dowield()$/
dozap	hack.zap.c	/^dozap()$/
drop	hack.do.c	/^drop(obj) register struct obj *obj; {$/
dropx	hack.do.c	/^dropx(obj)$/
dropy	hack.do.c	/^dropy(obj)$/
drown	hack.trap.c	/^drown()$/
eatcorpse	hack.eat.c	/^eatcorpse(otmp) register struct obj *otmp; {$/
end_of_input	hack.tty.c	/^end_of_input()$/
end_screen	hack.termcap.c	/^end_screen()$/
enexto	hack.makemon.c	/^enexto(xx,yy)$/
engr_at	hack.engrave.c	/^engr_at(x,y) register xchar x,y; {$/
enlarge	alloc.c	/^enlarge(ptr,lth)$/
eos	hack.end.c	/^eos(s)$/
error	hack.tty.c	/^error(s,x,y) char *s; {$/
exclam	hack.zap.c	/^exclam(force)$/
fall_down	hack.dog.c	/^fall_down(mtmp) register struct monst *mtmp; {$/
fightm	hack.fight.c	/^fightm(mtmp) register struct monst *mtmp; {$/
find_ac	hack.do_wear.c	/^find_ac(){$/
finddir	hack.cmd.c	/^finddir(){$/
finddpos	hack.mklev.c	/^finddpos(xl,yl,xh,yh) {$/
findit	hack.search.c	/^findit()	\/* returns number of things found *\/$/
findname	hack.shknam.c	/^findname(nampt, let) char *nampt; char let; {$/
findshk	hack.shk.c	/^findshk(roomno)$/
float_down	hack.trap.c	/^float_down(){$/
float_up	hack.trap.c	/^float_up(){$/
follower	hack.shk.c	/^follower(mtmp)$/
fracture_rock	hack.zap.c	/^fracture_rock(obj)	\/* fractured by pick-axe or wa/
freegold	hack.invent.c	/^freegold(gold) register struct gold *gold; {$/
freeinv	hack.invent.c	/^freeinv(obj)$/
freeobj	hack.invent.c	/^freeobj(obj) register struct obj *obj; {$/
g_at	hack.invent.c	/^g_at(x,y)$/
gd_move	hack.vault.c	/^gd_move() { return(2); }$/
gddead	hack.vault.c	/^gddead(mtmp) struct monst *mtmp; {}$/
getbones	hack.bones.c	/^getbones(){$/
getdate	hack.unix.c	/^getdate()$/
getdir	hack.cmd.c	/^getdir(s)$/
gethdate	hack.unix.c	/^gethdate(name) char *name; {$/
gethungry	hack.eat.c	/^gethungry(){$/
getioctls	hack.ioctl.c	/^getioctls() {$/
getlev	hack.lev.c	/^getlev(fd,pid,lev)$/
getlin	hack.tty.c	/^getlin(bufp)$/
getlock	hack.unix.c	/^getlock()$/
getlt	hack.unix.c	/^getlt()$/
getmailstatus	hack.unix.c	/^getmailstatus() {$/
getobj	hack.invent.c	/^getobj(let,word)$/
getpos	hack.do_name.c	/^getpos(force,goal) int force; char *goal; {$/
getprice	hack.shk.c	/^getprice(obj) register struct obj *obj; {$/
getret	hack.tty.c	/^getret() {$/
gettrack	hack.track.c	/^gettrack(x,y) register x,y; {$/
gettty	hack.tty.c	/^gettty(){$/
getwn	hack.worm.c	/^getwn(mtmp) struct monst *mtmp; {$/
getyear	hack.unix.c	/^getyear()$/
ggetobj	hack.invent.c	/^ggetobj(word, fn, max)$/
ghost_from_bottle	hack.potion.c	/^ghost_from_bottle(){$/
glibr	hack.do_wear.c	/^glibr(){$/
glo	hack.main.c	/^glo(foo)$/
goldincorridor	hack.vault.c	/^goldincorridor()$/
goodpos	hack.makemon.c	/^goodpos(x,y)	\/* used only in mnexto and rloc *\/$/
goto_level	hack.do.c	/^goto_level(newlevel, at_stairs)$/
hangup	hack.end.c	/^hangup()$/
has_dnstairs	hack.mkshop.c	/^has_dnstairs(sroom)$/
has_upstairs	hack.mkshop.c	/^has_upstairs(sroom)$/
heal_legs	hack.do.c	/^heal_legs()$/
hit	hack.zap.c	/^hit(str,mtmp,force)$/
hitmm	hack.fight.c	/^hitmm(magr,mdef) register struct monst *magr,*mdef/
hitu	hack.mhitu.c	/^hitu(mtmp,dam)$/
hmon	hack.fight.c	/^hmon(mon,obj,thrown)	\/* return TRUE if mon still /
holetime	hack.apply.c	/^holetime() {$/
home	hack.termcap.c	/^home()$/
identify	hack.read.c	/^identify(otmp)		\/* also called by newmail() *\/$/
impossible	hack.main.c	/^impossible(s,x1,x2)$/
in_ice_box	hack.apply.c	/^in_ice_box(obj) register struct obj *obj; {$/
ini_inv	hack.u_init.c	/^ini_inv(trop) register struct trobj *trop; {$/
init_objects	hack.o_init.c	/^init_objects(){$/
init_rumors	hack.rumors.c	/^init_rumors(rumf) register FILE *rumf; {$/
init_uhunger	hack.eat.c	/^init_uhunger(){$/
initedog	hack.dog.c	/^initedog(mtmp) register struct monst *mtmp; {$/
initoptions	hack.options.c	/^initoptions()$/
initrack	hack.track.c	/^initrack(){$/
initworm	hack.worm.c	/^initworm(mtmp) struct monst *mtmp; {$/
inrange	hack.wizard.c	/^inrange(mtmp)$/
inroom	hack.dog.c	/^inroom(x,y) xchar x,y; {$/
inshop	hack.shk.c	/^inshop(){ return(0); }$/
interesting_to_discover	hack.o_init.c	/^interesting_to_discover(i)$/
intruph	hack.pager.c	/^intruph(){$/
inv_cnt	hack.c	/^inv_cnt(){$/
inv_weight	hack.c	/^inv_weight(){$/
invault	hack.vault.c	/^invault(){}$/
isbig	hack.mkshop.c	/^isbig(sroom)$/
ishuman	hack.mon.c	/^ishuman(mtmp) register struct monst *mtmp; {$/
isok	hack.cmd.c	/^isok(x,y) register x,y; {$/
isroom	hack.cmd.c	/^isroom(x,y)  register x,y; {		\/* what about POOL?/
itoa	hack.end.c	/^itoa(a) int a; {$/
join	hack.mklev.c	/^join(a,b)$/
justswld	hack.mon.c	/^justswld(mtmp,name)$/
keepdogs	hack.dog.c	/^keepdogs(){$/
killed	hack.mon.c	/^killed(mtmp)$/
kludge	hack.mon.c	/^kludge(str,arg)$/
lesshungry	hack.eat.c	/^lesshungry(num) register num; {$/
letindex	hack.o_init.c	/^letindex(let) register char let; {$/
letter	hack.mkobj.c	/^letter(c) {$/
level_tele	hack.trap.c	/^level_tele() {$/
litroom	hack.read.c	/^litroom(on)$/
lmonnam	hack.do_name.c	/^lmonnam(mtmp) register struct monst *mtmp; {$/
lookaround	hack.c	/^lookaround(){$/
losedogs	hack.dog.c	/^losedogs(){$/
losehp	hack.c	/^losehp(n,knam)$/
losehp_m	hack.c	/^losehp_m(n,mtmp)$/
losestr	hack.c	/^losestr(num)	\/* may kill you; cause may be poison/
losexp	hack.c	/^losexp()	\/* hit by V or W *\/$/
lowc	hack.cmd.c	/^lowc(sym)$/
m_at	hack.invent.c	/^m_at(x,y)$/
m_move	hack.mon.c	/^m_move(mtmp,after)$/
make_engr_at	hack.engrave.c	/^make_engr_at(x,y,s)$/
make_niches	hack.mklev.c	/^make_niches()$/
makecorridors	hack.mklev.c	/^makecorridors() {$/
makedog	hack.dog.c	/^makedog(){$/
makelevel	hack.mklev.c	/^makelevel()$/
makemaz	hack.mkmaze.c	/^makemaz()$/
makemon	hack.makemon.c	/^makemon(ptr,x,y)$/
makeniche	hack.mklev.c	/^makeniche(with_trap)$/
maker	hack.mklev.c	/^maker(lowx,ddx,lowy,ddy)$/
makerooms	hack.mklev.c	/^makerooms() {$/
maketrap	hack.trap.c	/^maketrap(x,y,typ)$/
makevtele	hack.mklev.c	/^makevtele()$/
mazexy	hack.mkmaze.c	/^mazexy(){$/
mdrush	hack.unix.c	/^mdrush(md,away)$/
merged	hack.invent.c	/^merged(otmp,obj,lose) register struct obj *otmp, */
mfndpos	hack.mon.c	/^mfndpos(mon,poss,info,flag)$/
mhitu	hack.mhitu.c	/^mhitu(mtmp)$/
midnight	hack.unix.c	/^midnight()$/
min	hack.shk.c	/^#define min(a,b)	((a<b)?a:b)$/
mintrap	hack.trap.c	/^mintrap(mtmp) register struct monst *mtmp; {$/
miss	hack.zap.c	/^miss(str,mtmp)$/
mkgold	hack.mkobj.c	/^mkgold(num,x,y)$/
mkgoldobj	hack.invent.c	/^mkgoldobj(q)$/
mklev	hack.lev.c	/^mklev()$/
mkmon_at	hack.makemon.c	/^mkmon_at(let,x,y)$/
mkobj	hack.mkobj.c	/^mkobj(let) {$/
mkobj_at	hack.mkobj.c	/^mkobj_at(let,x,y)$/
mkshop	hack.mkshop.c	/^mkshop(){$/
mksobj	hack.mkobj.c	/^mksobj(otyp)$/
mksobj_at	hack.mkobj.c	/^mksobj_at(otyp,x,y)$/
mkswamp	hack.mkshop.c	/^mkswamp()	\/* Michiel Huisjes & Fred de Wilde *\/$/
mktrap	hack.mklev.c	/^mktrap(num,mazeflag,croom)$/
mkzoo	hack.mkshop.c	/^mkzoo(type)$/
mnewsym	hack.pri.c	/^mnewsym(x,y)$/
mnexto	hack.mon.c	/^mnexto(mtmp)	\/* Make monster mtmp next to you (if/
mondead	hack.mon.c	/^mondead(mtmp)$/
mondied	hack.fight.c	/^mondied(mdef) register struct monst *mdef; {$/
monfree	hack.mon.c	/^monfree(mtmp) register struct monst *mtmp; {$/
monnam	hack.do_name.c	/^monnam(mtmp) register struct monst *mtmp; {$/
monster_nearby	hack.c	/^monster_nearby() {$/
monstersym	hack.read.c	/^monstersym(ch)				\/* arnold@ucsfcgl *\/$/
monstone	hack.fight.c	/^monstone(mdef) register struct monst *mdef; {$/
more	hack.topl.c	/^more(){$/
more_experienced	hack.do.c	/^more_experienced(exp,rexp)$/
morehungry	hack.eat.c	/^morehungry(num) register num; {$/
morguemon	hack.mkshop.c	/^morguemon()$/
move	hack.mkmaze.c	/^move(x,y,dir)$/
movecmd	hack.cmd.c	/^movecmd(sym)	\/* also sets u.dz, but returns false/
movemon	hack.mon.c	/^movemon()$/
movobj	hack.c	/^movobj(obj, ox, oy)$/
mpickgems	hack.mon.c	/^mpickgems(mtmp) register struct monst *mtmp; {$/
mpickgold	hack.mon.c	/^mpickgold(mtmp) register struct monst *mtmp; {$/
mpickobj	hack.steal.c	/^mpickobj(mtmp,otmp)$/
mread	hack.lev.c	/^mread(fd, buf, len)$/
mstatusline	hack.pri.c	/^mstatusline(mtmp) register struct monst *mtmp; {$/
newcham	hack.mon.c	/^newcham(mtmp,mdat)	\/* make a chameleon look like /
newmail	hack.unix.c	/^newmail() {$/
news0	hack.pri.c	/^news0(x,y)$/
newsym	hack.pri.c	/^newsym(x,y)$/
newttentry	hack.end.c	/^#define newttentry() (struct toptenentry *) alloc(/
newuexp	hack.c	/^newuexp()$/
newuhs	hack.eat.c	/^newuhs(incr) boolean incr; {$/
nexttodoor	hack.mkshop.c	/^nexttodoor(sx,sy)$/
night	hack.unix.c	/^night()$/
nocmov	hack.termcap.c	/^nocmov(x, y)$/
nomul	hack.c	/^nomul(nval)$/
nose1	hack.pri.c	/^nose1(x,y)$/
nosee	hack.pri.c	/^nosee(x,y)$/
nscr	hack.pri.c	/^nscr()$/
o_at	hack.invent.c	/^o_at(x,y)$/
o_on	hack.invent.c	/^o_on(id, objchn) unsigned int id; register struct /
obfree	hack.shk.c	/^obfree(obj,merge) register struct obj *obj, *merge/
obj_to_let	hack.invent.c	/^obj_to_let(obj)	\/* should of course only be calle/
off_msg	hack.do_wear.c	/^off_msg(otmp) register struct obj *otmp; {$/
oinit	hack.o_init.c	/^oinit()			\/* level dependent initialization *\/$/
okay	hack.mkmaze.c	/^okay(x,y,dir)$/
okdoor	hack.mklev.c	/^okdoor(x,y)$/
on_scr	hack.pri.c	/^on_scr(x,y)$/
onbill	hack.shk.c	/^onbill(obj) register struct obj *obj; {$/
online	hack.shk.c	/^online(x,y) {$/
opentin	hack.eat.c	/^opentin(){$/
ordin	hack.end.c	/^ordin(n) int n; {$/
out_ice_box	hack.apply.c	/^out_ice_box(obj) register struct obj *obj; {$/
outentry	hack.end.c	/^outentry(rank,t1,so) register struct toptenentry */
outheader	hack.end.c	/^outheader() {$/
outline	hack.rumors.c	/^outline(rumf) register FILE *rumf; {$/
outrip	hack.rip.c	/^outrip(){$/
outrumor	hack.rumors.c	/^outrumor(){$/
page_file	hack.pager.c	/^page_file(fnam, silent)	\/* return: 0 - cannot ope/
page_line	hack.pager.c	/^page_line(s)		\/* returns 1 if we should quit *\/$/
page_more	hack.pager.c	/^page_more(fp,strip)$/
panic	hack.pri.c	/^panic(str,a1,a2,a3,a4,a5,a6)$/
parse	hack.tty.c	/^parse()$/
parseoptions	hack.options.c	/^parseoptions(opts, from_env)$/
pay	hack.shk.c	/^pay(tmp,shkp)$/
paybill	hack.shk.c	/^paybill(){}$/
phase_of_the_moon	hack.unix.c	/^phase_of_the_moon()			\/* 0-7, with 0: new, 4: ful/
pickup	hack.c	/^pickup(all)$/
placebc	hack.trap.c	/^placebc(attach) int attach; {$/
pline	hack.topl.c	/^pline(line,arg1,arg2,arg3,arg4,arg5,arg6)$/
plnamesuffix	hack.u_init.c	/^plnamesuffix() {$/
pluslvl	hack.potion.c	/^pluslvl()$/
pmon	hack.pri.c	/^pmon(mon) register struct monst *mon; {$/
pobj	hack.pri.c	/^pobj(obj) register struct obj *obj; {$/
poisoned	hack.mon.c	/^poisoned(string, pname)$/
poisonous	hack.eat.c	/^poisonous(otmp)$/
potionbreathe	hack.potion.c	/^potionbreathe(obj)$/
potionhit	hack.potion.c	/^potionhit(mon, obj)$/
prinv	hack.invent.c	/^prinv(obj)$/
prl	hack.pri.c	/^prl(x,y)$/
prl1	hack.pri.c	/^prl1(x,y)$/
prme	hack.pri.c	/^prme(){$/
probtype	hack.o_init.c	/^probtype(let) register char let; {$/
prscore	hack.end.c	/^prscore(argc,argv) int argc; char **argv; {$/
pru	hack.pri.c	/^pru()$/
putstr	hack.topl.c	/^putstr(s) register char *s; {$/
putsym	hack.topl.c	/^putsym(c) char c; {$/
pwseg	hack.worm.c	/^pwseg(wtmp) register struct wseg *wtmp; {$/
read_engr_at	hack.engrave.c	/^read_engr_at(x,y) register int x,y; {$/
readchar	hack.tty.c	/^readchar() {$/
readmail	hack.unix.c	/^readmail() {$/
readnews	hack.pager.c	/^readnews() {$/
readobjnam	hack.objnam.c	/^readobjnam(bp) register char *bp; {$/
realhunger	hack.shk.c	/^realhunger(){	\/* not completely foolproof *\/$/
redotoplin	hack.topl.c	/^redotoplin() {$/
regularize	hack.unix.c	/^regularize(s)	\/* normalize file name - we don't l/
relmon	hack.mon.c	/^relmon(mon)$/
relobj	hack.steal.c	/^relobj(mtmp,show)$/
remember_topl	hack.topl.c	/^remember_topl() {$/
remseg	hack.worm.c	/^remseg(wtmp) register struct wseg *wtmp; {$/
replgd	hack.vault.c	/^replgd(mtmp,mtmp2) struct monst *mtmp, *mtmp2; {}$/
replmon	hack.mon.c	/^replmon(mtmp,mtmp2)$/
replshk	hack.shk.c	/^replshk(mtmp,mtmp2) struct monst *mtmp, *mtmp2; {}/
rescham	hack.mon.c	/^rescham()	\/* force all chameleons to become norma/
rest_engravings	hack.engrave.c	/^rest_engravings(fd) int fd; {$/
restfakecorr	hack.vault.c	/^restfakecorr()$/
restmonchn	hack.save.c	/^restmonchn(fd)$/
restnames	hack.o_init.c	/^restnames(fd) register fd; {$/
restobjchn	hack.save.c	/^restobjchn(fd)$/
revive	hack.zap.c	/^revive(obj)$/
rhack	hack.cmd.c	/^rhack(cmd)$/
ringoff	hack.do_wear.c	/^ringoff(obj)$/
rloc	hack.makemon.c	/^rloc(mtmp)$/
rloco	hack.zap.c	/^rloco(obj)$/
rn1	rnd.c	/^rn1(x,y)$/
rn2	rnd.c	/^rn2(x)$/
rnd	rnd.c	/^rnd(x)$/
role_index	hack.u_init.c	/^role_index(pc)$/
rroom	hack.c	/^rroom(x,y) register int x,y; {$/
save_engravings	hack.engrave.c	/^save_engravings(fd) int fd; {$/
savebones	hack.bones.c	/^savebones(){$/
savegoldchn	hack.lev.c	/^savegoldchn(fd,gold)$/
savelev	hack.lev.c	/^savelev(fd,lev)$/
savemonchn	hack.lev.c	/^savemonchn(fd,mtmp)$/
savenames	hack.o_init.c	/^savenames(fd) register fd; {$/
saveobjchn	hack.lev.c	/^saveobjchn(fd,otmp)$/
savetrapchn	hack.lev.c	/^savetrapchn(fd,trap)$/
seemimic	hack.search.c	/^seemimic(mtmp)$/
seemons	hack.pri.c	/^seemons(){$/
seeobjs	hack.pri.c	/^seeobjs(){$/
seeoff	hack.c	/^seeoff(mode)	\/* 1 to redo @, 0 to leave them *\/$/
selftouch	hack.trap.c	/^selftouch(arg) char *arg; {$/
sengr_at	hack.engrave.c	/^sengr_at(s,x,y) register char *s; register xchar x/
set_pager	hack.pager.c	/^set_pager(mode)$/
set_whole_screen	hack.pager.c	/^set_whole_screen() {	\/* called in termcap as soon/
set_wounded_legs	hack.do.c	/^set_wounded_legs(side, timex)$/
setan	hack.objnam.c	/^setan(str,buf)$/
setclipped	hack.pri.c	/^setclipped(){$/
setctty	hack.tty.c	/^setctty(){$/
setftty	hack.tty.c	/^setftty(){$/
setgd	hack.vault.c	/^setgd(\/* mtmp *\/) \/* struct monst *mtmp; *\/ {}/
setgemprobs	hack.o_init.c	/^setgemprobs()$/
setioctls	hack.ioctl.c	/^setioctls() {$/
setmangry	hack.mon.c	/^setmangry(mtmp) register struct monst *mtmp; {$/
setnotworn	hack.worn.c	/^setnotworn(obj) register struct obj *obj; {$/
setpaid	hack.shk.c	/^setpaid(){	\/* caller has checked that shopkeeper /
setrandom	hack.unix.c	/^setrandom()$/
setsee	hack.c	/^setsee()$/
settrack	hack.track.c	/^settrack(){$/
settty	hack.tty.c	/^settty(s) char *s; {$/
setuwep	hack.wield.c	/^setuwep(obj) register struct obj *obj; {$/
setworn	hack.worn.c	/^setworn(obj, mask)$/
sgn	hack.c	/^sgn(a) register int a; {$/
shk_move	hack.shk.c	/^shk_move(){ return(0); }$/
shkcatch	hack.shk.c	/^shkcatch(){ return(0); }$/
shkdead	hack.shk.c	/^shkdead(){}$/
shkname	hack.shk.c	/^char *shkname(){ return(""); }$/
shopdig	hack.shk.c	/^shopdig(){}$/
sitoa	hack.objnam.c	/^sitoa(a) int a; {$/
skipline	hack.rumors.c	/^skipline(rumf) register FILE *rumf; {$/
sobj_at	hack.invent.c	/^sobj_at(n,x,y)$/
some_armor	hack.do_wear.c	/^some_armor(){$/
somegold	hack.steal.c	/^somegold(){$/
somex	hack.mklev.c	/^#define somex() ((random()%(croom->hx-croom->lx+1)/
somey	hack.mklev.c	/^#define somey() ((random()%(croom->hy-croom->ly+1)/
splitbill	hack.shk.c	/^splitbill(){}$/
splitobj	hack.do.c	/^splitobj(obj, num) register struct obj *obj; regis/
sq	hack.mkshop.c	/^sq(a) int a; {$/
stackobj	hack.invent.c	/^stackobj(obj) register struct obj *obj; {$/
standoutbeg	hack.termcap.c	/^standoutbeg()$/
standoutend	hack.termcap.c	/^standoutend()$/
start_screen	hack.termcap.c	/^start_screen()$/
startup	hack.termcap.c	/^startup()$/
steal	hack.steal.c	/^steal(mtmp)$/
stealamulet	hack.steal.c	/^stealamulet(mtmp)$/
stealarm	hack.steal.c	/^stealarm(){$/
stealgold	hack.steal.c	/^stealgold(mtmp)  register struct monst *mtmp; {$/
stoned_dialogue	hack.timeout.c	/^stoned_dialogue()$/
stop_occupation	hack.main.c	/^stop_occupation()$/
strange_feeling	hack.potion.c	/^strange_feeling(obj,txt)$/
strprepend	hack.objnam.c	/^strprepend(s,pref) register char *s, *pref; {$/
subfrombill	hack.shk.c	/^subfrombill(){}$/
swallowed	hack.pri.c	/^swallowed()$/
t_at	hack.invent.c	/^t_at(x,y)$/
tamedog	hack.dog.c	/^tamedog(mtmp, obj)$/
tele	hack.trap.c	/^tele() {$/
teleds	hack.trap.c	/^teleds(nux, nuy)$/
teleok	hack.trap.c	/^teleok(x,y) register int x,y; {	\/* might throw hi/
thitu	hack.fight.c	/^thitu(tlev,dam,name)$/
timeout	hack.timeout.c	/^timeout(){$/
tmp_at	hack.pri.c	/^tmp_at(x,y) schar x,y; {$/
topten	hack.end.c	/^topten(){$/
typename	hack.objnam.c	/^typename(otyp)$/
u_init	hack.u_init.c	/^u_init(){$/
u_wipe_engr	hack.engrave.c	/^u_wipe_engr(cnt)$/
unctrl	hack.cmd.c	/^unctrl(sym)$/
unfaint	hack.eat.c	/^unfaint(){$/
unplacebc	hack.trap.c	/^unplacebc(){$/
unpmon	hack.pri.c	/^unpmon(mon) register struct monst *mon; {$/
unpobj	hack.pri.c	/^unpobj(obj) register struct obj *obj; {$/
unsee	hack.c	/^unsee() {$/
unstuck	hack.mon.c	/^unstuck(mtmp)$/
uptodate	hack.unix.c	/^uptodate(fd) {$/
use_camera	hack.apply.c	/^use_camera(obj) \/* register *\/ struct obj *obj; /
use_ice_box	hack.apply.c	/^use_ice_box(obj) register struct obj *obj; {$/
use_magic_whistle	hack.apply.c	/^use_magic_whistle(obj) struct obj *obj; {$/
use_pick_axe	hack.apply.c	/^use_pick_axe(obj)$/
use_whistle	hack.apply.c	/^use_whistle(obj) struct obj *obj; {$/
used	hack.rumors.c	/^used(i) register int i; {$/
useup	hack.invent.c	/^useup(obj)$/
veryold	hack.unix.c	/^veryold(fd) {$/
visctrl	hack.do_name.c	/^visctrl(c)$/
vism_at	hack.pri.c	/^vism_at(x,y)$/
vtele	hack.trap.c	/^vtele() {$/
wakeup	hack.search.c	/^wakeup(mtmp)$/
walkfrom	hack.mkmaze.c	/^walkfrom(x,y) int x,y; {$/
weight	hack.mkobj.c	/^weight(obj)$/
wipe_engr_at	hack.engrave.c	/^wipe_engr_at(x,y,cnt) register xchar x,y,cnt; {$/
wiz_hit	hack.wizard.c	/^wiz_hit(mtmp)$/
wiz_inv	hack.u_init.c	/^wiz_inv(){$/
worm_move	hack.worm.c	/^worm_move(mtmp) struct monst *mtmp; {$/
worm_nomove	hack.worm.c	/^worm_nomove(mtmp) register struct monst *mtmp; {$/
wormdead	hack.worm.c	/^wormdead(mtmp) register struct monst *mtmp; {$/
wormhit	hack.worm.c	/^wormhit(mtmp) register struct monst *mtmp; {$/
wormsee	hack.worm.c	/^wormsee(tmp) register unsigned tmp; {$/
xmonnam	hack.do_name.c	/^xmonnam(mtmp, vb) register struct monst *mtmp; int/
xmore	hack.topl.c	/^xmore(s)$/
xname	hack.objnam.c	/^xname(obj)$/
xprname	hack.invent.c	/^xprname(obj,let)$/
xputc	hack.termcap.c	/^xputc(c) char c; {$/
xputs	hack.termcap.c	/^xputs(s) char *s; {$/
xwaitforspace	hack.tty.c	/^xwaitforspace(s)$/
youswld	hack.mon.c	/^youswld(mtmp,dam,die,name)$/
zhit	hack.zap.c	/^zhit(mon,type)			\/* returns damage to mon *\/$/
