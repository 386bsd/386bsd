BRscan	gnuchess.c	/^BRscan(sq,s,mob)$/
BlendBoard	gnuchess.c	/^BlendBoard(a,b,c)$/
CaptureList	gnuchess.c	/^CaptureList(side,xside,ply)$/
ChangeAlphaWindow	uxdsp.c	/^ChangeAlphaWindow()$/
ChangeBetaWindow	uxdsp.c	/^ChangeBetaWindow()$/
ChangeSearchDepth	uxdsp.c	/^ChangeSearchDepth()$/
ChangeXwindow	uxdsp.c	/^ChangeXwindow()$/
ClearMessage	uxdsp.c	/^ClearMessage()$/
ClrEoln	uxdsp.c	/^ClrEoln()$/
ClrScreen	uxdsp.c	/^ClrScreen()$/
CopyBoard	gnuchess.c	/^CopyBoard(a,b)$/
Die	uxdsp.c	/^Die()$/
DoDebug	uxdsp.c	/^DoDebug()$/
DrawPiece	uxdsp.c	/^DrawPiece(sq)$/
EditBoard	uxdsp.c	/^EditBoard()$/
ElapsedTime	uxdsp.c	/^ElapsedTime(iop)$/
EnPassant	gnuchess.c	/^EnPassant(xside,f,t,iop)$/
ExaminePosition	gnuchess.c	/^ExaminePosition()$/
ExitChess	uxdsp.c	/^ExitChess()$/
GenMoves	gnuchess.c	/^GenMoves(ply,sq,side,xside)$/
GetGame	uxdsp.c	/^GetGame()$/
GetOpenings	uxdsp.c	/^GetOpenings()$/
GiveHint	uxdsp.c	/^GiveHint()$/
Initialize	uxdsp.c	/^Initialize()$/
InitializeStats	gnuchess.c	/^InitializeStats()$/
Initialize_dist	move.c	/^void Initialize_dist() {$/
Initialize_moves	move.c	/^void Initialize_moves() {$/
InputCommand	uxdsp.c	/^InputCommand()$/
KingScan	gnuchess.c	/^KingScan(sq,s)$/
LinkMove	gnuchess.c	/^LinkMove(ply,f,t,xside)$/
ListGame	uxdsp.c	/^ListGame()$/
MakeMove	gnuchess.c	/^MakeMove(side,node,tempb,tempc,tempsf,tempst)$/
Mgnuchess	gnuchess.c	/^main(argc,argv)$/
MoveList	gnuchess.c	/^MoveList(side,ply)$/
NewGame	gnuchess.c	/^NewGame()$/
OpeningBook	gnuchess.c	/^OpeningBook()$/
OutputMove	uxdsp.c	/^OutputMove()$/
ProbeTTable	gnuchess.c	/^ProbeTTable(side,depth,alpha,beta,score)$/
PromptForMove	uxdsp.c	/^PromptForMove()$/
PutInTTable	gnuchess.c	/^PutInTTable(side,score,depth,alpha,beta,mv)$/
SaveGame	uxdsp.c	/^SaveGame()$/
ScoreKBNK	gnuchess.c	/^int ScoreKBNK(winner,king1,king2)$/
ScoreKPK	gnuchess.c	/^int ScoreKPK(side,winner,loser,king1,king2,sq)$/
ScoreLoneKing	gnuchess.c	/^ScoreLoneKing(side,score)$/
ScorePosition	gnuchess.c	/^ScorePosition(side,score)$/
SearchStartStuff	uxdsp.c	/^SearchStartStuff(side)$/
SelectLevel	uxdsp.c	/^SelectLevel()$/
SelectMove	gnuchess.c	/^SelectMove(side,iop)$/
SetContempt	uxdsp.c	/^SetContempt()$/
SetTimeControl	uxdsp.c	/^SetTimeControl()$/
ShowCurrentMove	uxdsp.c	/^ShowCurrentMove(pnt,f,t)$/
ShowDepth	uxdsp.c	/^ShowDepth(ch)$/
ShowMessage	uxdsp.c	/^ShowMessage(s)$/
ShowPostnValues	uxdsp.c	/^ShowPostnValues()$/
ShowResults	uxdsp.c	/^ShowResults(score,bstline,ch)$/
ShowSidetomove	uxdsp.c	/^ShowSidetomove()$/
SqAtakd	gnuchess.c	/^int SqAtakd(sq,side)$/
SqValue	gnuchess.c	/^SqValue(sq,side)$/
TerminateSearch	uxdsp.c	/^TerminateSearch()$/
Undo	uxdsp.c	/^Undo()$/
UnmakeMove	gnuchess.c	/^UnmakeMove(side,node,tempb,tempc,tempsf,tempst)$/
UpdateClocks	uxdsp.c	/^UpdateClocks()$/
UpdateDisplay	uxdsp.c	/^UpdateDisplay(f,t,flag,iscastle)$/
UpdateHashbd	gnuchess.c	/^UpdateHashbd(side,piece,f,t)$/
UpdatePieceList	gnuchess.c	/^UpdatePieceList(side,sq,iop)$/
UpdateWeights	gnuchess.c	/^UpdateWeights()$/
VerifyMove	gnuchess.c	/^int VerifyMove(s,iop,mv)$/
ZeroTTable	gnuchess.c	/^ZeroTTable()$/
absv	gnuchess.c	/^#define absv(x) ((x) < 0 ? -(x) : (x))$/
algbr	gnuchess.c	/^algbr(f,t,iscastle)$/
ataks	gnuchess.c	/^ataks(side,a)$/
castle	gnuchess.c	/^int castle(side,kf,kt,iop)$/
distance	gnuchess.c	/^int distance(a,b)$/
evaluate	gnuchess.c	/^evaluate(side,xside,ply,alpha,beta)$/
gotoXY	uxdsp.c	/^gotoXY(x,y)$/
help	uxdsp.c	/^help()$/
parse	uxdsp.c	/^int parse(fd,mv,side)$/
pick	gnuchess.c	/^pick(p1,p2)$/
repetition	gnuchess.c	/^repetition(cnt)$/
search	gnuchess.c	/^int search(side,ply,depth,alpha,beta,bstline,rpt)$/
taxicab	gnuchess.c	/^#define taxicab(a,b) (abs(column[a]-column[b]) + a/
trapped	gnuchess.c	/^int trapped(sq,piece)$/
