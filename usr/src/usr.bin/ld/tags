BIT_SET_P	ld.c	/^#define	BIT_SET_P(bv, index)	((bv)[(index) >> 3] &/
Mld	ld.c	/^main (argc, argv)$/
N_SET_MAGIC	ld.c	/^#define N_SET_MAGIC(exec, val)  ((exec).a_magic = /
RELOC_ADDRESS	ld.c	/^#define RELOC_ADDRESS(r)		((r)->r_address)$/
RELOC_ADD_EXTRA	ld.c	/^#define RELOC_ADD_EXTRA(r)              ((r)->r_ad/
RELOC_EXTERN_P	ld.c	/^#define RELOC_EXTERN_P(r)               ((r)->r_ex/
RELOC_MEMORY_ADD_P	ld.c	/^#define RELOC_MEMORY_ADD_P(r)           0$/
RELOC_MEMORY_SUB_P	ld.c	/^#define RELOC_MEMORY_SUB_P(r)		0$/
RELOC_PCREL_P	ld.c	/^#define RELOC_PCREL_P(r)             \\$/
RELOC_SYMBOL	ld.c	/^#define RELOC_SYMBOL(r)                 ((r)->r_in/
RELOC_TARGET_BITPOS	ld.c	/^#define RELOC_TARGET_BITPOS(r)          0$/
RELOC_TARGET_BITSIZE	ld.c	/^#define RELOC_TARGET_BITSIZE(r)         (reloc_tar/
RELOC_TARGET_SIZE	ld.c	/^#define RELOC_TARGET_SIZE(r)            (reloc_tar/
RELOC_TYPE	ld.c	/^#define RELOC_TYPE(r)                   ((r)->r_in/
RELOC_VALUE_RIGHTSHIFT	ld.c	/^#define RELOC_VALUE_RIGHTSHIFT(r)       (reloc_tar/
SET_BIT	ld.c	/^#define	SET_BIT(bv, index)	((bv)[(index) >> 3] |= /
SET_ELEMENT_P	ld.c	/^#define	SET_ELEMENT_P(x)	((x)>=N_SETA&&(x)<=(N_SET/
TEXT_START	ld.c	/^#define TEXT_START(x) N_TXTADDR(x)$/
TYPE_OF_SET_ELEMENT	ld.c	/^#define TYPE_OF_SET_ELEMENT(x)	((x)-N_SETA+N_ABS)$/
add_cmdline_ref	ld.c	/^add_cmdline_ref (sp)$/
address_to_line	ld.c	/^address_to_line (address, state_pointer)$/
assign_string_table_index	ld.c	/^assign_string_table_index (name)$/
bcopy	ld.c	/^bcopy (from, to, n)$/
bzero	ld.c	/^bzero (p, n)$/
check_each_file	ld.c	/^check_each_file (function, arg)$/
classify_arg	ld.c	/^classify_arg (arg)$/
concat	ld.c	/^concat (s1, s2, s3)$/
consider_file_section_lengths	ld.c	/^consider_file_section_lengths (entry)$/
contains_symbol	ld.c	/^contains_symbol (entry, n_ptr)$/
copdatrel	ld.c	/^copdatrel (entry)$/
coptxtrel	ld.c	/^coptxtrel (entry)$/
copy_data	ld.c	/^copy_data (entry)$/
copy_text	ld.c	/^copy_text (entry)$/
cplus_demangle	cplus-dem.c	/^cplus_demangle (type)$/
decode_command	ld.c	/^decode_command (argc, argv)$/
decode_library_subfile	ld.c	/^decode_library_subfile (desc, library_entry, subfi/
decode_option	ld.c	/^decode_option (swt, arg)$/
describe_file_sections	ld.c	/^describe_file_sections (entry, outfile)$/
digest_symbols	ld.c	/^digest_symbols ()$/
do_arg	cplus-dem.c	/^do_arg (type, result)$/
do_args	cplus-dem.c	/^do_args (type, decl)$/
do_file_warnings	ld.c	/^do_file_warnings (entry, outfile)$/
do_relocation_warnings	ld.c	/^do_relocation_warnings (entry, data_segment, outfi/
do_type	cplus-dem.c	/^do_type (type, result)$/
do_warnings	ld.c	/^do_warnings (outfile)$/
each_file	ld.c	/^each_file (function, arg)$/
each_full_file	ld.c	/^each_full_file (function, arg)$/
enter_file_symbols	ld.c	/^enter_file_symbols (entry)$/
enter_global_ref	ld.c	/^enter_global_ref (nlist_p, name, entry)$/
error	ld.c	/^error (string, arg1, arg2, arg3)$/
fatal	ld.c	/^fatal (string, arg)$/
fatal_with_file	ld.c	/^fatal_with_file (string, entry)$/
file_close	ld.c	/^file_close ()$/
file_open	ld.c	/^file_open (entry)$/
get_count	cplus-dem.c	/^get_count (type, count)$/
get_file_name	ld.c	/^get_file_name (entry)$/
getpagesize	ld.c	/^getpagesize ()$/
getsym	ld.c	/^getsym (key)$/
getsym_soft	ld.c	/^getsym_soft (key)$/
hash_string	ld.c	/^hash_string (key)$/
init_debug_scan	ld.c	/^init_debug_scan (use_data_symbols, entry)$/
linear_library	ld.c	/^linear_library (desc, entry)$/
list_file_locals	ld.c	/^list_file_locals (entry, outfile)$/
load_symbols	ld.c	/^load_symbols ()$/
memcmp	cplus-dem.c	/^#define memcmp(s1, s2, n) bcmp ((s2), (s1), (n))$/
memcpy	cplus-dem.c	/^#define memcpy(s1, s2, n) bcopy ((s2), (s1), (n))$/
min	ld.c	/^#define min(a,b) ((a) < (b) ? (a) : (b))$/
munge_function_name	cplus-dem.c	/^munge_function_name (name)$/
mywrite	ld.c	/^mywrite (buf, count, eltsize, desc)$/
next_debug_entry	ld.c	/^next_debug_entry (use_data_symbols, state_pointer)/
padfile	ld.c	/^padfile (padding, outdesc)$/
parse	ld.c	/^parse (arg, format, error)$/
perform_relocation	ld.c	/^perform_relocation (data, pc_relocation, data_size/
perror_file	ld.c	/^perror_file (entry)$/
perror_name	ld.c	/^perror_name (name)$/
print_file_name	ld.c	/^print_file_name (entry, outfile)$/
print_symbols	ld.c	/^print_symbols (outfile)$/
prline_file_name	ld.c	/^prline_file_name (entry, outfile)$/
read_entry_strings	ld.c	/^read_entry_strings (desc, entry)$/
read_entry_symbols	ld.c	/^read_entry_symbols (desc, entry)$/
read_file_relocation	ld.c	/^read_file_relocation (entry)$/
read_file_symbols	ld.c	/^read_file_symbols (entry)$/
read_header	ld.c	/^read_header (desc, entry)$/
read_relocation	ld.c	/^read_relocation ()$/
relocate_file_addresses	ld.c	/^relocate_file_addresses (entry)$/
relocation_entries_relation	ld.c	/^relocation_entries_relation (rel1, rel2)$/
remember_type	cplus-dem.c	/^remember_type (start, len)$/
search_library	ld.c	/^search_library (desc, entry)$/
set_element_prefixed_p	ld.c	/^set_element_prefixed_p (name)$/
string_append	cplus-dem.c	/^string_append (p, s)$/
string_appendn	cplus-dem.c	/^string_appendn (p, s, n)$/
string_appends	cplus-dem.c	/^string_appends (p, s)$/
string_clear	cplus-dem.c	/^string_clear (s)$/
string_delete	cplus-dem.c	/^string_delete (s)$/
string_empty	cplus-dem.c	/^string_empty (s)$/
string_init	cplus-dem.c	/^string_init (s)$/
string_need	cplus-dem.c	/^string_need (s, n)$/
string_prepend	cplus-dem.c	/^string_prepend (p, s)$/
string_prependn	cplus-dem.c	/^string_prependn (p, s, n)$/
string_prepends	cplus-dem.c	/^string_prepends (p, s)$/
subfile_wanted_p	ld.c	/^subfile_wanted_p (entry)$/
symdef_library	ld.c	/^symdef_library (desc, entry, member_length)$/
symtab_init	ld.c	/^symtab_init ()$/
text_offset	ld.c	/^text_offset (entry)$/
write_data	ld.c	/^write_data ()$/
write_file_syms	ld.c	/^write_file_syms (entry, syms_written_addr)$/
write_file_symseg	ld.c	/^write_file_symseg (entry)$/
write_header	ld.c	/^write_header ()$/
write_output	ld.c	/^write_output ()$/
write_rel	ld.c	/^write_rel ()$/
write_string_table	ld.c	/^write_string_table ()$/
write_syms	ld.c	/^write_syms ()$/
write_symsegs	ld.c	/^write_symsegs ()$/
write_text	ld.c	/^write_text ()$/
xmalloc	ld.c	/^xmalloc (size)$/
xrealloc	ld.c	/^xrealloc (ptr, size)$/
