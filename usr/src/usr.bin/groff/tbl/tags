add_rows	main.cc	/^void format::add_rows(int n)$/
add_tab	table.cc	/^void simple_entry::add_tab()$/
contribute_to_bottom_macro	table.cc	/^void vertical_rule::contribute_to_bottom_macro(tab/
debug_print	main.cc	/^void entry_format::debug_print() const$/
divert	table.cc	/^int table_entry::divert(int, const string *)$/
do_depth	table.cc	/^void table_entry::do_depth()$/
do_width	table.cc	/^void table_entry::do_width()$/
entry_modifier	main.cc	/^entry_modifier::~entry_modifier()$/
format	main.cc	/^format::~format()$/
free_input_entry_format_list	main.cc	/^void free_input_entry_format_list(input_entry_form/
get	main.cc	/^int table_input::get()$/
input_filename	table.cc	/^  input_lineno(-1), input_filename(0)$/
is_double_line	table.cc	/^  virtual int is_double_line() { return 0; };$/
is_single_line	table.cc	/^  virtual int is_single_line() { return 0; };$/
line_type	table.cc	/^int table_entry::line_type()$/
lineno	table.cc	/^: contents(s), stuff(r), filename(fn), lineno(ln)$/
linesize	main.cc	/^: flags(0), tab_char('\\t'), linesize(0)$/
ncolumns	main.cc	/^format::format(int nr, int nc) : nrows(nr), ncolum/
next	main.cc	/^: entry_format(t), next(p)$/
note_double_vrule_on_left	table.cc	/^void table_entry::note_double_vrule_on_left()$/
note_double_vrule_on_right	table.cc	/^void table_entry::note_double_vrule_on_right()$/
position_vertically	table.cc	/^void simple_entry::position_vertically()$/
print	table.cc	/^void simple_entry::print()$/
printed	table.cc	/^stuff::stuff(int r) : row(r), next(0), printed(0)$/
prints	table.cc	/^inline void prints(char c)$/
process_data	main.cc	/^table *process_data(table_input &in, format *f, op/
process_format	main.cc	/^format *process_format(table_input &in, options *o/
process_input_file	main.cc	/^void process_input_file(FILE *fp)$/
process_options	main.cc	/^options *process_options(table_input &in)$/
set_location	table.cc	/^void table_entry::set_location()$/
simple_entry	table.cc	/^: simple_entry(m)$/
simple_print	table.cc	/^void simple_entry::simple_print(int)$/
simple_text_entry	table.cc	/^: simple_text_entry(s, m)$/
stagger	main.cc	/^: vertical_alignment(CENTER), zero_width(0), stagg/
state	main.cc	/^: fp(p), state(START)$/
strieq	main.cc	/^int strieq(const char *p, const char *q)$/
stuff	table.cc	/^stuff::~stuff()$/
table_entry	table.cc	/^table_entry::~table_entry()$/
text_entry	table.cc	/^text_entry::~text_entry()$/
text_stuff	table.cc	/^text_stuff::~text_stuff()$/
to_double_line_entry	table.cc	/^double_line_entry *table_entry::to_double_line_ent/
to_simple_entry	table.cc	/^simple_entry *table_entry::to_simple_entry()$/
to_single_line_entry	table.cc	/^single_line_entry *table_entry::to_single_line_ent/
type	main.cc	/^entry_format::entry_format() : type(LEFT)$/
unget	main.cc	/^void table_input::unget(char c)$/
vertical_rule	table.cc	/^vertical_rule::~vertical_rule()$/
