This file describes recent user-visible changes in groff.  Bug fixes
are not described.  There are more details in the man pages.

VERSION 1.01
============

The groff command now understands the gtroff `-a' and `-i' options.

With the `m' and `n' scale indicators, the scale factor is rounded
horizontally before being applied.  This makes (almost) no difference
for devices with `hor' equal to 1, but it makes groff with -Tascii or
-Tlatin1 behave more like nroff in its treatment of these scale
indicators.  Accordingly tmac.tty now calls the `nroff' request so
that the `n' condition will be true.

The device-specific macros (tmac.ps, tmac.dvi, tmac.tty and tmac.X)
have been made to work at least somewhat with -C.  In particular the
special characters defined by these macros now work with -C.

groff -Tdvi -p will now pass pic the -x flag; this will enable filling
of arrowheads and boxes, provided that your dvi driver supports the
latest version of the tpic specials.

Eqn
---

There is a new `-N' option that tells eqn not to allow newlines in
delimiters.  This allows eqn to recover better from missing closing
delimiters.  The groff command will pass on a `-N' option to eqn.

Grops
-----

You can now use psfig with grops.  See the file ps/psfig.diff.  I do
not recommend using psfig for new documents.

The command \X'ps: file F' is similar to \X'ps: exec ...' except that
the PostScript code is read from the file F instead of being contained
within the \X command.  This was added to support psfig.

Grodvi
------

There are font files HB and HI corresponding to cmsssbx10 and cmssi10.

Macros
------

The groff -me macros now work with the -C option.  As a result, they
may also work with Unix nroff/troff.

In -me, the $r and $R number registers now contain the line spacing as
a percentage of the pointsize expressed in units (normally about 120).
The previous definition was useless with low resolution devices such
as X75 and X100.

VERSION 1.00
============

A -ms-like macro-package is now included.

The name for the Icelandic lowercase eth character has been changed
from \(-d to \(Sd.

Troff
-----

There is a new request `nroff', which makes the `n' built-in condition
true and the `t' built-in condition false; also a new request `troff'
which undoes the effect of the `nroff' request.  This is intended only
for backward compatibility: it is usually better to test \n(.H or
\n(.V or to use the `c' built-in condition.

The \R escape sequence has been deleted.  Use \E instead.

There are `break' and `continue' requests for use with the `while'
request.

There is a request `hym' that can ensure that when the current
adjustment mode is not `b' a line will not be hyphenated if it is no
more than a given amount short, and a request `hys' that can ensure
that when the current adjustment mode is `b' a line will not be
hyphenated if it can be justified by adding no more than a given
amount of extra space to each word space.

There is a request `rj' similar to `ce' that right justifies lines.

A warning of type `space' will be given when a call is made to an
undefined request or macro with a name longer than two characters, and
the first two characters of the name make a name that is defined.
This is intended to find places where a space has been omitted been a
request or macro and its argument.  This type of warning is enabled by
default.

Pic
---

A comma is permitted between the arguments to the `reset' command.

For use with TeX, there is a new `-c' option that makes gpic treat
lines beginning with `.' in a way that is more compatible with tpic
(but ugly).

Eqn
---

It is no longer necessary to add `space 0' at the beginning of
complicated equations inside pictures.

`prime' is now treated as an ordinary character, as in Unix eqn.  The
previous behaviour of `prime' as an operator can now be obtained using
`opprime'.

Xditview
--------

There are two new devices X75-12 and X100-12 which are the same as X75
and X100 except that they are optimized for documents that use mostly
12 point text.

VERSION 0.6
===========

The installation process has been refined to make it easy for you to
share groff with someone who has the same type of machine as you but
does not have a C++ compiler.  See the end of the INSTALL file for
details.

There is a man page for the tfmtodit program which explains how to use
your own fonts with groff -Tdvi.

There is a man page for afmtodit which explains how to use your own
PostScript fonts with groff -Tps.

The \N escape sequence is now fully supported.  It can now be used to
access any character in a font by its output code, even if it doesn't
have a groff name.  This is made possible by a convention in the font
files that a character name of `---' refers to an unnamed character.
The drivers now all support the `N' command required for this.  The font
description files have been updated to include unnamed characters.

The `x' command in font description files has been removed: instead
any unknown commands are automatically made available to the drivers.
If you constructed your own font files with an earlier version of
tfmtodit or afmtodit, you must construct them again using the current
version.

Characters between 0200 and 0237 octal are no longer legal input
characters.  Note that these are not used in ISO 8859.

A command called `grog' has been added, similar to the `doctype'
command described in Kernighan and Pike.

Groff
-----

The groff command has some new options: -V prints the pipeline
instead of executing it; -P passes an argument to the postprocessor,
-L passes an argument to the spooler.

There is a C++ implementation of the groff command.  This handles some
things slightly better than the shell script.  In particular, it can
correctly handle arguments containing characters that have a special
meaning to the shell; it can give an error message when child
processes other than the last in the pipeline terminate abnormally;
its exit status can take account of the exit statuses of all its child
processes; it is a little more efficient; when geqn is used, it
searches for the eqnchar file in the same way that font metric files
are searched for, rather than expecting to find it in one particular
directory.

Gtroff
------

There is font translation feature: For example, you can tell gtroff to
use font `HR' whenever font `H' is requested with the line
  .ftr H HR
This would be useful for a document that uses `H' to refer to
Helvetica.

There are some new number registers: `.kern' contains the current kern
mode, `.lg' the current ligature mode, `.x' the major version number,
`.y' the minor version number, `.ce' the number of lines to be
centered in the current environment, `.trunc' the amount of vertical
space truncated by the most recently sprung vertical position trap,
`.ne' the amount of vertical space needed in the last `ne' request
that caused a vertical position trap to be sprung.

The `cf' request now behaves sensibly in a diversion.  If used in a
diversion, it will now arrange for the file to be copied to the output
when the diversion is reread.

There is a new request `trf' (transparent file) similar to `cf', but
more like `\!'.

There is a new escape sequence `\Y[xxx]', roughly equivalent to
`\X'\*[xxx]'', except that the contents of string or macro xxx are not
interpreted, and xxx may contain newlines.  This requires an output
format extension; the drivers have been modified to understand this.
Grops has also been modified to cope with newlines in the arguments to
\X commands; grops has a new \X command mdef, which is like def except
that it has a first argument giving the number of definitions.

There is a new warning category `escape' which warns about unknown
escape sequences.

The `fp' request now takes an optional third argument giving the external
name of the font.

The `\_' character is now automatically translated to `\(ul' as in troff.

The environment variable `GROFF_HYPHEN' gives the name of the file
containing the hyphenation patterns.

There is a `\C'xxx'' escape sequence equivalent to `\[xxx]'.

Characters ", ', ), ], *, \(dg are now initially transparent for the purposes
of end of sentence recognition.

There is an anti-recusion feature in the `char' request, so you can
say `.char \(bu \s+2\(bu\s-2'.

The limit on the number of font positions has been removed.
Accordingly `\n[.fp]' never returns 0.

The restriction on the number of numbered environments has been removed.

There is a new escape sequence `\E' that makes it possible to
guarantee that an escape sequence won't get interpreted in copy-mode.
The `\R' escape sequence is accordingly now deprecated.

Gpic
----

Arguments of the form `X anything X' (in the `copy thru', `sh', `for',
`if' and `define' constructs) can now be of the form `{ anything }'.

If the `linethick' variable is negative (as it now is initially),
lines will be drawn with a thickness proportional to the current point
size.

The `rand' function now takes no arguments and returns a number between
0 and 1.  The old syntax is still supported.

`^' can be used in expressions to indicate exponentiation.

In the `for' construct the argument to the by clause can be prefixed
by `*' to indicate that the increment is multiplicative.

A bare expression may be used as an attribute.  If the current
direction is `dir', then an attribute `expr' is equivalent to
`dir expr'

There is a `sprintf' construct that allows numbers to be formatted and used
wherever a quoted string can be used.

The height of a text object without an explicit height attribute is
the number of text strings associated with the object times the value
of the `textht' variable.

The maximum height and width of a picture is controlled by the
`maxpswid' and `maxpsht' variables.

Gtbl
----

Gtbl can now handle gracefully the situation where the `ce' request
has been applied to a table.

Geqn
----

The `ifdef' primitive has been generalized.

A tilde accent can be put underneath a box using `utilde'.  This
defined using a general `uaccent' primitive.

Grops
-----

There is a new PostScript font downloading scheme which handles font
downloading for imported illustrations.  Previously, the name of the
file containing the font was given in the `x download' line in the
groff font metric file.  Now, there is a `download' file which says
for each PostScript font name which file contains that font.  Grops
can also now handle inter-font dependencies, where one downloadable
font depends on some other (possibly downloadable) font.

The `T' font has been removed.  The characters it used to provide are
now provided by `char' definitions in tmac.ps. TSymbol.ps has also
been removed, and the tweaks it provided are now provided by `char'
definitions.
