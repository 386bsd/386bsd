/* llib-ldirent - lint library for -ldirent */

/* 
 * $Header: /f/osi/dirent/RCS/llib-ldirent,v 7.1 91/02/22 09:17:27 mrose Interim $
 *
 *
 * $Log:	llib-ldirent,v $
 * Revision 7.1  91/02/22  09:17:27  mrose
 * Interim 6.8
 * 
 * Revision 7.0  89/11/23  21:31:00  mrose
 * Release 6.0
 * 
 */

/*
 * This package was generously supplied by Doug Gwyn.  It is a public domain
 * implementation of the SVR3 directory access routines.
 *
 * I have slightly edited the package to produce a stand-alone library
 * (normally it updates libc.a).  The reason for this, is that the package
 * is used primarily for ISODE's ftam responder, and it's too much heartburn
 * to ask someone to reload libc.a just for that (sorry, doug!)
 *
 * I've also prepended a "_" to the names to avoid any conflicts with routines
 * which might already be installed (especially for lint)
 *
 */


/* LINTLIBRARY */

#include "general.h"
#include "manifest.h"
#include "usr.dirent.h"

/*  */

#ifndef	GETDENTS
/* open a directory stream */

DIR    *opendir (name)
char   *name;
{
    return opendir (name);
}


/* read next entry from a directory stream */

struct dirent *readdir (dp)
DIR    *dp;
{
    return readdir (dp);
}


/* report directory stream position */

off_t	telldir (dp)
DIR    *dp;
{
    return telldir (dp);
}


/* reposition a directory stream */

void	seekdir (dp, loc)
DIR    *dp;
off_t	loc;
{
    seekdir (dp, loc);
}


/* rewind a directory stream */

void	rewinddir (dp)
DIR    *dp;
{
    rewinddir (dp);
}


/* close a directory stream */

int	closedir (dp)
DIR    *dp;
{
    return closedir (dp);
}


/* get directory entries in a FS independent format */

int	getdents (fd, buffer, n)
int	fd;
char   *buffer;
unsigned int n;
{
    return getdents (fd, buffer, n);
}

#endif

/* get current working directory name */

char   *getcwd (buffer, n)
char   *buffer;
int	n;
{
    return getcwd (buffer, n);
}
