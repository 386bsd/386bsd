#!/bin/sh

# Copyright (c) 1993 Eric P. Allman
# Copyright (c) 1993 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#       @(#)makesendmail	8.5 (Berkeley) 2/27/94
#

#
#  A quick-and-dirty script to compile sendmail in the presence of
#  multiple architectures and Makefiles.
#

# determine machine architecture
arch=`uname -m`
case $arch
in
  sun4*)	arch=sun4;;

  9000/*)	arch=`echo $arch | sed -e 's/9000.//' -e 's/..$/xx/'`;;
esac

# determine operating system type
os=`uname -s`

# determine operating system release
rel=`uname -r`
rbase=`echo $rel | sed 's/\..*//''`

# now try to find a reasonable object directory
if [ -r obj.$os.$arch.$rel ]; then
	obj=obj.$os.$arch.$rel
elif [ -r obj.$os.$arch.$rbase.x ]; then
	obj=obj.$os.$arch.$rbase.x
elif [ -r obj.$os.$rel ]; then
	obj=obj.$os.$rel
elif [ -r obj.$os.$rbase.x ]; then
	obj=obj.$os.$rbase.x
elif [ -r obj.$os.$arch ]; then
	obj=obj.$os.$arch
elif [ -r obj.$arch.$rel ]; then
	obj=obj.$arch.$rel
elif [ -r obj.$arch.$rbase.x ]; then
	obj=obj.$arch.$rbase.x
elif [ -r obj.$os ]; then
	obj=obj.$os
elif [ -r obj.$arch ]; then
	obj=obj.$arch
elif [ -r obj.$rel ]; then
	obj=obj.$rel
else
	# no existing obj directory -- try to create one if Makefile found
	obj=obj.$os.$arch.$rel
	if [ -r Makefile.$os.$arch.$rel ]; then
		makefile=Makefile.$os.$arch.$rel
	elif [ -r Makefile.$os.$arch.$rbase.x ]; then
		makefile=Makefile.$os.$arch.$rbase.x
	elif [ -r Makefile.$os.$rel ]; then
		makefile=Makefile.$os.$rel
	elif [ -r Makefile.$os.$rbase.x ]; then
		makefile=Makefile.$os.$rbase.x
	elif [ -r Makefile.$os.$arch ]; then
		makefile=Makefile.$os.$arch
	elif [ -r Makefile.$arch.$rel ]; then
		makefile=Makefile.$arch.$rel
	elif [ -r Makefile.$arch.$rbase.x ]; then
		makefile=Makefile.$arch.$rbase.x
	elif [ -r Makefile.$os ]; then
		makefile=Makefile.$os
	elif [ -r Makefile.$arch ]; then
		makefile=Makefile.$arch
	elif [ -r Makefile.$rel ]; then
		makefile=Makefile.$rel
	else
		echo "Cannot determine how to support $arch.$os.$rel"
		exit 1
	fi
	echo "Creating $obj using $makefile"
	mkdir $obj
	(cd $obj; ln -s ../*.[ch158] ../sendmail.hf .; ln -s ../$makefile Makefile)
fi
echo "Making in $obj"
cd $obj
exec make -f Makefile $*
