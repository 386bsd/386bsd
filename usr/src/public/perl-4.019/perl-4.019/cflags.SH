case $CONFIG in
'')
    if test ! -f config.sh; then
	ln ../config.sh . || \
	ln ../../config.sh . || \
	ln ../../../config.sh . || \
	(echo "Can't find config.sh."; exit 1)
    fi
    . ./config.sh
    ;;
esac
: This forces SH files to create target in same directory as SH file.
: This is so that make depend always knows where to find SH derivatives.
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
echo "Extracting cflags (with variable substitutions)"
: This section of the file will have variable substitutions done on it.
: Move anything that needs config subs from !NO!SUBS! section to !GROK!THIS!.
: Protect any dollar signs and backticks that you do not want interpreted
: by putting a backslash in front.  You may delete these comments.
$spitshell >cflags <<!GROK!THIS!
!GROK!THIS!

: In the following dollars and backticks do not need the extra backslash.
$spitshell >>cflags <<'!NO!SUBS!'
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
case $CONFIG in
'')
    if test ! -f config.sh; then
	ln ../config.sh . || \
	ln ../../config.sh . || \
	ln ../../../config.sh . || \
	(echo "Can't find config.sh."; exit 1)
    fi 2>/dev/null
    . ./config.sh
    ;;
esac

also=': '
case $# in
1) also='echo 1>&2 "	  CCCMD = "'
esac

case $# in
0) set *.c; echo "The current C flags are:" ;;
esac

set `echo "$* " | sed 's/\.[oc] / /g'`

for file do

    case "$#" in
    1) ;;
    *) echo $n "    $file.c	$c" ;;
    esac

    : allow variables like toke_cflags to be evaluated

    eval 'eval ${'"${file}_cflags"'-""}'

    : or customize here

    case "$file" in
    array) ;;
    cmd) ;;
    cons) ;;
    consarg) ;;
    doarg) ;;
    doio) ;;
    dolist) ;;
    dump) ;;
    eval) ;;
    form) ;;
    hash) ;;
    malloc) ;;
    perl) ;;
    perly) ;;
    regcomp) ;;
    regexec) ;;
    stab) ;;
    str) ;;
    toke) ;;
    usersub) ;;
    util) ;;
    tarray) ;;
    tcmd) ;;
    tcons) ;;
    tconsarg) ;;
    tdoarg) ;;
    tdoio) ;;
    tdolist) ;;
    tdump) ;;
    teval) ;;
    tform) ;;
    thash) ;;
    tmalloc) ;;
    tperl) ;;
    tperly) ;;
    tregcomp) ;;
    tregexec) ;;
    tstab) ;;
    tstr) ;;
    ttoke) ;;
    tusersub) ;;
    tutil) ;;
    *) ;;
    esac

    echo "$cc -c $ccflags $optimize $large $split"
    eval "$also "'"$cc -c $ccflags $optimize $large $split"'

    . ./config.sh

done
!NO!SUBS!
chmod +x cflags
$eunicefix cflags
