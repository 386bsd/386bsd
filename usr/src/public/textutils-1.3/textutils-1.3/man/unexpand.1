.TH UNEXPAND 1L \" -*- nroff -*-
.SH NAME
unexpand \- convert spaces to tabs
.SH SYNOPSIS
.B unexpand
[\-tab1[,tab2[,...]]] [\-t tab1[,tab2[,...]]] [\-a]
[\-\-tabs=tab1[,tab2[,...]]] [\-\-all] [file...]
.SH DESCRIPTION
This manual page
documents the GNU version of
.BR unexpand .
.B unexpand
writes the contents of each given file, or the standard input if
none are given or when a file named `\-' is given, to the standard
output, with strings of two or more space or tab characters converted
to as many tabs as possible followed by as many spaces as are needed.
By default,
.B unexpand
converts only initial spaces and tabs (those that precede all non
space or tab characters) on each line.  It preserves
backspace characters in the output; they decrement the column count
for tab calculations.  By default, tabs are set at every 8th column.
.SS OPTIONS
.TP
.I "\-, \-t, \-\-tabs tab1[,tab2[,...]]"
If only one tab stop is given, set the tabs \fItab1\fP spaces apart
instead of the default 8.  Otherwise, set the tabs at columns
\fItab1\fP, \fItab2\fP, etc. (numbered from 0) and leave spaces and
tabs beyond the tabstops given unchanged.  If the tabstops are
specified with the
.I \-t
or
.I \-\-tabs
option, they can be separated by blanks as well as by commas.
This option implies the
.I \-a
option.
.TP
.I "\-a, \-\-all"
Convert all strings of two or more spaces or tabs, not just initial
ones, to tabs.
.PP
The long-named options can be introduced with `+' as well as `\-\-',
for compatibility with previous releases.  Eventually support for `+'
will be removed, because it is incompatible with the POSIX.2 standard.
