Mzic	zic.c	/^main(argc, argv)$/
NULLMAL	ialloc.c	/^#define NULLMAL(x)	((x) == NULL || (x) == MAL)$/
addleap	zic.c	/^addleap(t, positive, rolling)$/
addtt	zic.c	/^addtt(starttime, type)$/
addtype	zic.c	/^addtype(gmtoff, abbr, isdst, ttisstd)$/
adjleap	zic.c	/^adjleap()$/
associate	zic.c	/^associate()$/
byword	zic.c	/^byword(word, table)$/
ciequal	zic.c	/^ciequal(ap, bp)		\/* case-insensitive equality *\//
convert	zic.c	/^convert(val, buf)$/
dolink	zic.c	/^dolink(fromfile, tofile)$/
eat	zic.c	/^eat(name, num)$/
eats	zic.c	/^eats(name, num, rname, rnum)$/
ecatalloc	zic.c	/^#define ecatalloc(oldp, newp)	memcheck(icatalloc(o/
ecpyalloc	zic.c	/^#define ecpyalloc(ptr)		memcheck(icpyalloc(ptr))$/
eitol	zic.c	/^eitol(i)$/
emalloc	zic.c	/^#define emalloc(size)		memcheck(imalloc(size))$/
erealloc	zic.c	/^#define erealloc(ptr, size)	memcheck(irealloc(ptr,/
error	zic.c	/^error(string)$/
getfields	zic.c	/^getfields(cp)$/
gethms	zic.c	/^gethms(string, errstring, signable)$/
icalloc	ialloc.c	/^icalloc(nelem, elsize)$/
icatalloc	ialloc.c	/^icatalloc(old, new)$/
icfree	ialloc.c	/^icfree(p)$/
icpyalloc	ialloc.c	/^icpyalloc(string)$/
ifree	ialloc.c	/^ifree(p)$/
imalloc	ialloc.c	/^imalloc(n)$/
infile	zic.c	/^infile(name)$/
inleap	zic.c	/^inleap(fields, nfields)$/
inlink	zic.c	/^inlink(fields, nfields)$/
inrule	zic.c	/^inrule(fields, nfields)$/
inzcont	zic.c	/^inzcont(fields, nfields)$/
inzone	zic.c	/^inzone(fields, nfields)$/
inzsub	zic.c	/^inzsub(fields, nfields, iscont)$/
irealloc	ialloc.c	/^irealloc(pointer, size)$/
itsabbr	zic.c	/^itsabbr(abbr, word)$/
itsdir	zic.c	/^itsdir(name)$/
lowerit	zic.c	/^lowerit(a)$/
memcheck	zic.c	/^memcheck(ptr)$/
mkdirs	zic.c	/^mkdirs(name)$/
newabbr	zic.c	/^newabbr(string)$/
nonzero	ialloc.c	/^#define nonzero(n)	(((n) == 0) ? 1 : (n))$/
oadd	zic.c	/^oadd(t1, t2)$/
outzone	zic.c	/^outzone(zpfirst, zonecount)$/
puttzcode	zic.c	/^puttzcode(val, fp)$/
rcomp	zic.c	/^rcomp(cp1, cp2)$/
rpytime	zic.c	/^rpytime(rp, wantedy)$/
rulesub	zic.c	/^rulesub(rp, loyearp, hiyearp, typep, monthp, dayp,/
scheck	scheck.c	/^scheck(string, format)$/
setboundaries	zic.c	/^setboundaries()$/
tadd	zic.c	/^tadd(t1, t2)$/
usage	zic.c	/^usage()$/
writezone	zic.c	/^writezone(name)$/
yearistype	zic.c	/^yearistype(year, type)$/
