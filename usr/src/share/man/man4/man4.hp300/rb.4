.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)rb.4	5.2 (Berkeley) 3/27/91
.\"
.Dd March 27, 1991
.Dt RB 4 hp300
.Os
.Sh NAME
.Nm rb
.Nd
.Tn HP98720
``Renaissance'' device interface
.Sh DESCRIPTION
This driver is for the
.Tn HP98720
and 98721 graphics device, also known as
the Renaissance.  This driver has not been tested with all possible
combinations of frame buffer boards and scan boards installed in the device.
The driver merely checks for the existence of the device and does minimal set
up.
.Pp
The Renaissance can be configured at either the ``internal'' address
(frame buffer address 0x200000, control register space address 0x560000)
or at an external select code less than 32.
At the internal address it will be the ``preferred'' console device
(see
.Xr cons 4 ) .
The hardware installation manual describes the procedure for
setting these values.
.Pp
A user process communicates to the device initially by means of
.Xr ioctl 2
calls.  For the
.Tn HP-UX
.Xr ioctl 2
calls supported, refer to
.Tn HP-UX
manuals.
The
.Tn BSD
calls supported are:
.Bl -tag -width indent
.It Dv GRFIOCGINFO
Get Graphics Info
.Pp
Get info about device, setting the entries in the
.Ar grfinfo
structure, as defined in
.Aq Pa hpdev/grfioctl.h .
For the standard 98720, the number of planes should be 4.  The number of
colors would therefore be 15, excluding black.  If one 98722A frame buffer
board is installed, there will still be 4 planes, with the 4 planes on the
colormap board becoming overlay planes.  With each additional 98722 frame
buffer board 4 planes will be added up to a maximum of 32 planes total.
.It Dv GRFIOCON
Graphics On
.Pp
Turn graphics on by enabling
.Tn CRT
output.  The screen will come on, displaying
whatever is in the frame buffer, using whatever colormap is in place.
.It Dv GRFIOCOFF
Graphics Off
.Pp
Turn graphics off by disabling output to the
.Tn CRT .
The frame buffer contents
are not affected.
.It Dv GRFIOCMAP
Map Device to user space
.Pp
Map in control registers and framebuffer space. Once the device file is
mapped, the frame buffer structure is accessible.  The structure describing
the 98720 is defined in
.Pa hpdev/grf_rbreg.h .
.El
.Sh EXAMPLE
This is a short segment of code showing how the device is opened and mapped
into user process address space assuming that it is grf0:
.Bd -literal
struct rboxfb *rbox;
u_char *Addr, frame_buffer;
struct grfinfo gi;
int disp_fd;

disp_fd = open("/dev/grf0",1);

if (ioctl (disp_fd, GRFIOCGINFO, &gi) < 0) return -1;

(void) ioctl (disp_fd, GRFIOCON, 0);

Addr = (u_char *) 0;
if (ioctl (disp_fd, GRFIOCMAP, &Addr) < 0) {
	(void) ioctl (disp_fd, GRFIOCOFF, 0);
	return -1;
}
rbox = (rboxfb *) Addr;                         /* Control Registers   */
frame_buffer = (u_char *) Addr + gi.gd_regsize; /* Frame buffer memory */
.Ed
.Sh FILES
.Bl -tag -width /dev/MAKEDEV.hpux -compact
.It Pa /dev/grf?
.Bx
special file
.It Pa /dev/crt98720
.It Pa /dev/ocrt98720
.Tn HP-UX
.Em starbase
special files
.It Pa /dev/MAKEDEV.hpux
script for creating
.Tn HP-UX
special files
.El
.Sh DIAGNOSTICS
None under
.Bx .
The
.Tn HP-UX
.Tn CE.utilities
must be used.
.Sh ERRORS
.Bl -tag -width [EINVAL]
.It Bq Er ENODEV
no such device.
.It Bq Er EBUSY
Another process has the device open.
.It Bq Er EINVAL
Invalid ioctl specification.
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr grf 4 .
.Pp
For extensive code examples using the
Renaissance, see the X device dependent source.
.Sh HISTORY
The
.Nm
interface
.Ud
.Sh BUGS
Not tested for all configurations of scan board and frame buffer memory boards.
